import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  bigint: any;
  json: any;
  jsonb: any;
  timestamptz: any;
  uuid: any;
};

/** columns and relationships of "Attendee" */
export type Attendee = {
  __typename?: 'Attendee';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An array relationship */
  contentPeople: Array<ContentPerson>;
  /** An aggregated array relationship */
  contentPeople_aggregate: ContentPerson_Aggregate;
  createdAt: Scalars['timestamptz'];
  displayName: Scalars['String'];
  /** An array relationship */
  groupAttendees: Array<GroupAttendee>;
  /** An aggregated array relationship */
  groupAttendees_aggregate: GroupAttendee_Aggregate;
  id: Scalars['uuid'];
  /** An object relationship */
  invitation?: Maybe<Invitation>;
  /** A computed field, executes function "hasbeeninvited" */
  inviteSent?: Maybe<Scalars['Boolean']>;
  /** An object relationship */
  profile?: Maybe<AttendeeProfile>;
  /** An array relationship */
  roomParticipants: Array<RoomParticipant>;
  /** An aggregated array relationship */
  roomParticipants_aggregate: RoomParticipant_Aggregate;
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
};


/** columns and relationships of "Attendee" */
export type AttendeeContentPeopleArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** columns and relationships of "Attendee" */
export type AttendeeContentPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** columns and relationships of "Attendee" */
export type AttendeeGroupAttendeesArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** columns and relationships of "Attendee" */
export type AttendeeGroupAttendees_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** columns and relationships of "Attendee" */
export type AttendeeRoomParticipantsArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};


/** columns and relationships of "Attendee" */
export type AttendeeRoomParticipants_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};

/** columns and relationships of "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount = {
  __typename?: 'AttendeeGoogleAccount';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  googleAccountEmail: Scalars['String'];
  id: Scalars['uuid'];
  tokenData: Scalars['jsonb'];
  updatedAt: Scalars['timestamptz'];
  youTubeData?: Maybe<Scalars['jsonb']>;
};


/** columns and relationships of "AttendeeGoogleAccount" */
export type AttendeeGoogleAccountTokenDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "AttendeeGoogleAccount" */
export type AttendeeGoogleAccountYouTubeDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Aggregate = {
  __typename?: 'AttendeeGoogleAccount_aggregate';
  aggregate?: Maybe<AttendeeGoogleAccount_Aggregate_Fields>;
  nodes: Array<AttendeeGoogleAccount>;
};

/** aggregate fields of "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Aggregate_Fields = {
  __typename?: 'AttendeeGoogleAccount_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<AttendeeGoogleAccount_Max_Fields>;
  min?: Maybe<AttendeeGoogleAccount_Min_Fields>;
};


/** aggregate fields of "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<AttendeeGoogleAccount_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<AttendeeGoogleAccount_Max_Order_By>;
  min?: Maybe<AttendeeGoogleAccount_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type AttendeeGoogleAccount_Append_Input = {
  tokenData?: Maybe<Scalars['jsonb']>;
  youTubeData?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Arr_Rel_Insert_Input = {
  data: Array<AttendeeGoogleAccount_Insert_Input>;
  on_conflict?: Maybe<AttendeeGoogleAccount_On_Conflict>;
};

/** Boolean expression to filter rows from the table "AttendeeGoogleAccount". All fields are combined with a logical 'AND'. */
export type AttendeeGoogleAccount_Bool_Exp = {
  _and?: Maybe<Array<Maybe<AttendeeGoogleAccount_Bool_Exp>>>;
  _not?: Maybe<AttendeeGoogleAccount_Bool_Exp>;
  _or?: Maybe<Array<Maybe<AttendeeGoogleAccount_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  googleAccountEmail?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  tokenData?: Maybe<Jsonb_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  youTubeData?: Maybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "AttendeeGoogleAccount" */
export enum AttendeeGoogleAccount_Constraint {
  /** unique or primary key constraint */
  AttendeeGoogleAccountAttendeeIdGoogleAccountEmailKey = 'AttendeeGoogleAccount_attendeeId_googleAccountEmail_key',
  /** unique or primary key constraint */
  AttendeeGoogleAccountPkey = 'AttendeeGoogleAccount_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type AttendeeGoogleAccount_Delete_At_Path_Input = {
  tokenData?: Maybe<Array<Maybe<Scalars['String']>>>;
  youTubeData?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type AttendeeGoogleAccount_Delete_Elem_Input = {
  tokenData?: Maybe<Scalars['Int']>;
  youTubeData?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type AttendeeGoogleAccount_Delete_Key_Input = {
  tokenData?: Maybe<Scalars['String']>;
  youTubeData?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  googleAccountEmail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  tokenData?: Maybe<Scalars['jsonb']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  youTubeData?: Maybe<Scalars['jsonb']>;
};

/** aggregate max on columns */
export type AttendeeGoogleAccount_Max_Fields = {
  __typename?: 'AttendeeGoogleAccount_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  googleAccountEmail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  googleAccountEmail?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type AttendeeGoogleAccount_Min_Fields = {
  __typename?: 'AttendeeGoogleAccount_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  googleAccountEmail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  googleAccountEmail?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Mutation_Response = {
  __typename?: 'AttendeeGoogleAccount_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<AttendeeGoogleAccount>;
};

/** input type for inserting object relation for remote table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Obj_Rel_Insert_Input = {
  data: AttendeeGoogleAccount_Insert_Input;
  on_conflict?: Maybe<AttendeeGoogleAccount_On_Conflict>;
};

/** on conflict condition type for table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_On_Conflict = {
  constraint: AttendeeGoogleAccount_Constraint;
  update_columns: Array<AttendeeGoogleAccount_Update_Column>;
  where?: Maybe<AttendeeGoogleAccount_Bool_Exp>;
};

/** ordering options when selecting data from "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  googleAccountEmail?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tokenData?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  youTubeData?: Maybe<Order_By>;
};

/** primary key columns input for table: "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type AttendeeGoogleAccount_Prepend_Input = {
  tokenData?: Maybe<Scalars['jsonb']>;
  youTubeData?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "AttendeeGoogleAccount" */
export enum AttendeeGoogleAccount_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  GoogleAccountEmail = 'googleAccountEmail',
  /** column name */
  Id = 'id',
  /** column name */
  TokenData = 'tokenData',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  YouTubeData = 'youTubeData'
}

/** input type for updating data in table "AttendeeGoogleAccount" */
export type AttendeeGoogleAccount_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  googleAccountEmail?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  tokenData?: Maybe<Scalars['jsonb']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  youTubeData?: Maybe<Scalars['jsonb']>;
};

/** update columns of table "AttendeeGoogleAccount" */
export enum AttendeeGoogleAccount_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  GoogleAccountEmail = 'googleAccountEmail',
  /** column name */
  Id = 'id',
  /** column name */
  TokenData = 'tokenData',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  YouTubeData = 'youTubeData'
}

/** columns and relationships of "AttendeeProfile" */
export type AttendeeProfile = {
  __typename?: 'AttendeeProfile';
  affiliation?: Maybe<Scalars['String']>;
  affiliationURL?: Maybe<Scalars['String']>;
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  badges?: Maybe<Scalars['jsonb']>;
  bio?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at: Scalars['timestamptz'];
  github?: Maybe<Scalars['String']>;
  hasBeenEdited: Scalars['Boolean'];
  photoS3BucketName?: Maybe<Scalars['String']>;
  photoS3BucketRegion?: Maybe<Scalars['String']>;
  photoS3ObjectName?: Maybe<Scalars['String']>;
  photoURL_350x350?: Maybe<Scalars['String']>;
  photoURL_50x50?: Maybe<Scalars['String']>;
  pronouns?: Maybe<Scalars['jsonb']>;
  realName?: Maybe<Scalars['String']>;
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
  twitter?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
  website?: Maybe<Scalars['String']>;
};


/** columns and relationships of "AttendeeProfile" */
export type AttendeeProfileBadgesArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "AttendeeProfile" */
export type AttendeeProfilePronounsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "AttendeeProfile" */
export type AttendeeProfile_Aggregate = {
  __typename?: 'AttendeeProfile_aggregate';
  aggregate?: Maybe<AttendeeProfile_Aggregate_Fields>;
  nodes: Array<AttendeeProfile>;
};

/** aggregate fields of "AttendeeProfile" */
export type AttendeeProfile_Aggregate_Fields = {
  __typename?: 'AttendeeProfile_aggregate_fields';
  avg?: Maybe<AttendeeProfile_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<AttendeeProfile_Max_Fields>;
  min?: Maybe<AttendeeProfile_Min_Fields>;
  stddev?: Maybe<AttendeeProfile_Stddev_Fields>;
  stddev_pop?: Maybe<AttendeeProfile_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<AttendeeProfile_Stddev_Samp_Fields>;
  sum?: Maybe<AttendeeProfile_Sum_Fields>;
  var_pop?: Maybe<AttendeeProfile_Var_Pop_Fields>;
  var_samp?: Maybe<AttendeeProfile_Var_Samp_Fields>;
  variance?: Maybe<AttendeeProfile_Variance_Fields>;
};


/** aggregate fields of "AttendeeProfile" */
export type AttendeeProfile_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<AttendeeProfile_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "AttendeeProfile" */
export type AttendeeProfile_Aggregate_Order_By = {
  avg?: Maybe<AttendeeProfile_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<AttendeeProfile_Max_Order_By>;
  min?: Maybe<AttendeeProfile_Min_Order_By>;
  stddev?: Maybe<AttendeeProfile_Stddev_Order_By>;
  stddev_pop?: Maybe<AttendeeProfile_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<AttendeeProfile_Stddev_Samp_Order_By>;
  sum?: Maybe<AttendeeProfile_Sum_Order_By>;
  var_pop?: Maybe<AttendeeProfile_Var_Pop_Order_By>;
  var_samp?: Maybe<AttendeeProfile_Var_Samp_Order_By>;
  variance?: Maybe<AttendeeProfile_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type AttendeeProfile_Append_Input = {
  badges?: Maybe<Scalars['jsonb']>;
  pronouns?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "AttendeeProfile" */
export type AttendeeProfile_Arr_Rel_Insert_Input = {
  data: Array<AttendeeProfile_Insert_Input>;
  on_conflict?: Maybe<AttendeeProfile_On_Conflict>;
};

/** aggregate avg on columns */
export type AttendeeProfile_Avg_Fields = {
  __typename?: 'AttendeeProfile_avg_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Avg_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "AttendeeProfile". All fields are combined with a logical 'AND'. */
export type AttendeeProfile_Bool_Exp = {
  _and?: Maybe<Array<Maybe<AttendeeProfile_Bool_Exp>>>;
  _not?: Maybe<AttendeeProfile_Bool_Exp>;
  _or?: Maybe<Array<Maybe<AttendeeProfile_Bool_Exp>>>;
  affiliation?: Maybe<String_Comparison_Exp>;
  affiliationURL?: Maybe<String_Comparison_Exp>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  badges?: Maybe<Jsonb_Comparison_Exp>;
  bio?: Maybe<String_Comparison_Exp>;
  country?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  github?: Maybe<String_Comparison_Exp>;
  hasBeenEdited?: Maybe<Boolean_Comparison_Exp>;
  photoS3BucketName?: Maybe<String_Comparison_Exp>;
  photoS3BucketRegion?: Maybe<String_Comparison_Exp>;
  photoS3ObjectName?: Maybe<String_Comparison_Exp>;
  photoURL_350x350?: Maybe<String_Comparison_Exp>;
  photoURL_50x50?: Maybe<String_Comparison_Exp>;
  pronouns?: Maybe<Jsonb_Comparison_Exp>;
  realName?: Maybe<String_Comparison_Exp>;
  timezoneUTCOffset?: Maybe<Float_Comparison_Exp>;
  twitter?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  website?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "AttendeeProfile" */
export enum AttendeeProfile_Constraint {
  /** unique or primary key constraint */
  AttendeeProfileAttendeeIdKey = 'AttendeeProfile_attendeeId_key',
  /** unique or primary key constraint */
  AttendeeProfilePkey = 'AttendeeProfile_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type AttendeeProfile_Delete_At_Path_Input = {
  badges?: Maybe<Array<Maybe<Scalars['String']>>>;
  pronouns?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type AttendeeProfile_Delete_Elem_Input = {
  badges?: Maybe<Scalars['Int']>;
  pronouns?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type AttendeeProfile_Delete_Key_Input = {
  badges?: Maybe<Scalars['String']>;
  pronouns?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "AttendeeProfile" */
export type AttendeeProfile_Inc_Input = {
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** input type for inserting data into table "AttendeeProfile" */
export type AttendeeProfile_Insert_Input = {
  affiliation?: Maybe<Scalars['String']>;
  affiliationURL?: Maybe<Scalars['String']>;
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  badges?: Maybe<Scalars['jsonb']>;
  bio?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  github?: Maybe<Scalars['String']>;
  hasBeenEdited?: Maybe<Scalars['Boolean']>;
  photoS3BucketName?: Maybe<Scalars['String']>;
  photoS3BucketRegion?: Maybe<Scalars['String']>;
  photoS3ObjectName?: Maybe<Scalars['String']>;
  photoURL_350x350?: Maybe<Scalars['String']>;
  photoURL_50x50?: Maybe<Scalars['String']>;
  pronouns?: Maybe<Scalars['jsonb']>;
  realName?: Maybe<Scalars['String']>;
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
  twitter?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type AttendeeProfile_Max_Fields = {
  __typename?: 'AttendeeProfile_max_fields';
  affiliation?: Maybe<Scalars['String']>;
  affiliationURL?: Maybe<Scalars['String']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  bio?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  github?: Maybe<Scalars['String']>;
  photoS3BucketName?: Maybe<Scalars['String']>;
  photoS3BucketRegion?: Maybe<Scalars['String']>;
  photoS3ObjectName?: Maybe<Scalars['String']>;
  photoURL_350x350?: Maybe<Scalars['String']>;
  photoURL_50x50?: Maybe<Scalars['String']>;
  realName?: Maybe<Scalars['String']>;
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
  twitter?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Max_Order_By = {
  affiliation?: Maybe<Order_By>;
  affiliationURL?: Maybe<Order_By>;
  attendeeId?: Maybe<Order_By>;
  bio?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  github?: Maybe<Order_By>;
  photoS3BucketName?: Maybe<Order_By>;
  photoS3BucketRegion?: Maybe<Order_By>;
  photoS3ObjectName?: Maybe<Order_By>;
  photoURL_350x350?: Maybe<Order_By>;
  photoURL_50x50?: Maybe<Order_By>;
  realName?: Maybe<Order_By>;
  timezoneUTCOffset?: Maybe<Order_By>;
  twitter?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  website?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type AttendeeProfile_Min_Fields = {
  __typename?: 'AttendeeProfile_min_fields';
  affiliation?: Maybe<Scalars['String']>;
  affiliationURL?: Maybe<Scalars['String']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  bio?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  github?: Maybe<Scalars['String']>;
  photoS3BucketName?: Maybe<Scalars['String']>;
  photoS3BucketRegion?: Maybe<Scalars['String']>;
  photoS3ObjectName?: Maybe<Scalars['String']>;
  photoURL_350x350?: Maybe<Scalars['String']>;
  photoURL_50x50?: Maybe<Scalars['String']>;
  realName?: Maybe<Scalars['String']>;
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
  twitter?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Min_Order_By = {
  affiliation?: Maybe<Order_By>;
  affiliationURL?: Maybe<Order_By>;
  attendeeId?: Maybe<Order_By>;
  bio?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  github?: Maybe<Order_By>;
  photoS3BucketName?: Maybe<Order_By>;
  photoS3BucketRegion?: Maybe<Order_By>;
  photoS3ObjectName?: Maybe<Order_By>;
  photoURL_350x350?: Maybe<Order_By>;
  photoURL_50x50?: Maybe<Order_By>;
  realName?: Maybe<Order_By>;
  timezoneUTCOffset?: Maybe<Order_By>;
  twitter?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  website?: Maybe<Order_By>;
};

/** response of any mutation on the table "AttendeeProfile" */
export type AttendeeProfile_Mutation_Response = {
  __typename?: 'AttendeeProfile_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<AttendeeProfile>;
};

/** input type for inserting object relation for remote table "AttendeeProfile" */
export type AttendeeProfile_Obj_Rel_Insert_Input = {
  data: AttendeeProfile_Insert_Input;
  on_conflict?: Maybe<AttendeeProfile_On_Conflict>;
};

/** on conflict condition type for table "AttendeeProfile" */
export type AttendeeProfile_On_Conflict = {
  constraint: AttendeeProfile_Constraint;
  update_columns: Array<AttendeeProfile_Update_Column>;
  where?: Maybe<AttendeeProfile_Bool_Exp>;
};

/** ordering options when selecting data from "AttendeeProfile" */
export type AttendeeProfile_Order_By = {
  affiliation?: Maybe<Order_By>;
  affiliationURL?: Maybe<Order_By>;
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  badges?: Maybe<Order_By>;
  bio?: Maybe<Order_By>;
  country?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  github?: Maybe<Order_By>;
  hasBeenEdited?: Maybe<Order_By>;
  photoS3BucketName?: Maybe<Order_By>;
  photoS3BucketRegion?: Maybe<Order_By>;
  photoS3ObjectName?: Maybe<Order_By>;
  photoURL_350x350?: Maybe<Order_By>;
  photoURL_50x50?: Maybe<Order_By>;
  pronouns?: Maybe<Order_By>;
  realName?: Maybe<Order_By>;
  timezoneUTCOffset?: Maybe<Order_By>;
  twitter?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  website?: Maybe<Order_By>;
};

/** primary key columns input for table: "AttendeeProfile" */
export type AttendeeProfile_Pk_Columns_Input = {
  attendeeId: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type AttendeeProfile_Prepend_Input = {
  badges?: Maybe<Scalars['jsonb']>;
  pronouns?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "AttendeeProfile" */
export enum AttendeeProfile_Select_Column {
  /** column name */
  Affiliation = 'affiliation',
  /** column name */
  AffiliationUrl = 'affiliationURL',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  Badges = 'badges',
  /** column name */
  Bio = 'bio',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Github = 'github',
  /** column name */
  HasBeenEdited = 'hasBeenEdited',
  /** column name */
  PhotoS3BucketName = 'photoS3BucketName',
  /** column name */
  PhotoS3BucketRegion = 'photoS3BucketRegion',
  /** column name */
  PhotoS3ObjectName = 'photoS3ObjectName',
  /** column name */
  PhotoUrl_350x350 = 'photoURL_350x350',
  /** column name */
  PhotoUrl_50x50 = 'photoURL_50x50',
  /** column name */
  Pronouns = 'pronouns',
  /** column name */
  RealName = 'realName',
  /** column name */
  TimezoneUtcOffset = 'timezoneUTCOffset',
  /** column name */
  Twitter = 'twitter',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website'
}

/** input type for updating data in table "AttendeeProfile" */
export type AttendeeProfile_Set_Input = {
  affiliation?: Maybe<Scalars['String']>;
  affiliationURL?: Maybe<Scalars['String']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  badges?: Maybe<Scalars['jsonb']>;
  bio?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  github?: Maybe<Scalars['String']>;
  hasBeenEdited?: Maybe<Scalars['Boolean']>;
  photoS3BucketName?: Maybe<Scalars['String']>;
  photoS3BucketRegion?: Maybe<Scalars['String']>;
  photoS3ObjectName?: Maybe<Scalars['String']>;
  photoURL_350x350?: Maybe<Scalars['String']>;
  photoURL_50x50?: Maybe<Scalars['String']>;
  pronouns?: Maybe<Scalars['jsonb']>;
  realName?: Maybe<Scalars['String']>;
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
  twitter?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  website?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type AttendeeProfile_Stddev_Fields = {
  __typename?: 'AttendeeProfile_stddev_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Stddev_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type AttendeeProfile_Stddev_Pop_Fields = {
  __typename?: 'AttendeeProfile_stddev_pop_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Stddev_Pop_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type AttendeeProfile_Stddev_Samp_Fields = {
  __typename?: 'AttendeeProfile_stddev_samp_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Stddev_Samp_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type AttendeeProfile_Sum_Fields = {
  __typename?: 'AttendeeProfile_sum_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by sum() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Sum_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** update columns of table "AttendeeProfile" */
export enum AttendeeProfile_Update_Column {
  /** column name */
  Affiliation = 'affiliation',
  /** column name */
  AffiliationUrl = 'affiliationURL',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  Badges = 'badges',
  /** column name */
  Bio = 'bio',
  /** column name */
  Country = 'country',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Github = 'github',
  /** column name */
  HasBeenEdited = 'hasBeenEdited',
  /** column name */
  PhotoS3BucketName = 'photoS3BucketName',
  /** column name */
  PhotoS3BucketRegion = 'photoS3BucketRegion',
  /** column name */
  PhotoS3ObjectName = 'photoS3ObjectName',
  /** column name */
  PhotoUrl_350x350 = 'photoURL_350x350',
  /** column name */
  PhotoUrl_50x50 = 'photoURL_50x50',
  /** column name */
  Pronouns = 'pronouns',
  /** column name */
  RealName = 'realName',
  /** column name */
  TimezoneUtcOffset = 'timezoneUTCOffset',
  /** column name */
  Twitter = 'twitter',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Website = 'website'
}

/** aggregate var_pop on columns */
export type AttendeeProfile_Var_Pop_Fields = {
  __typename?: 'AttendeeProfile_var_pop_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Var_Pop_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type AttendeeProfile_Var_Samp_Fields = {
  __typename?: 'AttendeeProfile_var_samp_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Var_Samp_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type AttendeeProfile_Variance_Fields = {
  __typename?: 'AttendeeProfile_variance_fields';
  timezoneUTCOffset?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "AttendeeProfile" */
export type AttendeeProfile_Variance_Order_By = {
  timezoneUTCOffset?: Maybe<Order_By>;
};

/** aggregated selection of "Attendee" */
export type Attendee_Aggregate = {
  __typename?: 'Attendee_aggregate';
  aggregate?: Maybe<Attendee_Aggregate_Fields>;
  nodes: Array<Attendee>;
};

/** aggregate fields of "Attendee" */
export type Attendee_Aggregate_Fields = {
  __typename?: 'Attendee_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Attendee_Max_Fields>;
  min?: Maybe<Attendee_Min_Fields>;
};


/** aggregate fields of "Attendee" */
export type Attendee_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Attendee_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Attendee" */
export type Attendee_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Attendee_Max_Order_By>;
  min?: Maybe<Attendee_Min_Order_By>;
};

/** input type for inserting array relation for remote table "Attendee" */
export type Attendee_Arr_Rel_Insert_Input = {
  data: Array<Attendee_Insert_Input>;
  on_conflict?: Maybe<Attendee_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Attendee". All fields are combined with a logical 'AND'. */
export type Attendee_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Attendee_Bool_Exp>>>;
  _not?: Maybe<Attendee_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Attendee_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentPeople?: Maybe<ContentPerson_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  displayName?: Maybe<String_Comparison_Exp>;
  groupAttendees?: Maybe<GroupAttendee_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  invitation?: Maybe<Invitation_Bool_Exp>;
  profile?: Maybe<AttendeeProfile_Bool_Exp>;
  roomParticipants?: Maybe<RoomParticipant_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  userId?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Attendee" */
export enum Attendee_Constraint {
  /** unique or primary key constraint */
  AttendeeConferenceIdUserIdKey = 'Attendee_conferenceId_userId_key',
  /** unique or primary key constraint */
  AttendeePkey = 'Attendee_pkey'
}

/** input type for inserting data into table "Attendee" */
export type Attendee_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentPeople?: Maybe<ContentPerson_Arr_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  displayName?: Maybe<Scalars['String']>;
  groupAttendees?: Maybe<GroupAttendee_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  invitation?: Maybe<Invitation_Obj_Rel_Insert_Input>;
  profile?: Maybe<AttendeeProfile_Obj_Rel_Insert_Input>;
  roomParticipants?: Maybe<RoomParticipant_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  userId?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Attendee_Max_Fields = {
  __typename?: 'Attendee_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  displayName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "Attendee" */
export type Attendee_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  displayName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Attendee_Min_Fields = {
  __typename?: 'Attendee_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  displayName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "Attendee" */
export type Attendee_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  displayName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** response of any mutation on the table "Attendee" */
export type Attendee_Mutation_Response = {
  __typename?: 'Attendee_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Attendee>;
};

/** input type for inserting object relation for remote table "Attendee" */
export type Attendee_Obj_Rel_Insert_Input = {
  data: Attendee_Insert_Input;
  on_conflict?: Maybe<Attendee_On_Conflict>;
};

/** on conflict condition type for table "Attendee" */
export type Attendee_On_Conflict = {
  constraint: Attendee_Constraint;
  update_columns: Array<Attendee_Update_Column>;
  where?: Maybe<Attendee_Bool_Exp>;
};

/** ordering options when selecting data from "Attendee" */
export type Attendee_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentPeople_aggregate?: Maybe<ContentPerson_Aggregate_Order_By>;
  createdAt?: Maybe<Order_By>;
  displayName?: Maybe<Order_By>;
  groupAttendees_aggregate?: Maybe<GroupAttendee_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  invitation?: Maybe<Invitation_Order_By>;
  profile?: Maybe<AttendeeProfile_Order_By>;
  roomParticipants_aggregate?: Maybe<RoomParticipant_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  userId?: Maybe<Order_By>;
};

/** primary key columns input for table: "Attendee" */
export type Attendee_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Attendee" */
export enum Attendee_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DisplayName = 'displayName',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "Attendee" */
export type Attendee_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  displayName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** update columns of table "Attendee" */
export enum Attendee_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DisplayName = 'displayName',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UserId = 'userId'
}

/** expression to compare columns of type Boolean. All fields are combined with logical 'AND'. */
export type Boolean_Comparison_Exp = {
  _eq?: Maybe<Scalars['Boolean']>;
  _gt?: Maybe<Scalars['Boolean']>;
  _gte?: Maybe<Scalars['Boolean']>;
  _in?: Maybe<Array<Scalars['Boolean']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Boolean']>;
  _lte?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Scalars['Boolean']>;
  _nin?: Maybe<Array<Scalars['Boolean']>>;
};

/** columns and relationships of "Broadcast" */
export type Broadcast = {
  __typename?: 'Broadcast';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  data: Scalars['jsonb'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  id: Scalars['uuid'];
  to: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "Broadcast" */
export type BroadcastDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItem = {
  __typename?: 'BroadcastContentItem';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentItem?: Maybe<ContentItem>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  event?: Maybe<Event>;
  eventId?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  executedTransitions: Array<ExecutedTransitions>;
  /** An aggregated array relationship */
  executedTransitions_aggregate: ExecutedTransitions_Aggregate;
  /** An array relationship */
  fallbackForTransitions: Array<Transitions>;
  /** An aggregated array relationship */
  fallbackForTransitions_aggregate: Transitions_Aggregate;
  id: Scalars['uuid'];
  input: Scalars['jsonb'];
  /** An object relationship */
  inputType: InputType;
  inputTypeName: InputType_Enum;
  /** An array relationship */
  transitions: Array<Transitions>;
  /** An aggregated array relationship */
  transitions_aggregate: Transitions_Aggregate;
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItemExecutedTransitionsArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItemExecutedTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItemFallbackForTransitionsArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItemFallbackForTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItemInputArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItemTransitionsArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** columns and relationships of "BroadcastContentItem" */
export type BroadcastContentItemTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};

/** aggregated selection of "BroadcastContentItem" */
export type BroadcastContentItem_Aggregate = {
  __typename?: 'BroadcastContentItem_aggregate';
  aggregate?: Maybe<BroadcastContentItem_Aggregate_Fields>;
  nodes: Array<BroadcastContentItem>;
};

/** aggregate fields of "BroadcastContentItem" */
export type BroadcastContentItem_Aggregate_Fields = {
  __typename?: 'BroadcastContentItem_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<BroadcastContentItem_Max_Fields>;
  min?: Maybe<BroadcastContentItem_Min_Fields>;
};


/** aggregate fields of "BroadcastContentItem" */
export type BroadcastContentItem_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<BroadcastContentItem_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "BroadcastContentItem" */
export type BroadcastContentItem_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<BroadcastContentItem_Max_Order_By>;
  min?: Maybe<BroadcastContentItem_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type BroadcastContentItem_Append_Input = {
  input?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "BroadcastContentItem" */
export type BroadcastContentItem_Arr_Rel_Insert_Input = {
  data: Array<BroadcastContentItem_Insert_Input>;
  on_conflict?: Maybe<BroadcastContentItem_On_Conflict>;
};

/** Boolean expression to filter rows from the table "BroadcastContentItem". All fields are combined with a logical 'AND'. */
export type BroadcastContentItem_Bool_Exp = {
  _and?: Maybe<Array<Maybe<BroadcastContentItem_Bool_Exp>>>;
  _not?: Maybe<BroadcastContentItem_Bool_Exp>;
  _or?: Maybe<Array<Maybe<BroadcastContentItem_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentItem?: Maybe<ContentItem_Bool_Exp>;
  contentItemId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  executedTransitions?: Maybe<ExecutedTransitions_Bool_Exp>;
  fallbackForTransitions?: Maybe<Transitions_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  input?: Maybe<Jsonb_Comparison_Exp>;
  inputType?: Maybe<InputType_Bool_Exp>;
  inputTypeName?: Maybe<InputType_Enum_Comparison_Exp>;
  transitions?: Maybe<Transitions_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "BroadcastContentItem" */
export enum BroadcastContentItem_Constraint {
  /** unique or primary key constraint */
  BroadcastContentItemContentItemIdKey = 'BroadcastContentItem_contentItemId_key',
  /** unique or primary key constraint */
  BroadcastContentItemEventIdKey = 'BroadcastContentItem_eventId_key',
  /** unique or primary key constraint */
  BroadcastContentItemPkey = 'BroadcastContentItem_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type BroadcastContentItem_Delete_At_Path_Input = {
  input?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type BroadcastContentItem_Delete_Elem_Input = {
  input?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type BroadcastContentItem_Delete_Key_Input = {
  input?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "BroadcastContentItem" */
export type BroadcastContentItem_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItem?: Maybe<ContentItem_Obj_Rel_Insert_Input>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  executedTransitions?: Maybe<ExecutedTransitions_Arr_Rel_Insert_Input>;
  fallbackForTransitions?: Maybe<Transitions_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  input?: Maybe<Scalars['jsonb']>;
  inputType?: Maybe<InputType_Obj_Rel_Insert_Input>;
  inputTypeName?: Maybe<InputType_Enum>;
  transitions?: Maybe<Transitions_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type BroadcastContentItem_Max_Fields = {
  __typename?: 'BroadcastContentItem_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "BroadcastContentItem" */
export type BroadcastContentItem_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type BroadcastContentItem_Min_Fields = {
  __typename?: 'BroadcastContentItem_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "BroadcastContentItem" */
export type BroadcastContentItem_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "BroadcastContentItem" */
export type BroadcastContentItem_Mutation_Response = {
  __typename?: 'BroadcastContentItem_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<BroadcastContentItem>;
};

/** input type for inserting object relation for remote table "BroadcastContentItem" */
export type BroadcastContentItem_Obj_Rel_Insert_Input = {
  data: BroadcastContentItem_Insert_Input;
  on_conflict?: Maybe<BroadcastContentItem_On_Conflict>;
};

/** on conflict condition type for table "BroadcastContentItem" */
export type BroadcastContentItem_On_Conflict = {
  constraint: BroadcastContentItem_Constraint;
  update_columns: Array<BroadcastContentItem_Update_Column>;
  where?: Maybe<BroadcastContentItem_Bool_Exp>;
};

/** ordering options when selecting data from "BroadcastContentItem" */
export type BroadcastContentItem_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentItem?: Maybe<ContentItem_Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  executedTransitions_aggregate?: Maybe<ExecutedTransitions_Aggregate_Order_By>;
  fallbackForTransitions_aggregate?: Maybe<Transitions_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  input?: Maybe<Order_By>;
  inputType?: Maybe<InputType_Order_By>;
  inputTypeName?: Maybe<Order_By>;
  transitions_aggregate?: Maybe<Transitions_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "BroadcastContentItem" */
export type BroadcastContentItem_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type BroadcastContentItem_Prepend_Input = {
  input?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "BroadcastContentItem" */
export enum BroadcastContentItem_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  Input = 'input',
  /** column name */
  InputTypeName = 'inputTypeName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "BroadcastContentItem" */
export type BroadcastContentItem_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  input?: Maybe<Scalars['jsonb']>;
  inputTypeName?: Maybe<InputType_Enum>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "BroadcastContentItem" */
export enum BroadcastContentItem_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  Input = 'input',
  /** column name */
  InputTypeName = 'inputTypeName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** aggregated selection of "Broadcast" */
export type Broadcast_Aggregate = {
  __typename?: 'Broadcast_aggregate';
  aggregate?: Maybe<Broadcast_Aggregate_Fields>;
  nodes: Array<Broadcast>;
};

/** aggregate fields of "Broadcast" */
export type Broadcast_Aggregate_Fields = {
  __typename?: 'Broadcast_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Broadcast_Max_Fields>;
  min?: Maybe<Broadcast_Min_Fields>;
};


/** aggregate fields of "Broadcast" */
export type Broadcast_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Broadcast_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Broadcast" */
export type Broadcast_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Broadcast_Max_Order_By>;
  min?: Maybe<Broadcast_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Broadcast_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "Broadcast" */
export type Broadcast_Arr_Rel_Insert_Input = {
  data: Array<Broadcast_Insert_Input>;
  on_conflict?: Maybe<Broadcast_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Broadcast". All fields are combined with a logical 'AND'. */
export type Broadcast_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Broadcast_Bool_Exp>>>;
  _not?: Maybe<Broadcast_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Broadcast_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  to?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Broadcast" */
export enum Broadcast_Constraint {
  /** unique or primary key constraint */
  BroadcastPkey = 'Broadcast_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Broadcast_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Broadcast_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Broadcast_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "Broadcast" */
export type Broadcast_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  to?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Broadcast_Max_Fields = {
  __typename?: 'Broadcast_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  to?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Broadcast" */
export type Broadcast_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  to?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Broadcast_Min_Fields = {
  __typename?: 'Broadcast_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  to?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Broadcast" */
export type Broadcast_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  to?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Broadcast" */
export type Broadcast_Mutation_Response = {
  __typename?: 'Broadcast_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Broadcast>;
};

/** input type for inserting object relation for remote table "Broadcast" */
export type Broadcast_Obj_Rel_Insert_Input = {
  data: Broadcast_Insert_Input;
  on_conflict?: Maybe<Broadcast_On_Conflict>;
};

/** on conflict condition type for table "Broadcast" */
export type Broadcast_On_Conflict = {
  constraint: Broadcast_Constraint;
  update_columns: Array<Broadcast_Update_Column>;
  where?: Maybe<Broadcast_Bool_Exp>;
};

/** ordering options when selecting data from "Broadcast" */
export type Broadcast_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  to?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "Broadcast" */
export type Broadcast_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Broadcast_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "Broadcast" */
export enum Broadcast_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Data = 'data',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  To = 'to',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Broadcast" */
export type Broadcast_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  to?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "Broadcast" */
export enum Broadcast_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Data = 'data',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  To = 'to',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type ChatRemoteToken = {
  __typename?: 'ChatRemoteToken';
  expiry: Scalars['Int'];
  jwt: Scalars['String'];
};

/** columns and relationships of "Conference" */
export type Conference = {
  __typename?: 'Conference';
  /** An array relationship */
  attendees: Array<Attendee>;
  /** An aggregated array relationship */
  attendees_aggregate: Attendee_Aggregate;
  /** An array relationship */
  chats: Array<Chat_Chat>;
  /** An aggregated array relationship */
  chats_aggregate: Chat_Chat_Aggregate;
  /** An array relationship */
  configurations: Array<ConferenceConfiguration>;
  /** An aggregated array relationship */
  configurations_aggregate: ConferenceConfiguration_Aggregate;
  /** An array relationship */
  contentGroups: Array<ContentGroup>;
  /** An aggregated array relationship */
  contentGroups_aggregate: ContentGroup_Aggregate;
  /** An array relationship */
  contentPeople: Array<ContentPerson>;
  /** An aggregated array relationship */
  contentPeople_aggregate: ContentPerson_Aggregate;
  createdAt: Scalars['timestamptz'];
  createdBy: Scalars['String'];
  /** An object relationship */
  creator: User;
  /** An object relationship */
  demoCode: ConferenceDemoCode;
  demoCodeId: Scalars['uuid'];
  /** An array relationship */
  groups: Array<Group>;
  /** An aggregated array relationship */
  groups_aggregate: Group_Aggregate;
  /** An array relationship */
  hallways: Array<Hallway>;
  /** An aggregated array relationship */
  hallways_aggregate: Hallway_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  originatingDatas: Array<OriginatingData>;
  /** An aggregated array relationship */
  originatingDatas_aggregate: OriginatingData_Aggregate;
  /** An array relationship */
  publicPermissions: Array<FlatUnauthPermission>;
  /** An aggregated array relationship */
  publicPermissions_aggregate: FlatUnauthPermission_Aggregate;
  /** An array relationship */
  roles: Array<Role>;
  /** An aggregated array relationship */
  roles_aggregate: Role_Aggregate;
  /** An array relationship */
  rooms: Array<Room>;
  /** An aggregated array relationship */
  rooms_aggregate: Room_Aggregate;
  shortName: Scalars['String'];
  /** An array relationship */
  shufflePeriods: Array<Room_ShufflePeriod>;
  /** An aggregated array relationship */
  shufflePeriods_aggregate: Room_ShufflePeriod_Aggregate;
  slug: Scalars['String'];
  /** An array relationship */
  tags: Array<Tag>;
  /** An aggregated array relationship */
  tags_aggregate: Tag_Aggregate;
  updatedAt: Scalars['timestamptz'];
  /** An array relationship */
  userPermissions: Array<FlatUserPermission>;
  /** An aggregated array relationship */
  userPermissions_aggregate: FlatUserPermission_Aggregate;
};


/** columns and relationships of "Conference" */
export type ConferenceAttendeesArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceAttendees_AggregateArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceChatsArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceChats_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceConfigurationsArgs = {
  distinct_on?: Maybe<Array<ConferenceConfiguration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceConfiguration_Order_By>>;
  where?: Maybe<ConferenceConfiguration_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceConfigurations_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferenceConfiguration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceConfiguration_Order_By>>;
  where?: Maybe<ConferenceConfiguration_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceContentGroupsArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceContentGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceContentPeopleArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceContentPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceGroupsArgs = {
  distinct_on?: Maybe<Array<Group_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Group_Order_By>>;
  where?: Maybe<Group_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<Group_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Group_Order_By>>;
  where?: Maybe<Group_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceHallwaysArgs = {
  distinct_on?: Maybe<Array<Hallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hallway_Order_By>>;
  where?: Maybe<Hallway_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceHallways_AggregateArgs = {
  distinct_on?: Maybe<Array<Hallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hallway_Order_By>>;
  where?: Maybe<Hallway_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceOriginatingDatasArgs = {
  distinct_on?: Maybe<Array<OriginatingData_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OriginatingData_Order_By>>;
  where?: Maybe<OriginatingData_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceOriginatingDatas_AggregateArgs = {
  distinct_on?: Maybe<Array<OriginatingData_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OriginatingData_Order_By>>;
  where?: Maybe<OriginatingData_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferencePublicPermissionsArgs = {
  distinct_on?: Maybe<Array<FlatUnauthPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUnauthPermission_Order_By>>;
  where?: Maybe<FlatUnauthPermission_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferencePublicPermissions_AggregateArgs = {
  distinct_on?: Maybe<Array<FlatUnauthPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUnauthPermission_Order_By>>;
  where?: Maybe<FlatUnauthPermission_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceRolesArgs = {
  distinct_on?: Maybe<Array<Role_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Role_Order_By>>;
  where?: Maybe<Role_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceRoles_AggregateArgs = {
  distinct_on?: Maybe<Array<Role_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Role_Order_By>>;
  where?: Maybe<Role_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceRoomsArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceShufflePeriodsArgs = {
  distinct_on?: Maybe<Array<Room_ShufflePeriod_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShufflePeriod_Order_By>>;
  where?: Maybe<Room_ShufflePeriod_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceShufflePeriods_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShufflePeriod_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShufflePeriod_Order_By>>;
  where?: Maybe<Room_ShufflePeriod_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceTagsArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceTags_AggregateArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceUserPermissionsArgs = {
  distinct_on?: Maybe<Array<FlatUserPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUserPermission_Order_By>>;
  where?: Maybe<FlatUserPermission_Bool_Exp>;
};


/** columns and relationships of "Conference" */
export type ConferenceUserPermissions_AggregateArgs = {
  distinct_on?: Maybe<Array<FlatUserPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUserPermission_Order_By>>;
  where?: Maybe<FlatUserPermission_Bool_Exp>;
};

/** columns and relationships of "ConferenceConfiguration" */
export type ConferenceConfiguration = {
  __typename?: 'ConferenceConfiguration';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  key: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  value: Scalars['jsonb'];
};


/** columns and relationships of "ConferenceConfiguration" */
export type ConferenceConfigurationValueArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "ConferenceConfiguration" */
export type ConferenceConfiguration_Aggregate = {
  __typename?: 'ConferenceConfiguration_aggregate';
  aggregate?: Maybe<ConferenceConfiguration_Aggregate_Fields>;
  nodes: Array<ConferenceConfiguration>;
};

/** aggregate fields of "ConferenceConfiguration" */
export type ConferenceConfiguration_Aggregate_Fields = {
  __typename?: 'ConferenceConfiguration_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ConferenceConfiguration_Max_Fields>;
  min?: Maybe<ConferenceConfiguration_Min_Fields>;
};


/** aggregate fields of "ConferenceConfiguration" */
export type ConferenceConfiguration_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ConferenceConfiguration_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ConferenceConfiguration" */
export type ConferenceConfiguration_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ConferenceConfiguration_Max_Order_By>;
  min?: Maybe<ConferenceConfiguration_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ConferenceConfiguration_Append_Input = {
  value?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "ConferenceConfiguration" */
export type ConferenceConfiguration_Arr_Rel_Insert_Input = {
  data: Array<ConferenceConfiguration_Insert_Input>;
  on_conflict?: Maybe<ConferenceConfiguration_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ConferenceConfiguration". All fields are combined with a logical 'AND'. */
export type ConferenceConfiguration_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ConferenceConfiguration_Bool_Exp>>>;
  _not?: Maybe<ConferenceConfiguration_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ConferenceConfiguration_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  key?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  value?: Maybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "ConferenceConfiguration" */
export enum ConferenceConfiguration_Constraint {
  /** unique or primary key constraint */
  ConferenceConfigurationConferenceIdKeyKey = 'ConferenceConfiguration_conferenceId_key_key',
  /** unique or primary key constraint */
  ConferenceConfigurationPkey = 'ConferenceConfiguration_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ConferenceConfiguration_Delete_At_Path_Input = {
  value?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ConferenceConfiguration_Delete_Elem_Input = {
  value?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ConferenceConfiguration_Delete_Key_Input = {
  value?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "ConferenceConfiguration" */
export type ConferenceConfiguration_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  key?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  value?: Maybe<Scalars['jsonb']>;
};

/** aggregate max on columns */
export type ConferenceConfiguration_Max_Fields = {
  __typename?: 'ConferenceConfiguration_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  key?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ConferenceConfiguration" */
export type ConferenceConfiguration_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ConferenceConfiguration_Min_Fields = {
  __typename?: 'ConferenceConfiguration_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  key?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ConferenceConfiguration" */
export type ConferenceConfiguration_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "ConferenceConfiguration" */
export type ConferenceConfiguration_Mutation_Response = {
  __typename?: 'ConferenceConfiguration_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ConferenceConfiguration>;
};

/** input type for inserting object relation for remote table "ConferenceConfiguration" */
export type ConferenceConfiguration_Obj_Rel_Insert_Input = {
  data: ConferenceConfiguration_Insert_Input;
  on_conflict?: Maybe<ConferenceConfiguration_On_Conflict>;
};

/** on conflict condition type for table "ConferenceConfiguration" */
export type ConferenceConfiguration_On_Conflict = {
  constraint: ConferenceConfiguration_Constraint;
  update_columns: Array<ConferenceConfiguration_Update_Column>;
  where?: Maybe<ConferenceConfiguration_Bool_Exp>;
};

/** ordering options when selecting data from "ConferenceConfiguration" */
export type ConferenceConfiguration_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  value?: Maybe<Order_By>;
};

/** primary key columns input for table: "ConferenceConfiguration" */
export type ConferenceConfiguration_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ConferenceConfiguration_Prepend_Input = {
  value?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "ConferenceConfiguration" */
export enum ConferenceConfiguration_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Key = 'key',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  Value = 'value'
}

/** input type for updating data in table "ConferenceConfiguration" */
export type ConferenceConfiguration_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  key?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  value?: Maybe<Scalars['jsonb']>;
};

/** update columns of table "ConferenceConfiguration" */
export enum ConferenceConfiguration_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Key = 'key',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  Value = 'value'
}

/** columns and relationships of "ConferenceDemoCode" */
export type ConferenceDemoCode = {
  __typename?: 'ConferenceDemoCode';
  /** An object relationship */
  conference?: Maybe<Conference>;
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  note?: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  usedBy?: Maybe<User>;
  usedById?: Maybe<Scalars['String']>;
};

/** aggregated selection of "ConferenceDemoCode" */
export type ConferenceDemoCode_Aggregate = {
  __typename?: 'ConferenceDemoCode_aggregate';
  aggregate?: Maybe<ConferenceDemoCode_Aggregate_Fields>;
  nodes: Array<ConferenceDemoCode>;
};

/** aggregate fields of "ConferenceDemoCode" */
export type ConferenceDemoCode_Aggregate_Fields = {
  __typename?: 'ConferenceDemoCode_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ConferenceDemoCode_Max_Fields>;
  min?: Maybe<ConferenceDemoCode_Min_Fields>;
};


/** aggregate fields of "ConferenceDemoCode" */
export type ConferenceDemoCode_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ConferenceDemoCode_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ConferenceDemoCode" */
export type ConferenceDemoCode_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ConferenceDemoCode_Max_Order_By>;
  min?: Maybe<ConferenceDemoCode_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ConferenceDemoCode" */
export type ConferenceDemoCode_Arr_Rel_Insert_Input = {
  data: Array<ConferenceDemoCode_Insert_Input>;
  on_conflict?: Maybe<ConferenceDemoCode_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ConferenceDemoCode". All fields are combined with a logical 'AND'. */
export type ConferenceDemoCode_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ConferenceDemoCode_Bool_Exp>>>;
  _not?: Maybe<ConferenceDemoCode_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ConferenceDemoCode_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  note?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  usedBy?: Maybe<User_Bool_Exp>;
  usedById?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ConferenceDemoCode" */
export enum ConferenceDemoCode_Constraint {
  /** unique or primary key constraint */
  ConferenceDemoCodesPkey = 'ConferenceDemoCodes_pkey'
}

/** input type for inserting data into table "ConferenceDemoCode" */
export type ConferenceDemoCode_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  usedBy?: Maybe<User_Obj_Rel_Insert_Input>;
  usedById?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type ConferenceDemoCode_Max_Fields = {
  __typename?: 'ConferenceDemoCode_max_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  usedById?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "ConferenceDemoCode" */
export type ConferenceDemoCode_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  usedById?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ConferenceDemoCode_Min_Fields = {
  __typename?: 'ConferenceDemoCode_min_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  usedById?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "ConferenceDemoCode" */
export type ConferenceDemoCode_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  usedById?: Maybe<Order_By>;
};

/** response of any mutation on the table "ConferenceDemoCode" */
export type ConferenceDemoCode_Mutation_Response = {
  __typename?: 'ConferenceDemoCode_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ConferenceDemoCode>;
};

/** input type for inserting object relation for remote table "ConferenceDemoCode" */
export type ConferenceDemoCode_Obj_Rel_Insert_Input = {
  data: ConferenceDemoCode_Insert_Input;
  on_conflict?: Maybe<ConferenceDemoCode_On_Conflict>;
};

/** on conflict condition type for table "ConferenceDemoCode" */
export type ConferenceDemoCode_On_Conflict = {
  constraint: ConferenceDemoCode_Constraint;
  update_columns: Array<ConferenceDemoCode_Update_Column>;
  where?: Maybe<ConferenceDemoCode_Bool_Exp>;
};

/** ordering options when selecting data from "ConferenceDemoCode" */
export type ConferenceDemoCode_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  note?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  usedBy?: Maybe<User_Order_By>;
  usedById?: Maybe<Order_By>;
};

/** primary key columns input for table: "ConferenceDemoCode" */
export type ConferenceDemoCode_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ConferenceDemoCode" */
export enum ConferenceDemoCode_Select_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UsedById = 'usedById'
}

/** input type for updating data in table "ConferenceDemoCode" */
export type ConferenceDemoCode_Set_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  usedById?: Maybe<Scalars['String']>;
};

/** update columns of table "ConferenceDemoCode" */
export enum ConferenceDemoCode_Update_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Note = 'note',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UsedById = 'usedById'
}

/** columns and relationships of "ConferencePrepareJob" */
export type ConferencePrepareJob = {
  __typename?: 'ConferencePrepareJob';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  jobStatus: JobStatus;
  jobStatusName: JobStatus_Enum;
  message?: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
  /** An array relationship */
  videoRenderJobs: Array<VideoRenderJob>;
  /** An aggregated array relationship */
  videoRenderJobs_aggregate: VideoRenderJob_Aggregate;
};


/** columns and relationships of "ConferencePrepareJob" */
export type ConferencePrepareJobVideoRenderJobsArgs = {
  distinct_on?: Maybe<Array<VideoRenderJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<VideoRenderJob_Order_By>>;
  where?: Maybe<VideoRenderJob_Bool_Exp>;
};


/** columns and relationships of "ConferencePrepareJob" */
export type ConferencePrepareJobVideoRenderJobs_AggregateArgs = {
  distinct_on?: Maybe<Array<VideoRenderJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<VideoRenderJob_Order_By>>;
  where?: Maybe<VideoRenderJob_Bool_Exp>;
};

/** aggregated selection of "ConferencePrepareJob" */
export type ConferencePrepareJob_Aggregate = {
  __typename?: 'ConferencePrepareJob_aggregate';
  aggregate?: Maybe<ConferencePrepareJob_Aggregate_Fields>;
  nodes: Array<ConferencePrepareJob>;
};

/** aggregate fields of "ConferencePrepareJob" */
export type ConferencePrepareJob_Aggregate_Fields = {
  __typename?: 'ConferencePrepareJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ConferencePrepareJob_Max_Fields>;
  min?: Maybe<ConferencePrepareJob_Min_Fields>;
};


/** aggregate fields of "ConferencePrepareJob" */
export type ConferencePrepareJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ConferencePrepareJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ConferencePrepareJob" */
export type ConferencePrepareJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ConferencePrepareJob_Max_Order_By>;
  min?: Maybe<ConferencePrepareJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ConferencePrepareJob" */
export type ConferencePrepareJob_Arr_Rel_Insert_Input = {
  data: Array<ConferencePrepareJob_Insert_Input>;
  on_conflict?: Maybe<ConferencePrepareJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ConferencePrepareJob". All fields are combined with a logical 'AND'. */
export type ConferencePrepareJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ConferencePrepareJob_Bool_Exp>>>;
  _not?: Maybe<ConferencePrepareJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ConferencePrepareJob_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  jobStatus?: Maybe<JobStatus_Bool_Exp>;
  jobStatusName?: Maybe<JobStatus_Enum_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  videoRenderJobs?: Maybe<VideoRenderJob_Bool_Exp>;
};

/** unique or primary key constraints on table "ConferencePrepareJob" */
export enum ConferencePrepareJob_Constraint {
  /** unique or primary key constraint */
  ConferencePrepareJobPkey = 'ConferencePrepareJob_pkey'
}

/** input type for inserting data into table "ConferencePrepareJob" */
export type ConferencePrepareJob_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatus?: Maybe<JobStatus_Obj_Rel_Insert_Input>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoRenderJobs?: Maybe<VideoRenderJob_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ConferencePrepareJob_Max_Fields = {
  __typename?: 'ConferencePrepareJob_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ConferencePrepareJob" */
export type ConferencePrepareJob_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ConferencePrepareJob_Min_Fields = {
  __typename?: 'ConferencePrepareJob_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ConferencePrepareJob" */
export type ConferencePrepareJob_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "ConferencePrepareJob" */
export type ConferencePrepareJob_Mutation_Response = {
  __typename?: 'ConferencePrepareJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ConferencePrepareJob>;
};

/** input type for inserting object relation for remote table "ConferencePrepareJob" */
export type ConferencePrepareJob_Obj_Rel_Insert_Input = {
  data: ConferencePrepareJob_Insert_Input;
  on_conflict?: Maybe<ConferencePrepareJob_On_Conflict>;
};

/** on conflict condition type for table "ConferencePrepareJob" */
export type ConferencePrepareJob_On_Conflict = {
  constraint: ConferencePrepareJob_Constraint;
  update_columns: Array<ConferencePrepareJob_Update_Column>;
  where?: Maybe<ConferencePrepareJob_Bool_Exp>;
};

/** ordering options when selecting data from "ConferencePrepareJob" */
export type ConferencePrepareJob_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatus?: Maybe<JobStatus_Order_By>;
  jobStatusName?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  videoRenderJobs_aggregate?: Maybe<VideoRenderJob_Aggregate_Order_By>;
};

/** primary key columns input for table: "ConferencePrepareJob" */
export type ConferencePrepareJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ConferencePrepareJob" */
export enum ConferencePrepareJob_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "ConferencePrepareJob" */
export type ConferencePrepareJob_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "ConferencePrepareJob" */
export enum ConferencePrepareJob_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type ConferencePrepareOutput = {
  __typename?: 'ConferencePrepareOutput';
  message?: Maybe<Scalars['String']>;
  success: Scalars['Boolean'];
};

/** aggregated selection of "Conference" */
export type Conference_Aggregate = {
  __typename?: 'Conference_aggregate';
  aggregate?: Maybe<Conference_Aggregate_Fields>;
  nodes: Array<Conference>;
};

/** aggregate fields of "Conference" */
export type Conference_Aggregate_Fields = {
  __typename?: 'Conference_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Conference_Max_Fields>;
  min?: Maybe<Conference_Min_Fields>;
};


/** aggregate fields of "Conference" */
export type Conference_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Conference_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Conference" */
export type Conference_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Conference_Max_Order_By>;
  min?: Maybe<Conference_Min_Order_By>;
};

/** input type for inserting array relation for remote table "Conference" */
export type Conference_Arr_Rel_Insert_Input = {
  data: Array<Conference_Insert_Input>;
  on_conflict?: Maybe<Conference_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Conference". All fields are combined with a logical 'AND'. */
export type Conference_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Conference_Bool_Exp>>>;
  _not?: Maybe<Conference_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Conference_Bool_Exp>>>;
  attendees?: Maybe<Attendee_Bool_Exp>;
  chats?: Maybe<Chat_Chat_Bool_Exp>;
  configurations?: Maybe<ConferenceConfiguration_Bool_Exp>;
  contentGroups?: Maybe<ContentGroup_Bool_Exp>;
  contentPeople?: Maybe<ContentPerson_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  createdBy?: Maybe<String_Comparison_Exp>;
  creator?: Maybe<User_Bool_Exp>;
  demoCode?: Maybe<ConferenceDemoCode_Bool_Exp>;
  demoCodeId?: Maybe<Uuid_Comparison_Exp>;
  groups?: Maybe<Group_Bool_Exp>;
  hallways?: Maybe<Hallway_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  originatingDatas?: Maybe<OriginatingData_Bool_Exp>;
  publicPermissions?: Maybe<FlatUnauthPermission_Bool_Exp>;
  roles?: Maybe<Role_Bool_Exp>;
  rooms?: Maybe<Room_Bool_Exp>;
  shortName?: Maybe<String_Comparison_Exp>;
  shufflePeriods?: Maybe<Room_ShufflePeriod_Bool_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  tags?: Maybe<Tag_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  userPermissions?: Maybe<FlatUserPermission_Bool_Exp>;
};

/** unique or primary key constraints on table "Conference" */
export enum Conference_Constraint {
  /** unique or primary key constraint */
  ConferenceDemoCodeIdKey = 'Conference_demoCodeId_key',
  /** unique or primary key constraint */
  ConferenceNameKey = 'Conference_name_key',
  /** unique or primary key constraint */
  ConferencePkey = 'Conference_pkey',
  /** unique or primary key constraint */
  ConferenceShortNameKey = 'Conference_shortName_key',
  /** unique or primary key constraint */
  ConferenceSlugKey = 'Conference_slug_key'
}

/** input type for inserting data into table "Conference" */
export type Conference_Insert_Input = {
  attendees?: Maybe<Attendee_Arr_Rel_Insert_Input>;
  chats?: Maybe<Chat_Chat_Arr_Rel_Insert_Input>;
  configurations?: Maybe<ConferenceConfiguration_Arr_Rel_Insert_Input>;
  contentGroups?: Maybe<ContentGroup_Arr_Rel_Insert_Input>;
  contentPeople?: Maybe<ContentPerson_Arr_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdBy?: Maybe<Scalars['String']>;
  creator?: Maybe<User_Obj_Rel_Insert_Input>;
  demoCode?: Maybe<ConferenceDemoCode_Obj_Rel_Insert_Input>;
  demoCodeId?: Maybe<Scalars['uuid']>;
  groups?: Maybe<Group_Arr_Rel_Insert_Input>;
  hallways?: Maybe<Hallway_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDatas?: Maybe<OriginatingData_Arr_Rel_Insert_Input>;
  roles?: Maybe<Role_Arr_Rel_Insert_Input>;
  rooms?: Maybe<Room_Arr_Rel_Insert_Input>;
  shortName?: Maybe<Scalars['String']>;
  shufflePeriods?: Maybe<Room_ShufflePeriod_Arr_Rel_Insert_Input>;
  slug?: Maybe<Scalars['String']>;
  tags?: Maybe<Tag_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Conference_Max_Fields = {
  __typename?: 'Conference_max_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdBy?: Maybe<Scalars['String']>;
  demoCodeId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  shortName?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Conference" */
export type Conference_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  demoCodeId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  shortName?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Conference_Min_Fields = {
  __typename?: 'Conference_min_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdBy?: Maybe<Scalars['String']>;
  demoCodeId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  shortName?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Conference" */
export type Conference_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  demoCodeId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  shortName?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Conference" */
export type Conference_Mutation_Response = {
  __typename?: 'Conference_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Conference>;
};

/** input type for inserting object relation for remote table "Conference" */
export type Conference_Obj_Rel_Insert_Input = {
  data: Conference_Insert_Input;
  on_conflict?: Maybe<Conference_On_Conflict>;
};

/** on conflict condition type for table "Conference" */
export type Conference_On_Conflict = {
  constraint: Conference_Constraint;
  update_columns: Array<Conference_Update_Column>;
  where?: Maybe<Conference_Bool_Exp>;
};

/** ordering options when selecting data from "Conference" */
export type Conference_Order_By = {
  attendees_aggregate?: Maybe<Attendee_Aggregate_Order_By>;
  chats_aggregate?: Maybe<Chat_Chat_Aggregate_Order_By>;
  configurations_aggregate?: Maybe<ConferenceConfiguration_Aggregate_Order_By>;
  contentGroups_aggregate?: Maybe<ContentGroup_Aggregate_Order_By>;
  contentPeople_aggregate?: Maybe<ContentPerson_Aggregate_Order_By>;
  createdAt?: Maybe<Order_By>;
  createdBy?: Maybe<Order_By>;
  creator?: Maybe<User_Order_By>;
  demoCode?: Maybe<ConferenceDemoCode_Order_By>;
  demoCodeId?: Maybe<Order_By>;
  groups_aggregate?: Maybe<Group_Aggregate_Order_By>;
  hallways_aggregate?: Maybe<Hallway_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDatas_aggregate?: Maybe<OriginatingData_Aggregate_Order_By>;
  publicPermissions_aggregate?: Maybe<FlatUnauthPermission_Aggregate_Order_By>;
  roles_aggregate?: Maybe<Role_Aggregate_Order_By>;
  rooms_aggregate?: Maybe<Room_Aggregate_Order_By>;
  shortName?: Maybe<Order_By>;
  shufflePeriods_aggregate?: Maybe<Room_ShufflePeriod_Aggregate_Order_By>;
  slug?: Maybe<Order_By>;
  tags_aggregate?: Maybe<Tag_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
  userPermissions_aggregate?: Maybe<FlatUserPermission_Aggregate_Order_By>;
};

/** primary key columns input for table: "Conference" */
export type Conference_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Conference" */
export enum Conference_Select_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedBy = 'createdBy',
  /** column name */
  DemoCodeId = 'demoCodeId',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ShortName = 'shortName',
  /** column name */
  Slug = 'slug',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Conference" */
export type Conference_Set_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  createdBy?: Maybe<Scalars['String']>;
  demoCodeId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  shortName?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "Conference" */
export enum Conference_Update_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  CreatedBy = 'createdBy',
  /** column name */
  DemoCodeId = 'demoCodeId',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  ShortName = 'shortName',
  /** column name */
  Slug = 'slug',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type ConfirmInvitationInput = {
  confirmationCode: Scalars['String'];
  inviteCode: Scalars['uuid'];
};

export type ConfirmInvitationOutput = {
  __typename?: 'ConfirmInvitationOutput';
  confSlug?: Maybe<Scalars['String']>;
  ok: Scalars['String'];
};

/** columns and relationships of "ContentGroup" */
export type ContentGroup = {
  __typename?: 'ContentGroup';
  /** An object relationship */
  chat?: Maybe<Chat_Chat>;
  chatId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An array relationship */
  contentGroupTags: Array<ContentGroupTag>;
  /** An aggregated array relationship */
  contentGroupTags_aggregate: ContentGroupTag_Aggregate;
  /** An object relationship */
  contentGroupType: ContentGroupType;
  contentGroupTypeName: ContentGroupType_Enum;
  /** An array relationship */
  contentItems: Array<ContentItem>;
  /** An aggregated array relationship */
  contentItems_aggregate: ContentItem_Aggregate;
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  events: Array<Event>;
  /** An aggregated array relationship */
  events_aggregate: Event_Aggregate;
  /** An array relationship */
  hallways: Array<ContentGroupHallway>;
  /** An aggregated array relationship */
  hallways_aggregate: ContentGroupHallway_Aggregate;
  id: Scalars['uuid'];
  /** An object relationship */
  originatingData?: Maybe<OriginatingData>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  people: Array<ContentGroupPerson>;
  /** An aggregated array relationship */
  people_aggregate: ContentGroupPerson_Aggregate;
  /** An array relationship */
  requiredContentItems: Array<RequiredContentItem>;
  /** An aggregated array relationship */
  requiredContentItems_aggregate: RequiredContentItem_Aggregate;
  /** An object relationship */
  room?: Maybe<Room>;
  /** An array relationship */
  rooms: Array<Room>;
  /** An aggregated array relationship */
  rooms_aggregate: Room_Aggregate;
  shortTitle?: Maybe<Scalars['String']>;
  title: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupContentGroupTagsArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupContentGroupTags_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupContentItemsArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupContentItems_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupEventsArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupEvents_AggregateArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupHallwaysArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupHallways_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupPeopleArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupRequiredContentItemsArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupRequiredContentItems_AggregateArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupRoomsArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "ContentGroup" */
export type ContentGroupRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};

/** columns and relationships of "ContentGroupHallway" */
export type ContentGroupHallway = {
  __typename?: 'ContentGroupHallway';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentGroup: ContentGroup;
  groupId: Scalars['uuid'];
  /** An object relationship */
  hallway: Hallway;
  hallwayId: Scalars['uuid'];
  id: Scalars['uuid'];
  layout?: Maybe<Scalars['jsonb']>;
  priority?: Maybe<Scalars['Int']>;
};


/** columns and relationships of "ContentGroupHallway" */
export type ContentGroupHallwayLayoutArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "ContentGroupHallway" */
export type ContentGroupHallway_Aggregate = {
  __typename?: 'ContentGroupHallway_aggregate';
  aggregate?: Maybe<ContentGroupHallway_Aggregate_Fields>;
  nodes: Array<ContentGroupHallway>;
};

/** aggregate fields of "ContentGroupHallway" */
export type ContentGroupHallway_Aggregate_Fields = {
  __typename?: 'ContentGroupHallway_aggregate_fields';
  avg?: Maybe<ContentGroupHallway_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentGroupHallway_Max_Fields>;
  min?: Maybe<ContentGroupHallway_Min_Fields>;
  stddev?: Maybe<ContentGroupHallway_Stddev_Fields>;
  stddev_pop?: Maybe<ContentGroupHallway_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ContentGroupHallway_Stddev_Samp_Fields>;
  sum?: Maybe<ContentGroupHallway_Sum_Fields>;
  var_pop?: Maybe<ContentGroupHallway_Var_Pop_Fields>;
  var_samp?: Maybe<ContentGroupHallway_Var_Samp_Fields>;
  variance?: Maybe<ContentGroupHallway_Variance_Fields>;
};


/** aggregate fields of "ContentGroupHallway" */
export type ContentGroupHallway_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentGroupHallway" */
export type ContentGroupHallway_Aggregate_Order_By = {
  avg?: Maybe<ContentGroupHallway_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<ContentGroupHallway_Max_Order_By>;
  min?: Maybe<ContentGroupHallway_Min_Order_By>;
  stddev?: Maybe<ContentGroupHallway_Stddev_Order_By>;
  stddev_pop?: Maybe<ContentGroupHallway_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<ContentGroupHallway_Stddev_Samp_Order_By>;
  sum?: Maybe<ContentGroupHallway_Sum_Order_By>;
  var_pop?: Maybe<ContentGroupHallway_Var_Pop_Order_By>;
  var_samp?: Maybe<ContentGroupHallway_Var_Samp_Order_By>;
  variance?: Maybe<ContentGroupHallway_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ContentGroupHallway_Append_Input = {
  layout?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "ContentGroupHallway" */
export type ContentGroupHallway_Arr_Rel_Insert_Input = {
  data: Array<ContentGroupHallway_Insert_Input>;
  on_conflict?: Maybe<ContentGroupHallway_On_Conflict>;
};

/** aggregate avg on columns */
export type ContentGroupHallway_Avg_Fields = {
  __typename?: 'ContentGroupHallway_avg_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Avg_Order_By = {
  priority?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ContentGroupHallway". All fields are combined with a logical 'AND'. */
export type ContentGroupHallway_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentGroupHallway_Bool_Exp>>>;
  _not?: Maybe<ContentGroupHallway_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentGroupHallway_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroup?: Maybe<ContentGroup_Bool_Exp>;
  groupId?: Maybe<Uuid_Comparison_Exp>;
  hallway?: Maybe<Hallway_Bool_Exp>;
  hallwayId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  layout?: Maybe<Jsonb_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "ContentGroupHallway" */
export enum ContentGroupHallway_Constraint {
  /** unique or primary key constraint */
  ContentGroupHallwayPkey = 'ContentGroupHallway_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ContentGroupHallway_Delete_At_Path_Input = {
  layout?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ContentGroupHallway_Delete_Elem_Input = {
  layout?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ContentGroupHallway_Delete_Key_Input = {
  layout?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "ContentGroupHallway" */
export type ContentGroupHallway_Inc_Input = {
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "ContentGroupHallway" */
export type ContentGroupHallway_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroup?: Maybe<ContentGroup_Obj_Rel_Insert_Input>;
  groupId?: Maybe<Scalars['uuid']>;
  hallway?: Maybe<Hallway_Obj_Rel_Insert_Input>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  layout?: Maybe<Scalars['jsonb']>;
  priority?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type ContentGroupHallway_Max_Fields = {
  __typename?: 'ContentGroupHallway_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  groupId?: Maybe<Scalars['uuid']>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  hallwayId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentGroupHallway_Min_Fields = {
  __typename?: 'ContentGroupHallway_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  groupId?: Maybe<Scalars['uuid']>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  hallwayId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentGroupHallway" */
export type ContentGroupHallway_Mutation_Response = {
  __typename?: 'ContentGroupHallway_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentGroupHallway>;
};

/** input type for inserting object relation for remote table "ContentGroupHallway" */
export type ContentGroupHallway_Obj_Rel_Insert_Input = {
  data: ContentGroupHallway_Insert_Input;
  on_conflict?: Maybe<ContentGroupHallway_On_Conflict>;
};

/** on conflict condition type for table "ContentGroupHallway" */
export type ContentGroupHallway_On_Conflict = {
  constraint: ContentGroupHallway_Constraint;
  update_columns: Array<ContentGroupHallway_Update_Column>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};

/** ordering options when selecting data from "ContentGroupHallway" */
export type ContentGroupHallway_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroup?: Maybe<ContentGroup_Order_By>;
  groupId?: Maybe<Order_By>;
  hallway?: Maybe<Hallway_Order_By>;
  hallwayId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  layout?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** primary key columns input for table: "ContentGroupHallway" */
export type ContentGroupHallway_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ContentGroupHallway_Prepend_Input = {
  layout?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "ContentGroupHallway" */
export enum ContentGroupHallway_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  HallwayId = 'hallwayId',
  /** column name */
  Id = 'id',
  /** column name */
  Layout = 'layout',
  /** column name */
  Priority = 'priority'
}

/** input type for updating data in table "ContentGroupHallway" */
export type ContentGroupHallway_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  groupId?: Maybe<Scalars['uuid']>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  layout?: Maybe<Scalars['jsonb']>;
  priority?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type ContentGroupHallway_Stddev_Fields = {
  __typename?: 'ContentGroupHallway_stddev_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Stddev_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ContentGroupHallway_Stddev_Pop_Fields = {
  __typename?: 'ContentGroupHallway_stddev_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Stddev_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ContentGroupHallway_Stddev_Samp_Fields = {
  __typename?: 'ContentGroupHallway_stddev_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Stddev_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type ContentGroupHallway_Sum_Fields = {
  __typename?: 'ContentGroupHallway_sum_fields';
  priority?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Sum_Order_By = {
  priority?: Maybe<Order_By>;
};

/** update columns of table "ContentGroupHallway" */
export enum ContentGroupHallway_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  HallwayId = 'hallwayId',
  /** column name */
  Id = 'id',
  /** column name */
  Layout = 'layout',
  /** column name */
  Priority = 'priority'
}

/** aggregate var_pop on columns */
export type ContentGroupHallway_Var_Pop_Fields = {
  __typename?: 'ContentGroupHallway_var_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Var_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ContentGroupHallway_Var_Samp_Fields = {
  __typename?: 'ContentGroupHallway_var_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Var_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type ContentGroupHallway_Variance_Fields = {
  __typename?: 'ContentGroupHallway_variance_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ContentGroupHallway" */
export type ContentGroupHallway_Variance_Order_By = {
  priority?: Maybe<Order_By>;
};

/** columns and relationships of "ContentGroupPerson" */
export type ContentGroupPerson = {
  __typename?: 'ContentGroupPerson';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  group: ContentGroup;
  groupId: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  person: ContentPerson;
  personId: Scalars['uuid'];
  priority?: Maybe<Scalars['Int']>;
  roleName: Scalars['String'];
};

/** aggregated selection of "ContentGroupPerson" */
export type ContentGroupPerson_Aggregate = {
  __typename?: 'ContentGroupPerson_aggregate';
  aggregate?: Maybe<ContentGroupPerson_Aggregate_Fields>;
  nodes: Array<ContentGroupPerson>;
};

/** aggregate fields of "ContentGroupPerson" */
export type ContentGroupPerson_Aggregate_Fields = {
  __typename?: 'ContentGroupPerson_aggregate_fields';
  avg?: Maybe<ContentGroupPerson_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentGroupPerson_Max_Fields>;
  min?: Maybe<ContentGroupPerson_Min_Fields>;
  stddev?: Maybe<ContentGroupPerson_Stddev_Fields>;
  stddev_pop?: Maybe<ContentGroupPerson_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<ContentGroupPerson_Stddev_Samp_Fields>;
  sum?: Maybe<ContentGroupPerson_Sum_Fields>;
  var_pop?: Maybe<ContentGroupPerson_Var_Pop_Fields>;
  var_samp?: Maybe<ContentGroupPerson_Var_Samp_Fields>;
  variance?: Maybe<ContentGroupPerson_Variance_Fields>;
};


/** aggregate fields of "ContentGroupPerson" */
export type ContentGroupPerson_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentGroupPerson" */
export type ContentGroupPerson_Aggregate_Order_By = {
  avg?: Maybe<ContentGroupPerson_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<ContentGroupPerson_Max_Order_By>;
  min?: Maybe<ContentGroupPerson_Min_Order_By>;
  stddev?: Maybe<ContentGroupPerson_Stddev_Order_By>;
  stddev_pop?: Maybe<ContentGroupPerson_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<ContentGroupPerson_Stddev_Samp_Order_By>;
  sum?: Maybe<ContentGroupPerson_Sum_Order_By>;
  var_pop?: Maybe<ContentGroupPerson_Var_Pop_Order_By>;
  var_samp?: Maybe<ContentGroupPerson_Var_Samp_Order_By>;
  variance?: Maybe<ContentGroupPerson_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "ContentGroupPerson" */
export type ContentGroupPerson_Arr_Rel_Insert_Input = {
  data: Array<ContentGroupPerson_Insert_Input>;
  on_conflict?: Maybe<ContentGroupPerson_On_Conflict>;
};

/** aggregate avg on columns */
export type ContentGroupPerson_Avg_Fields = {
  __typename?: 'ContentGroupPerson_avg_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Avg_Order_By = {
  priority?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "ContentGroupPerson". All fields are combined with a logical 'AND'. */
export type ContentGroupPerson_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentGroupPerson_Bool_Exp>>>;
  _not?: Maybe<ContentGroupPerson_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentGroupPerson_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  group?: Maybe<ContentGroup_Bool_Exp>;
  groupId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  person?: Maybe<ContentPerson_Bool_Exp>;
  personId?: Maybe<Uuid_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  roleName?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ContentGroupPerson" */
export enum ContentGroupPerson_Constraint {
  /** unique or primary key constraint */
  ContentItemPersonPkey = 'ContentItemPerson_pkey',
  /** unique or primary key constraint */
  ContentItemPersonRoleNamePersonIdGroupIdKey = 'ContentItemPerson_roleName_personId_groupId_key'
}

/** input type for incrementing integer column in table "ContentGroupPerson" */
export type ContentGroupPerson_Inc_Input = {
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "ContentGroupPerson" */
export type ContentGroupPerson_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  group?: Maybe<ContentGroup_Obj_Rel_Insert_Input>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  person?: Maybe<ContentPerson_Obj_Rel_Insert_Input>;
  personId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  roleName?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type ContentGroupPerson_Max_Fields = {
  __typename?: 'ContentGroupPerson_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  personId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  roleName?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  personId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  roleName?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentGroupPerson_Min_Fields = {
  __typename?: 'ContentGroupPerson_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  personId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  roleName?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  personId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  roleName?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentGroupPerson" */
export type ContentGroupPerson_Mutation_Response = {
  __typename?: 'ContentGroupPerson_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentGroupPerson>;
};

/** input type for inserting object relation for remote table "ContentGroupPerson" */
export type ContentGroupPerson_Obj_Rel_Insert_Input = {
  data: ContentGroupPerson_Insert_Input;
  on_conflict?: Maybe<ContentGroupPerson_On_Conflict>;
};

/** on conflict condition type for table "ContentGroupPerson" */
export type ContentGroupPerson_On_Conflict = {
  constraint: ContentGroupPerson_Constraint;
  update_columns: Array<ContentGroupPerson_Update_Column>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};

/** ordering options when selecting data from "ContentGroupPerson" */
export type ContentGroupPerson_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  group?: Maybe<ContentGroup_Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  person?: Maybe<ContentPerson_Order_By>;
  personId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  roleName?: Maybe<Order_By>;
};

/** primary key columns input for table: "ContentGroupPerson" */
export type ContentGroupPerson_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ContentGroupPerson" */
export enum ContentGroupPerson_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  PersonId = 'personId',
  /** column name */
  Priority = 'priority',
  /** column name */
  RoleName = 'roleName'
}

/** input type for updating data in table "ContentGroupPerson" */
export type ContentGroupPerson_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  personId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  roleName?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type ContentGroupPerson_Stddev_Fields = {
  __typename?: 'ContentGroupPerson_stddev_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Stddev_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type ContentGroupPerson_Stddev_Pop_Fields = {
  __typename?: 'ContentGroupPerson_stddev_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Stddev_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type ContentGroupPerson_Stddev_Samp_Fields = {
  __typename?: 'ContentGroupPerson_stddev_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Stddev_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type ContentGroupPerson_Sum_Fields = {
  __typename?: 'ContentGroupPerson_sum_fields';
  priority?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Sum_Order_By = {
  priority?: Maybe<Order_By>;
};

/** update columns of table "ContentGroupPerson" */
export enum ContentGroupPerson_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  PersonId = 'personId',
  /** column name */
  Priority = 'priority',
  /** column name */
  RoleName = 'roleName'
}

/** aggregate var_pop on columns */
export type ContentGroupPerson_Var_Pop_Fields = {
  __typename?: 'ContentGroupPerson_var_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Var_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type ContentGroupPerson_Var_Samp_Fields = {
  __typename?: 'ContentGroupPerson_var_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Var_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type ContentGroupPerson_Variance_Fields = {
  __typename?: 'ContentGroupPerson_variance_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "ContentGroupPerson" */
export type ContentGroupPerson_Variance_Order_By = {
  priority?: Maybe<Order_By>;
};

/** columns and relationships of "ContentGroupTag" */
export type ContentGroupTag = {
  __typename?: 'ContentGroupTag';
  /** An object relationship */
  contentGroup: ContentGroup;
  contentGroupId: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  tag: Tag;
  tagId: Scalars['uuid'];
};

/** aggregated selection of "ContentGroupTag" */
export type ContentGroupTag_Aggregate = {
  __typename?: 'ContentGroupTag_aggregate';
  aggregate?: Maybe<ContentGroupTag_Aggregate_Fields>;
  nodes: Array<ContentGroupTag>;
};

/** aggregate fields of "ContentGroupTag" */
export type ContentGroupTag_Aggregate_Fields = {
  __typename?: 'ContentGroupTag_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentGroupTag_Max_Fields>;
  min?: Maybe<ContentGroupTag_Min_Fields>;
};


/** aggregate fields of "ContentGroupTag" */
export type ContentGroupTag_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentGroupTag_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentGroupTag" */
export type ContentGroupTag_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ContentGroupTag_Max_Order_By>;
  min?: Maybe<ContentGroupTag_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ContentGroupTag" */
export type ContentGroupTag_Arr_Rel_Insert_Input = {
  data: Array<ContentGroupTag_Insert_Input>;
  on_conflict?: Maybe<ContentGroupTag_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ContentGroupTag". All fields are combined with a logical 'AND'. */
export type ContentGroupTag_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentGroupTag_Bool_Exp>>>;
  _not?: Maybe<ContentGroupTag_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentGroupTag_Bool_Exp>>>;
  contentGroup?: Maybe<ContentGroup_Bool_Exp>;
  contentGroupId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  tag?: Maybe<Tag_Bool_Exp>;
  tagId?: Maybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "ContentGroupTag" */
export enum ContentGroupTag_Constraint {
  /** unique or primary key constraint */
  ContentGroupTagContentGroupIdTagIdKey = 'ContentGroupTag_contentGroupId_tagId_key',
  /** unique or primary key constraint */
  ContentGroupTagPkey = 'ContentGroupTag_pkey'
}

/** input type for inserting data into table "ContentGroupTag" */
export type ContentGroupTag_Insert_Input = {
  contentGroup?: Maybe<ContentGroup_Obj_Rel_Insert_Input>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tag?: Maybe<Tag_Obj_Rel_Insert_Input>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type ContentGroupTag_Max_Fields = {
  __typename?: 'ContentGroupTag_max_fields';
  contentGroupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "ContentGroupTag" */
export type ContentGroupTag_Max_Order_By = {
  contentGroupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tagId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentGroupTag_Min_Fields = {
  __typename?: 'ContentGroupTag_min_fields';
  contentGroupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "ContentGroupTag" */
export type ContentGroupTag_Min_Order_By = {
  contentGroupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tagId?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentGroupTag" */
export type ContentGroupTag_Mutation_Response = {
  __typename?: 'ContentGroupTag_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentGroupTag>;
};

/** input type for inserting object relation for remote table "ContentGroupTag" */
export type ContentGroupTag_Obj_Rel_Insert_Input = {
  data: ContentGroupTag_Insert_Input;
  on_conflict?: Maybe<ContentGroupTag_On_Conflict>;
};

/** on conflict condition type for table "ContentGroupTag" */
export type ContentGroupTag_On_Conflict = {
  constraint: ContentGroupTag_Constraint;
  update_columns: Array<ContentGroupTag_Update_Column>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};

/** ordering options when selecting data from "ContentGroupTag" */
export type ContentGroupTag_Order_By = {
  contentGroup?: Maybe<ContentGroup_Order_By>;
  contentGroupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tag?: Maybe<Tag_Order_By>;
  tagId?: Maybe<Order_By>;
};

/** primary key columns input for table: "ContentGroupTag" */
export type ContentGroupTag_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ContentGroupTag" */
export enum ContentGroupTag_Select_Column {
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  Id = 'id',
  /** column name */
  TagId = 'tagId'
}

/** input type for updating data in table "ContentGroupTag" */
export type ContentGroupTag_Set_Input = {
  contentGroupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** update columns of table "ContentGroupTag" */
export enum ContentGroupTag_Update_Column {
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  Id = 'id',
  /** column name */
  TagId = 'tagId'
}

/** columns and relationships of "ContentGroupType" */
export type ContentGroupType = {
  __typename?: 'ContentGroupType';
  /** An array relationship */
  contentGroups: Array<ContentGroup>;
  /** An aggregated array relationship */
  contentGroups_aggregate: ContentGroup_Aggregate;
  description: Scalars['String'];
  name: Scalars['String'];
};


/** columns and relationships of "ContentGroupType" */
export type ContentGroupTypeContentGroupsArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** columns and relationships of "ContentGroupType" */
export type ContentGroupTypeContentGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};

/** aggregated selection of "ContentGroupType" */
export type ContentGroupType_Aggregate = {
  __typename?: 'ContentGroupType_aggregate';
  aggregate?: Maybe<ContentGroupType_Aggregate_Fields>;
  nodes: Array<ContentGroupType>;
};

/** aggregate fields of "ContentGroupType" */
export type ContentGroupType_Aggregate_Fields = {
  __typename?: 'ContentGroupType_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentGroupType_Max_Fields>;
  min?: Maybe<ContentGroupType_Min_Fields>;
};


/** aggregate fields of "ContentGroupType" */
export type ContentGroupType_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentGroupType_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentGroupType" */
export type ContentGroupType_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ContentGroupType_Max_Order_By>;
  min?: Maybe<ContentGroupType_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ContentGroupType" */
export type ContentGroupType_Arr_Rel_Insert_Input = {
  data: Array<ContentGroupType_Insert_Input>;
  on_conflict?: Maybe<ContentGroupType_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ContentGroupType". All fields are combined with a logical 'AND'. */
export type ContentGroupType_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentGroupType_Bool_Exp>>>;
  _not?: Maybe<ContentGroupType_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentGroupType_Bool_Exp>>>;
  contentGroups?: Maybe<ContentGroup_Bool_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "ContentGroupType" */
export enum ContentGroupType_Constraint {
  /** unique or primary key constraint */
  ContentGroupTypePkey = 'ContentGroupType_pkey'
}

export enum ContentGroupType_Enum {
  /** A demonstration. */
  Demonstration = 'DEMONSTRATION',
  /** A keynote. */
  Keynote = 'KEYNOTE',
  /** Conference main landing page. */
  LandingPage = 'LANDING_PAGE',
  /** A generic group type - use sparingly. */
  Other = 'OTHER',
  /** A paper. */
  Paper = 'PAPER',
  /** A poster. */
  Poster = 'POSTER',
  /** A presentation. */
  Presentation = 'PRESENTATION',
  /** A Q&A covering the whole session. */
  SessionQAndA = 'SESSION_Q_AND_A',
  /** A scheduled social. */
  Social = 'SOCIAL',
  /** A sponsor. */
  Sponsor = 'SPONSOR',
  /** A symposium. */
  Symposium = 'SYMPOSIUM',
  /** A tutorial. */
  Tutorial = 'TUTORIAL',
  /** A workshop. */
  Workshop = 'WORKSHOP'
}

/** expression to compare columns of type ContentGroupType_enum. All fields are combined with logical 'AND'. */
export type ContentGroupType_Enum_Comparison_Exp = {
  _eq?: Maybe<ContentGroupType_Enum>;
  _in?: Maybe<Array<ContentGroupType_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<ContentGroupType_Enum>;
  _nin?: Maybe<Array<ContentGroupType_Enum>>;
};

/** input type for inserting data into table "ContentGroupType" */
export type ContentGroupType_Insert_Input = {
  contentGroups?: Maybe<ContentGroup_Arr_Rel_Insert_Input>;
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type ContentGroupType_Max_Fields = {
  __typename?: 'ContentGroupType_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "ContentGroupType" */
export type ContentGroupType_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentGroupType_Min_Fields = {
  __typename?: 'ContentGroupType_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "ContentGroupType" */
export type ContentGroupType_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentGroupType" */
export type ContentGroupType_Mutation_Response = {
  __typename?: 'ContentGroupType_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentGroupType>;
};

/** input type for inserting object relation for remote table "ContentGroupType" */
export type ContentGroupType_Obj_Rel_Insert_Input = {
  data: ContentGroupType_Insert_Input;
  on_conflict?: Maybe<ContentGroupType_On_Conflict>;
};

/** on conflict condition type for table "ContentGroupType" */
export type ContentGroupType_On_Conflict = {
  constraint: ContentGroupType_Constraint;
  update_columns: Array<ContentGroupType_Update_Column>;
  where?: Maybe<ContentGroupType_Bool_Exp>;
};

/** ordering options when selecting data from "ContentGroupType" */
export type ContentGroupType_Order_By = {
  contentGroups_aggregate?: Maybe<ContentGroup_Aggregate_Order_By>;
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "ContentGroupType" */
export type ContentGroupType_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "ContentGroupType" */
export enum ContentGroupType_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "ContentGroupType" */
export type ContentGroupType_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "ContentGroupType" */
export enum ContentGroupType_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** aggregated selection of "ContentGroup" */
export type ContentGroup_Aggregate = {
  __typename?: 'ContentGroup_aggregate';
  aggregate?: Maybe<ContentGroup_Aggregate_Fields>;
  nodes: Array<ContentGroup>;
};

/** aggregate fields of "ContentGroup" */
export type ContentGroup_Aggregate_Fields = {
  __typename?: 'ContentGroup_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentGroup_Max_Fields>;
  min?: Maybe<ContentGroup_Min_Fields>;
};


/** aggregate fields of "ContentGroup" */
export type ContentGroup_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentGroup_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentGroup" */
export type ContentGroup_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ContentGroup_Max_Order_By>;
  min?: Maybe<ContentGroup_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ContentGroup" */
export type ContentGroup_Arr_Rel_Insert_Input = {
  data: Array<ContentGroup_Insert_Input>;
  on_conflict?: Maybe<ContentGroup_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ContentGroup". All fields are combined with a logical 'AND'. */
export type ContentGroup_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentGroup_Bool_Exp>>>;
  _not?: Maybe<ContentGroup_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentGroup_Bool_Exp>>>;
  chat?: Maybe<Chat_Chat_Bool_Exp>;
  chatId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroupTags?: Maybe<ContentGroupTag_Bool_Exp>;
  contentGroupType?: Maybe<ContentGroupType_Bool_Exp>;
  contentGroupTypeName?: Maybe<ContentGroupType_Enum_Comparison_Exp>;
  contentItems?: Maybe<ContentItem_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  events?: Maybe<Event_Bool_Exp>;
  hallways?: Maybe<ContentGroupHallway_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  originatingData?: Maybe<OriginatingData_Bool_Exp>;
  originatingDataId?: Maybe<Uuid_Comparison_Exp>;
  people?: Maybe<ContentGroupPerson_Bool_Exp>;
  requiredContentItems?: Maybe<RequiredContentItem_Bool_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  rooms?: Maybe<Room_Bool_Exp>;
  shortTitle?: Maybe<String_Comparison_Exp>;
  title?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ContentGroup" */
export enum ContentGroup_Constraint {
  /** unique or primary key constraint */
  ContentGroupPkey = 'ContentGroup_pkey'
}

/** input type for inserting data into table "ContentGroup" */
export type ContentGroup_Insert_Input = {
  chat?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  chatId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupTags?: Maybe<ContentGroupTag_Arr_Rel_Insert_Input>;
  contentGroupType?: Maybe<ContentGroupType_Obj_Rel_Insert_Input>;
  contentGroupTypeName?: Maybe<ContentGroupType_Enum>;
  contentItems?: Maybe<ContentItem_Arr_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  events?: Maybe<Event_Arr_Rel_Insert_Input>;
  hallways?: Maybe<ContentGroupHallway_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  originatingData?: Maybe<OriginatingData_Obj_Rel_Insert_Input>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  people?: Maybe<ContentGroupPerson_Arr_Rel_Insert_Input>;
  requiredContentItems?: Maybe<RequiredContentItem_Arr_Rel_Insert_Input>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  rooms?: Maybe<Room_Arr_Rel_Insert_Input>;
  shortTitle?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ContentGroup_Max_Fields = {
  __typename?: 'ContentGroup_max_fields';
  chatId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  shortTitle?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ContentGroup" */
export type ContentGroup_Max_Order_By = {
  chatId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  shortTitle?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentGroup_Min_Fields = {
  __typename?: 'ContentGroup_min_fields';
  chatId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  shortTitle?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ContentGroup" */
export type ContentGroup_Min_Order_By = {
  chatId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  shortTitle?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentGroup" */
export type ContentGroup_Mutation_Response = {
  __typename?: 'ContentGroup_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentGroup>;
};

/** input type for inserting object relation for remote table "ContentGroup" */
export type ContentGroup_Obj_Rel_Insert_Input = {
  data: ContentGroup_Insert_Input;
  on_conflict?: Maybe<ContentGroup_On_Conflict>;
};

/** on conflict condition type for table "ContentGroup" */
export type ContentGroup_On_Conflict = {
  constraint: ContentGroup_Constraint;
  update_columns: Array<ContentGroup_Update_Column>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};

/** ordering options when selecting data from "ContentGroup" */
export type ContentGroup_Order_By = {
  chat?: Maybe<Chat_Chat_Order_By>;
  chatId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroupTags_aggregate?: Maybe<ContentGroupTag_Aggregate_Order_By>;
  contentGroupType?: Maybe<ContentGroupType_Order_By>;
  contentGroupTypeName?: Maybe<Order_By>;
  contentItems_aggregate?: Maybe<ContentItem_Aggregate_Order_By>;
  createdAt?: Maybe<Order_By>;
  events_aggregate?: Maybe<Event_Aggregate_Order_By>;
  hallways_aggregate?: Maybe<ContentGroupHallway_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  originatingData?: Maybe<OriginatingData_Order_By>;
  originatingDataId?: Maybe<Order_By>;
  people_aggregate?: Maybe<ContentGroupPerson_Aggregate_Order_By>;
  requiredContentItems_aggregate?: Maybe<RequiredContentItem_Aggregate_Order_By>;
  room?: Maybe<Room_Order_By>;
  rooms_aggregate?: Maybe<Room_Aggregate_Order_By>;
  shortTitle?: Maybe<Order_By>;
  title?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "ContentGroup" */
export type ContentGroup_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ContentGroup" */
export enum ContentGroup_Select_Column {
  /** column name */
  ChatId = 'chatId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupTypeName = 'contentGroupTypeName',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  ShortTitle = 'shortTitle',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "ContentGroup" */
export type ContentGroup_Set_Input = {
  chatId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupTypeName?: Maybe<ContentGroupType_Enum>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  shortTitle?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "ContentGroup" */
export enum ContentGroup_Update_Column {
  /** column name */
  ChatId = 'chatId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupTypeName = 'contentGroupTypeName',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  ShortTitle = 'shortTitle',
  /** column name */
  Title = 'title',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "ContentItem" */
export type ContentItem = {
  __typename?: 'ContentItem';
  /** An object relationship */
  broadcastContentItem?: Maybe<BroadcastContentItem>;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentGroup: ContentGroup;
  contentGroupId: Scalars['uuid'];
  /** An object relationship */
  contentType: ContentType;
  contentTypeName: ContentType_Enum;
  createdAt: Scalars['timestamptz'];
  data: Scalars['jsonb'];
  id: Scalars['uuid'];
  isHidden: Scalars['Boolean'];
  layoutData?: Maybe<Scalars['jsonb']>;
  name: Scalars['String'];
  /** An object relationship */
  originatingData?: Maybe<OriginatingData>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  requiredContentId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  requiredContentItem?: Maybe<RequiredContentItem>;
  updatedAt: Scalars['timestamptz'];
  /** An array relationship */
  youTubeUploads: Array<YouTubeUpload>;
  /** An aggregated array relationship */
  youTubeUploads_aggregate: YouTubeUpload_Aggregate;
};


/** columns and relationships of "ContentItem" */
export type ContentItemDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "ContentItem" */
export type ContentItemLayoutDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "ContentItem" */
export type ContentItemYouTubeUploadsArgs = {
  distinct_on?: Maybe<Array<YouTubeUpload_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<YouTubeUpload_Order_By>>;
  where?: Maybe<YouTubeUpload_Bool_Exp>;
};


/** columns and relationships of "ContentItem" */
export type ContentItemYouTubeUploads_AggregateArgs = {
  distinct_on?: Maybe<Array<YouTubeUpload_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<YouTubeUpload_Order_By>>;
  where?: Maybe<YouTubeUpload_Bool_Exp>;
};

/** aggregated selection of "ContentItem" */
export type ContentItem_Aggregate = {
  __typename?: 'ContentItem_aggregate';
  aggregate?: Maybe<ContentItem_Aggregate_Fields>;
  nodes: Array<ContentItem>;
};

/** aggregate fields of "ContentItem" */
export type ContentItem_Aggregate_Fields = {
  __typename?: 'ContentItem_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentItem_Max_Fields>;
  min?: Maybe<ContentItem_Min_Fields>;
};


/** aggregate fields of "ContentItem" */
export type ContentItem_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentItem_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentItem" */
export type ContentItem_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ContentItem_Max_Order_By>;
  min?: Maybe<ContentItem_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type ContentItem_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
  layoutData?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "ContentItem" */
export type ContentItem_Arr_Rel_Insert_Input = {
  data: Array<ContentItem_Insert_Input>;
  on_conflict?: Maybe<ContentItem_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ContentItem". All fields are combined with a logical 'AND'. */
export type ContentItem_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentItem_Bool_Exp>>>;
  _not?: Maybe<ContentItem_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentItem_Bool_Exp>>>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Bool_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroup?: Maybe<ContentGroup_Bool_Exp>;
  contentGroupId?: Maybe<Uuid_Comparison_Exp>;
  contentType?: Maybe<ContentType_Bool_Exp>;
  contentTypeName?: Maybe<ContentType_Enum_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  isHidden?: Maybe<Boolean_Comparison_Exp>;
  layoutData?: Maybe<Jsonb_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  originatingData?: Maybe<OriginatingData_Bool_Exp>;
  originatingDataId?: Maybe<Uuid_Comparison_Exp>;
  requiredContentId?: Maybe<Uuid_Comparison_Exp>;
  requiredContentItem?: Maybe<RequiredContentItem_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  youTubeUploads?: Maybe<YouTubeUpload_Bool_Exp>;
};

/** unique or primary key constraints on table "ContentItem" */
export enum ContentItem_Constraint {
  /** unique or primary key constraint */
  ContentItemPkey = 'ContentItem_pkey',
  /** unique or primary key constraint */
  ContentItemRequiredContentIdKey = 'ContentItem_requiredContentId_key'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type ContentItem_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
  layoutData?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type ContentItem_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
  layoutData?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type ContentItem_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
  layoutData?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "ContentItem" */
export type ContentItem_Insert_Input = {
  broadcastContentItem?: Maybe<BroadcastContentItem_Obj_Rel_Insert_Input>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroup?: Maybe<ContentGroup_Obj_Rel_Insert_Input>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  contentType?: Maybe<ContentType_Obj_Rel_Insert_Input>;
  contentTypeName?: Maybe<ContentType_Enum>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  isHidden?: Maybe<Scalars['Boolean']>;
  layoutData?: Maybe<Scalars['jsonb']>;
  name?: Maybe<Scalars['String']>;
  originatingData?: Maybe<OriginatingData_Obj_Rel_Insert_Input>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  requiredContentId?: Maybe<Scalars['uuid']>;
  requiredContentItem?: Maybe<RequiredContentItem_Obj_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  youTubeUploads?: Maybe<YouTubeUpload_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ContentItem_Max_Fields = {
  __typename?: 'ContentItem_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  requiredContentId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ContentItem" */
export type ContentItem_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentGroupId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  requiredContentId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentItem_Min_Fields = {
  __typename?: 'ContentItem_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  requiredContentId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ContentItem" */
export type ContentItem_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentGroupId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  requiredContentId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentItem" */
export type ContentItem_Mutation_Response = {
  __typename?: 'ContentItem_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentItem>;
};

/** input type for inserting object relation for remote table "ContentItem" */
export type ContentItem_Obj_Rel_Insert_Input = {
  data: ContentItem_Insert_Input;
  on_conflict?: Maybe<ContentItem_On_Conflict>;
};

/** on conflict condition type for table "ContentItem" */
export type ContentItem_On_Conflict = {
  constraint: ContentItem_Constraint;
  update_columns: Array<ContentItem_Update_Column>;
  where?: Maybe<ContentItem_Bool_Exp>;
};

/** ordering options when selecting data from "ContentItem" */
export type ContentItem_Order_By = {
  broadcastContentItem?: Maybe<BroadcastContentItem_Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroup?: Maybe<ContentGroup_Order_By>;
  contentGroupId?: Maybe<Order_By>;
  contentType?: Maybe<ContentType_Order_By>;
  contentTypeName?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  isHidden?: Maybe<Order_By>;
  layoutData?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingData?: Maybe<OriginatingData_Order_By>;
  originatingDataId?: Maybe<Order_By>;
  requiredContentId?: Maybe<Order_By>;
  requiredContentItem?: Maybe<RequiredContentItem_Order_By>;
  updatedAt?: Maybe<Order_By>;
  youTubeUploads_aggregate?: Maybe<YouTubeUpload_Aggregate_Order_By>;
};

/** primary key columns input for table: "ContentItem" */
export type ContentItem_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type ContentItem_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
  layoutData?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "ContentItem" */
export enum ContentItem_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  ContentTypeName = 'contentTypeName',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  LayoutData = 'layoutData',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  RequiredContentId = 'requiredContentId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "ContentItem" */
export type ContentItem_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  contentTypeName?: Maybe<ContentType_Enum>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  isHidden?: Maybe<Scalars['Boolean']>;
  layoutData?: Maybe<Scalars['jsonb']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  requiredContentId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "ContentItem" */
export enum ContentItem_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  ContentTypeName = 'contentTypeName',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  LayoutData = 'layoutData',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  RequiredContentId = 'requiredContentId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "ContentPerson" */
export type ContentPerson = {
  __typename?: 'ContentPerson';
  affiliation?: Maybe<Scalars['String']>;
  /** An object relationship */
  attendee?: Maybe<Attendee>;
  attendeeId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An array relationship */
  contentItemPeople: Array<ContentGroupPerson>;
  /** An aggregated array relationship */
  contentItemPeople_aggregate: ContentGroupPerson_Aggregate;
  email?: Maybe<Scalars['String']>;
  /** An array relationship */
  eventPeople: Array<EventPerson>;
  /** An aggregated array relationship */
  eventPeople_aggregate: EventPerson_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An object relationship */
  originatingData?: Maybe<OriginatingData>;
  originatingDataId?: Maybe<Scalars['uuid']>;
};


/** columns and relationships of "ContentPerson" */
export type ContentPersonContentItemPeopleArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** columns and relationships of "ContentPerson" */
export type ContentPersonContentItemPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** columns and relationships of "ContentPerson" */
export type ContentPersonEventPeopleArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** columns and relationships of "ContentPerson" */
export type ContentPersonEventPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};

/** aggregated selection of "ContentPerson" */
export type ContentPerson_Aggregate = {
  __typename?: 'ContentPerson_aggregate';
  aggregate?: Maybe<ContentPerson_Aggregate_Fields>;
  nodes: Array<ContentPerson>;
};

/** aggregate fields of "ContentPerson" */
export type ContentPerson_Aggregate_Fields = {
  __typename?: 'ContentPerson_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentPerson_Max_Fields>;
  min?: Maybe<ContentPerson_Min_Fields>;
};


/** aggregate fields of "ContentPerson" */
export type ContentPerson_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentPerson_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentPerson" */
export type ContentPerson_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ContentPerson_Max_Order_By>;
  min?: Maybe<ContentPerson_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ContentPerson" */
export type ContentPerson_Arr_Rel_Insert_Input = {
  data: Array<ContentPerson_Insert_Input>;
  on_conflict?: Maybe<ContentPerson_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ContentPerson". All fields are combined with a logical 'AND'. */
export type ContentPerson_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentPerson_Bool_Exp>>>;
  _not?: Maybe<ContentPerson_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentPerson_Bool_Exp>>>;
  affiliation?: Maybe<String_Comparison_Exp>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentItemPeople?: Maybe<ContentGroupPerson_Bool_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  eventPeople?: Maybe<EventPerson_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  originatingData?: Maybe<OriginatingData_Bool_Exp>;
  originatingDataId?: Maybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "ContentPerson" */
export enum ContentPerson_Constraint {
  /** unique or primary key constraint */
  ContentPersonConferenceIdNameAffiliationKey = 'ContentPerson_conferenceId_name_affiliation_key',
  /** unique or primary key constraint */
  ContentPersonPkey = 'ContentPerson_pkey'
}

/** input type for inserting data into table "ContentPerson" */
export type ContentPerson_Insert_Input = {
  affiliation?: Maybe<Scalars['String']>;
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemPeople?: Maybe<ContentGroupPerson_Arr_Rel_Insert_Input>;
  email?: Maybe<Scalars['String']>;
  eventPeople?: Maybe<EventPerson_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingData?: Maybe<OriginatingData_Obj_Rel_Insert_Input>;
  originatingDataId?: Maybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type ContentPerson_Max_Fields = {
  __typename?: 'ContentPerson_max_fields';
  affiliation?: Maybe<Scalars['String']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "ContentPerson" */
export type ContentPerson_Max_Order_By = {
  affiliation?: Maybe<Order_By>;
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentPerson_Min_Fields = {
  __typename?: 'ContentPerson_min_fields';
  affiliation?: Maybe<Scalars['String']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "ContentPerson" */
export type ContentPerson_Min_Order_By = {
  affiliation?: Maybe<Order_By>;
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentPerson" */
export type ContentPerson_Mutation_Response = {
  __typename?: 'ContentPerson_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentPerson>;
};

/** input type for inserting object relation for remote table "ContentPerson" */
export type ContentPerson_Obj_Rel_Insert_Input = {
  data: ContentPerson_Insert_Input;
  on_conflict?: Maybe<ContentPerson_On_Conflict>;
};

/** on conflict condition type for table "ContentPerson" */
export type ContentPerson_On_Conflict = {
  constraint: ContentPerson_Constraint;
  update_columns: Array<ContentPerson_Update_Column>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};

/** ordering options when selecting data from "ContentPerson" */
export type ContentPerson_Order_By = {
  affiliation?: Maybe<Order_By>;
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentItemPeople_aggregate?: Maybe<ContentGroupPerson_Aggregate_Order_By>;
  email?: Maybe<Order_By>;
  eventPeople_aggregate?: Maybe<EventPerson_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingData?: Maybe<OriginatingData_Order_By>;
  originatingDataId?: Maybe<Order_By>;
};

/** primary key columns input for table: "ContentPerson" */
export type ContentPerson_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ContentPerson" */
export enum ContentPerson_Select_Column {
  /** column name */
  Affiliation = 'affiliation',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId'
}

/** input type for updating data in table "ContentPerson" */
export type ContentPerson_Set_Input = {
  affiliation?: Maybe<Scalars['String']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
};

/** update columns of table "ContentPerson" */
export enum ContentPerson_Update_Column {
  /** column name */
  Affiliation = 'affiliation',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  Email = 'email',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId'
}

/** columns and relationships of "ContentType" */
export type ContentType = {
  __typename?: 'ContentType';
  /** An array relationship */
  contentItems: Array<ContentItem>;
  /** An aggregated array relationship */
  contentItems_aggregate: ContentItem_Aggregate;
  description: Scalars['String'];
  name: Scalars['String'];
  /** An array relationship */
  requiredContentItems: Array<RequiredContentItem>;
  /** An aggregated array relationship */
  requiredContentItems_aggregate: RequiredContentItem_Aggregate;
};


/** columns and relationships of "ContentType" */
export type ContentTypeContentItemsArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** columns and relationships of "ContentType" */
export type ContentTypeContentItems_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** columns and relationships of "ContentType" */
export type ContentTypeRequiredContentItemsArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** columns and relationships of "ContentType" */
export type ContentTypeRequiredContentItems_AggregateArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};

/** aggregated selection of "ContentType" */
export type ContentType_Aggregate = {
  __typename?: 'ContentType_aggregate';
  aggregate?: Maybe<ContentType_Aggregate_Fields>;
  nodes: Array<ContentType>;
};

/** aggregate fields of "ContentType" */
export type ContentType_Aggregate_Fields = {
  __typename?: 'ContentType_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ContentType_Max_Fields>;
  min?: Maybe<ContentType_Min_Fields>;
};


/** aggregate fields of "ContentType" */
export type ContentType_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ContentType_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ContentType" */
export type ContentType_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ContentType_Max_Order_By>;
  min?: Maybe<ContentType_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ContentType" */
export type ContentType_Arr_Rel_Insert_Input = {
  data: Array<ContentType_Insert_Input>;
  on_conflict?: Maybe<ContentType_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ContentType". All fields are combined with a logical 'AND'. */
export type ContentType_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ContentType_Bool_Exp>>>;
  _not?: Maybe<ContentType_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ContentType_Bool_Exp>>>;
  contentItems?: Maybe<ContentItem_Bool_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  requiredContentItems?: Maybe<RequiredContentItem_Bool_Exp>;
};

/** unique or primary key constraints on table "ContentType" */
export enum ContentType_Constraint {
  /** unique or primary key constraint */
  ContentTypePkey = 'ContentType_pkey'
}

export enum ContentType_Enum {
  /** Abstract Markdown text. */
  Abstract = 'ABSTRACT',
  /** List of content groups in the system. */
  ContentGroupList = 'CONTENT_GROUP_LIST',
  /** File for an image (stored by Clowdr). */
  ImageFile = 'IMAGE_FILE',
  /** URL to an image (embedded in Clowdr UI). */
  ImageUrl = 'IMAGE_URL',
  /** A generic URL. */
  Link = 'LINK',
  /** A URL for a link button. */
  LinkButton = 'LINK_BUTTON',
  /** File for a paper (stored by Clowdr). */
  PaperFile = 'PAPER_FILE',
  /** Link for a paper (preview is not embedded in Clowdr UI). */
  PaperLink = 'PAPER_LINK',
  /** URL to a paper (preview may be embedded in Clowdr UI e.g. PDF JS viewer). */
  PaperUrl = 'PAPER_URL',
  /** File for a poster image (stored by Clowdr). */
  PosterFile = 'POSTER_FILE',
  /** URL to a poster image (embedded in Clowdr UI). */
  PosterUrl = 'POSTER_URL',
  /** General-purpose Markdown text. */
  Text = 'TEXT',
  /** Video file to be broadcast. */
  VideoBroadcast = 'VIDEO_BROADCAST',
  /** Video file for counting down to a transition in a broadcast. */
  VideoCountdown = 'VIDEO_COUNTDOWN',
  /** File for a video (stored by Clowdr). */
  VideoFile = 'VIDEO_FILE',
  /** Video file for filler loop between events/during breaks in a broadcast. */
  VideoFiller = 'VIDEO_FILLER',
  /** Link to a video (video is not embedded in Clowdr UI). */
  VideoLink = 'VIDEO_LINK',
  /** Video file to be published in advance of the conference. */
  VideoPrepublish = 'VIDEO_PREPUBLISH',
  /** Video file for sponsors filler loop between events/during breaks in a broadcast. */
  VideoSponsorsFiller = 'VIDEO_SPONSORS_FILLER',
  /** Video file for titles introducing an event during a broadcast. */
  VideoTitles = 'VIDEO_TITLES',
  /** URL for a video (video is embedded in Clowdr UI). */
  VideoUrl = 'VIDEO_URL',
  /** Schedule view for the whole conference. */
  WholeSchedule = 'WHOLE_SCHEDULE',
  /** Data for a Zoom meeting. */
  Zoom = 'ZOOM'
}

/** expression to compare columns of type ContentType_enum. All fields are combined with logical 'AND'. */
export type ContentType_Enum_Comparison_Exp = {
  _eq?: Maybe<ContentType_Enum>;
  _in?: Maybe<Array<ContentType_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<ContentType_Enum>;
  _nin?: Maybe<Array<ContentType_Enum>>;
};

/** input type for inserting data into table "ContentType" */
export type ContentType_Insert_Input = {
  contentItems?: Maybe<ContentItem_Arr_Rel_Insert_Input>;
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  requiredContentItems?: Maybe<RequiredContentItem_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type ContentType_Max_Fields = {
  __typename?: 'ContentType_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "ContentType" */
export type ContentType_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ContentType_Min_Fields = {
  __typename?: 'ContentType_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "ContentType" */
export type ContentType_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "ContentType" */
export type ContentType_Mutation_Response = {
  __typename?: 'ContentType_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ContentType>;
};

/** input type for inserting object relation for remote table "ContentType" */
export type ContentType_Obj_Rel_Insert_Input = {
  data: ContentType_Insert_Input;
  on_conflict?: Maybe<ContentType_On_Conflict>;
};

/** on conflict condition type for table "ContentType" */
export type ContentType_On_Conflict = {
  constraint: ContentType_Constraint;
  update_columns: Array<ContentType_Update_Column>;
  where?: Maybe<ContentType_Bool_Exp>;
};

/** ordering options when selecting data from "ContentType" */
export type ContentType_Order_By = {
  contentItems_aggregate?: Maybe<ContentItem_Aggregate_Order_By>;
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  requiredContentItems_aggregate?: Maybe<RequiredContentItem_Aggregate_Order_By>;
};

/** primary key columns input for table: "ContentType" */
export type ContentType_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "ContentType" */
export enum ContentType_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "ContentType" */
export type ContentType_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "ContentType" */
export enum ContentType_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type CreateContentGroupRoomOutput = {
  __typename?: 'CreateContentGroupRoomOutput';
  message?: Maybe<Scalars['String']>;
  room?: Maybe<Room>;
  roomId?: Maybe<Scalars['String']>;
};

export type CreateRoomDmOutput = {
  __typename?: 'CreateRoomDmOutput';
  chatId?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  room?: Maybe<Room>;
  roomId?: Maybe<Scalars['uuid']>;
};

export type EchoInput = {
  message: Scalars['String'];
};

export type EchoOutput = {
  __typename?: 'EchoOutput';
  message: Scalars['String'];
};

/** columns and relationships of "Email" */
export type Email = {
  __typename?: 'Email';
  createdAt: Scalars['timestamptz'];
  emailAddress: Scalars['String'];
  htmlContents: Scalars['String'];
  id: Scalars['uuid'];
  /** An object relationship */
  invitation?: Maybe<Invitation>;
  invitationId?: Maybe<Scalars['uuid']>;
  plainTextContents: Scalars['String'];
  reason: Scalars['String'];
  retriesCount: Scalars['Int'];
  sentAt?: Maybe<Scalars['timestamptz']>;
  subject: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
};

/** aggregated selection of "Email" */
export type Email_Aggregate = {
  __typename?: 'Email_aggregate';
  aggregate?: Maybe<Email_Aggregate_Fields>;
  nodes: Array<Email>;
};

/** aggregate fields of "Email" */
export type Email_Aggregate_Fields = {
  __typename?: 'Email_aggregate_fields';
  avg?: Maybe<Email_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Email_Max_Fields>;
  min?: Maybe<Email_Min_Fields>;
  stddev?: Maybe<Email_Stddev_Fields>;
  stddev_pop?: Maybe<Email_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Email_Stddev_Samp_Fields>;
  sum?: Maybe<Email_Sum_Fields>;
  var_pop?: Maybe<Email_Var_Pop_Fields>;
  var_samp?: Maybe<Email_Var_Samp_Fields>;
  variance?: Maybe<Email_Variance_Fields>;
};


/** aggregate fields of "Email" */
export type Email_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Email_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Email" */
export type Email_Aggregate_Order_By = {
  avg?: Maybe<Email_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Email_Max_Order_By>;
  min?: Maybe<Email_Min_Order_By>;
  stddev?: Maybe<Email_Stddev_Order_By>;
  stddev_pop?: Maybe<Email_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Email_Stddev_Samp_Order_By>;
  sum?: Maybe<Email_Sum_Order_By>;
  var_pop?: Maybe<Email_Var_Pop_Order_By>;
  var_samp?: Maybe<Email_Var_Samp_Order_By>;
  variance?: Maybe<Email_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Email" */
export type Email_Arr_Rel_Insert_Input = {
  data: Array<Email_Insert_Input>;
  on_conflict?: Maybe<Email_On_Conflict>;
};

/** aggregate avg on columns */
export type Email_Avg_Fields = {
  __typename?: 'Email_avg_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "Email" */
export type Email_Avg_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Email". All fields are combined with a logical 'AND'. */
export type Email_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Email_Bool_Exp>>>;
  _not?: Maybe<Email_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Email_Bool_Exp>>>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  emailAddress?: Maybe<String_Comparison_Exp>;
  htmlContents?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  invitation?: Maybe<Invitation_Bool_Exp>;
  invitationId?: Maybe<Uuid_Comparison_Exp>;
  plainTextContents?: Maybe<String_Comparison_Exp>;
  reason?: Maybe<String_Comparison_Exp>;
  retriesCount?: Maybe<Int_Comparison_Exp>;
  sentAt?: Maybe<Timestamptz_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  userId?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "Email" */
export enum Email_Constraint {
  /** unique or primary key constraint */
  EmailPkey = 'Email_pkey'
}

/** input type for incrementing integer column in table "Email" */
export type Email_Inc_Input = {
  retriesCount?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Email" */
export type Email_Insert_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  emailAddress?: Maybe<Scalars['String']>;
  htmlContents?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invitation?: Maybe<Invitation_Obj_Rel_Insert_Input>;
  invitationId?: Maybe<Scalars['uuid']>;
  plainTextContents?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  sentAt?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  userId?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Email_Max_Fields = {
  __typename?: 'Email_max_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  emailAddress?: Maybe<Scalars['String']>;
  htmlContents?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invitationId?: Maybe<Scalars['uuid']>;
  plainTextContents?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  sentAt?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "Email" */
export type Email_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  emailAddress?: Maybe<Order_By>;
  htmlContents?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitationId?: Maybe<Order_By>;
  plainTextContents?: Maybe<Order_By>;
  reason?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  sentAt?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Email_Min_Fields = {
  __typename?: 'Email_min_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  emailAddress?: Maybe<Scalars['String']>;
  htmlContents?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invitationId?: Maybe<Scalars['uuid']>;
  plainTextContents?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  sentAt?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "Email" */
export type Email_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  emailAddress?: Maybe<Order_By>;
  htmlContents?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitationId?: Maybe<Order_By>;
  plainTextContents?: Maybe<Order_By>;
  reason?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  sentAt?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** response of any mutation on the table "Email" */
export type Email_Mutation_Response = {
  __typename?: 'Email_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Email>;
};

/** input type for inserting object relation for remote table "Email" */
export type Email_Obj_Rel_Insert_Input = {
  data: Email_Insert_Input;
  on_conflict?: Maybe<Email_On_Conflict>;
};

/** on conflict condition type for table "Email" */
export type Email_On_Conflict = {
  constraint: Email_Constraint;
  update_columns: Array<Email_Update_Column>;
  where?: Maybe<Email_Bool_Exp>;
};

/** ordering options when selecting data from "Email" */
export type Email_Order_By = {
  createdAt?: Maybe<Order_By>;
  emailAddress?: Maybe<Order_By>;
  htmlContents?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitation?: Maybe<Invitation_Order_By>;
  invitationId?: Maybe<Order_By>;
  plainTextContents?: Maybe<Order_By>;
  reason?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  sentAt?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  userId?: Maybe<Order_By>;
};

/** primary key columns input for table: "Email" */
export type Email_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Email" */
export enum Email_Select_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EmailAddress = 'emailAddress',
  /** column name */
  HtmlContents = 'htmlContents',
  /** column name */
  Id = 'id',
  /** column name */
  InvitationId = 'invitationId',
  /** column name */
  PlainTextContents = 'plainTextContents',
  /** column name */
  Reason = 'reason',
  /** column name */
  RetriesCount = 'retriesCount',
  /** column name */
  SentAt = 'sentAt',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "Email" */
export type Email_Set_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  emailAddress?: Maybe<Scalars['String']>;
  htmlContents?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  invitationId?: Maybe<Scalars['uuid']>;
  plainTextContents?: Maybe<Scalars['String']>;
  reason?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  sentAt?: Maybe<Scalars['timestamptz']>;
  subject?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Email_Stddev_Fields = {
  __typename?: 'Email_stddev_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "Email" */
export type Email_Stddev_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Email_Stddev_Pop_Fields = {
  __typename?: 'Email_stddev_pop_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "Email" */
export type Email_Stddev_Pop_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Email_Stddev_Samp_Fields = {
  __typename?: 'Email_stddev_samp_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "Email" */
export type Email_Stddev_Samp_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Email_Sum_Fields = {
  __typename?: 'Email_sum_fields';
  retriesCount?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "Email" */
export type Email_Sum_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** update columns of table "Email" */
export enum Email_Update_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EmailAddress = 'emailAddress',
  /** column name */
  HtmlContents = 'htmlContents',
  /** column name */
  Id = 'id',
  /** column name */
  InvitationId = 'invitationId',
  /** column name */
  PlainTextContents = 'plainTextContents',
  /** column name */
  Reason = 'reason',
  /** column name */
  RetriesCount = 'retriesCount',
  /** column name */
  SentAt = 'sentAt',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UserId = 'userId'
}

/** aggregate var_pop on columns */
export type Email_Var_Pop_Fields = {
  __typename?: 'Email_var_pop_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "Email" */
export type Email_Var_Pop_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Email_Var_Samp_Fields = {
  __typename?: 'Email_var_samp_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "Email" */
export type Email_Var_Samp_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Email_Variance_Fields = {
  __typename?: 'Email_variance_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "Email" */
export type Email_Variance_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** columns and relationships of "Event" */
export type Event = {
  __typename?: 'Event';
  /** An object relationship */
  broadcastContentItem?: Maybe<BroadcastContentItem>;
  /** An array relationship */
  broadcasts: Array<Broadcast>;
  /** An aggregated array relationship */
  broadcasts_aggregate: Broadcast_Aggregate;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentGroup?: Maybe<ContentGroup>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt: Scalars['timestamptz'];
  durationSeconds: Scalars['Int'];
  endTime?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  eventPeople: Array<EventPerson>;
  /** An aggregated array relationship */
  eventPeople_aggregate: EventPerson_Aggregate;
  /** An array relationship */
  eventTags: Array<EventTag>;
  /** An aggregated array relationship */
  eventTags_aggregate: EventTag_Aggregate;
  /** An object relationship */
  eventVonageSession?: Maybe<EventVonageSession>;
  /** An array relationship */
  executedTransitions: Array<ExecutedTransitions>;
  /** An aggregated array relationship */
  executedTransitions_aggregate: ExecutedTransitions_Aggregate;
  hallwayId?: Maybe<Scalars['uuid']>;
  id: Scalars['uuid'];
  intendedRoomModeName: RoomMode_Enum;
  name: Scalars['String'];
  /** An object relationship */
  originatingData?: Maybe<OriginatingData>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  room: Room;
  roomId: Scalars['uuid'];
  /** An object relationship */
  roomMode: RoomMode;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startTime: Scalars['timestamptz'];
  /** An array relationship */
  transitions: Array<Transitions>;
  /** An aggregated array relationship */
  transitions_aggregate: Transitions_Aggregate;
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "Event" */
export type EventBroadcastsArgs = {
  distinct_on?: Maybe<Array<Broadcast_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Broadcast_Order_By>>;
  where?: Maybe<Broadcast_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventBroadcasts_AggregateArgs = {
  distinct_on?: Maybe<Array<Broadcast_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Broadcast_Order_By>>;
  where?: Maybe<Broadcast_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventEventPeopleArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventEventPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventEventTagsArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventEventTags_AggregateArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventExecutedTransitionsArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventExecutedTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventTransitionsArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** columns and relationships of "Event" */
export type EventTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};

/**
 * Current streams in event Vonage sessions.
 *
 *
 * columns and relationships of "EventParticipantStream"
 */
export type EventParticipantStream = {
  __typename?: 'EventParticipantStream';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  id: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
  vonageConnectionId: Scalars['String'];
  vonageStreamId: Scalars['String'];
  vonageStreamType: Scalars['String'];
};

/** aggregated selection of "EventParticipantStream" */
export type EventParticipantStream_Aggregate = {
  __typename?: 'EventParticipantStream_aggregate';
  aggregate?: Maybe<EventParticipantStream_Aggregate_Fields>;
  nodes: Array<EventParticipantStream>;
};

/** aggregate fields of "EventParticipantStream" */
export type EventParticipantStream_Aggregate_Fields = {
  __typename?: 'EventParticipantStream_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<EventParticipantStream_Max_Fields>;
  min?: Maybe<EventParticipantStream_Min_Fields>;
};


/** aggregate fields of "EventParticipantStream" */
export type EventParticipantStream_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<EventParticipantStream_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "EventParticipantStream" */
export type EventParticipantStream_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<EventParticipantStream_Max_Order_By>;
  min?: Maybe<EventParticipantStream_Min_Order_By>;
};

/** input type for inserting array relation for remote table "EventParticipantStream" */
export type EventParticipantStream_Arr_Rel_Insert_Input = {
  data: Array<EventParticipantStream_Insert_Input>;
  on_conflict?: Maybe<EventParticipantStream_On_Conflict>;
};

/** Boolean expression to filter rows from the table "EventParticipantStream". All fields are combined with a logical 'AND'. */
export type EventParticipantStream_Bool_Exp = {
  _and?: Maybe<Array<Maybe<EventParticipantStream_Bool_Exp>>>;
  _not?: Maybe<EventParticipantStream_Bool_Exp>;
  _or?: Maybe<Array<Maybe<EventParticipantStream_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  vonageConnectionId?: Maybe<String_Comparison_Exp>;
  vonageStreamId?: Maybe<String_Comparison_Exp>;
  vonageStreamType?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventParticipantStream" */
export enum EventParticipantStream_Constraint {
  /** unique or primary key constraint */
  EventParticipantStreamEventIdAttendeeIdVonageStreamIdKey = 'EventParticipantStream_eventId_attendeeId_vonageStreamId_key',
  /** unique or primary key constraint */
  EventParticipantStreamPkey = 'EventParticipantStream_pkey'
}

/** input type for inserting data into table "EventParticipantStream" */
export type EventParticipantStream_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
  vonageStreamId?: Maybe<Scalars['String']>;
  vonageStreamType?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type EventParticipantStream_Max_Fields = {
  __typename?: 'EventParticipantStream_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
  vonageStreamId?: Maybe<Scalars['String']>;
  vonageStreamType?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "EventParticipantStream" */
export type EventParticipantStream_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageConnectionId?: Maybe<Order_By>;
  vonageStreamId?: Maybe<Order_By>;
  vonageStreamType?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type EventParticipantStream_Min_Fields = {
  __typename?: 'EventParticipantStream_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
  vonageStreamId?: Maybe<Scalars['String']>;
  vonageStreamType?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "EventParticipantStream" */
export type EventParticipantStream_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageConnectionId?: Maybe<Order_By>;
  vonageStreamId?: Maybe<Order_By>;
  vonageStreamType?: Maybe<Order_By>;
};

/** response of any mutation on the table "EventParticipantStream" */
export type EventParticipantStream_Mutation_Response = {
  __typename?: 'EventParticipantStream_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<EventParticipantStream>;
};

/** input type for inserting object relation for remote table "EventParticipantStream" */
export type EventParticipantStream_Obj_Rel_Insert_Input = {
  data: EventParticipantStream_Insert_Input;
  on_conflict?: Maybe<EventParticipantStream_On_Conflict>;
};

/** on conflict condition type for table "EventParticipantStream" */
export type EventParticipantStream_On_Conflict = {
  constraint: EventParticipantStream_Constraint;
  update_columns: Array<EventParticipantStream_Update_Column>;
  where?: Maybe<EventParticipantStream_Bool_Exp>;
};

/** ordering options when selecting data from "EventParticipantStream" */
export type EventParticipantStream_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageConnectionId?: Maybe<Order_By>;
  vonageStreamId?: Maybe<Order_By>;
  vonageStreamType?: Maybe<Order_By>;
};

/** primary key columns input for table: "EventParticipantStream" */
export type EventParticipantStream_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "EventParticipantStream" */
export enum EventParticipantStream_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VonageConnectionId = 'vonageConnectionId',
  /** column name */
  VonageStreamId = 'vonageStreamId',
  /** column name */
  VonageStreamType = 'vonageStreamType'
}

/** input type for updating data in table "EventParticipantStream" */
export type EventParticipantStream_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
  vonageStreamId?: Maybe<Scalars['String']>;
  vonageStreamType?: Maybe<Scalars['String']>;
};

/** update columns of table "EventParticipantStream" */
export enum EventParticipantStream_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VonageConnectionId = 'vonageConnectionId',
  /** column name */
  VonageStreamId = 'vonageStreamId',
  /** column name */
  VonageStreamType = 'vonageStreamType'
}

/** columns and relationships of "EventPerson" */
export type EventPerson = {
  __typename?: 'EventPerson';
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  /** An object relationship */
  eventPersonRole: EventPersonRole;
  id: Scalars['uuid'];
  /** An object relationship */
  person: ContentPerson;
  personId: Scalars['uuid'];
  roleName: EventPersonRole_Enum;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "EventPersonRole" */
export type EventPersonRole = {
  __typename?: 'EventPersonRole';
  description: Scalars['String'];
  /** An array relationship */
  eventPeople: Array<EventPerson>;
  /** An aggregated array relationship */
  eventPeople_aggregate: EventPerson_Aggregate;
  name: Scalars['String'];
};


/** columns and relationships of "EventPersonRole" */
export type EventPersonRoleEventPeopleArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** columns and relationships of "EventPersonRole" */
export type EventPersonRoleEventPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};

/** aggregated selection of "EventPersonRole" */
export type EventPersonRole_Aggregate = {
  __typename?: 'EventPersonRole_aggregate';
  aggregate?: Maybe<EventPersonRole_Aggregate_Fields>;
  nodes: Array<EventPersonRole>;
};

/** aggregate fields of "EventPersonRole" */
export type EventPersonRole_Aggregate_Fields = {
  __typename?: 'EventPersonRole_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<EventPersonRole_Max_Fields>;
  min?: Maybe<EventPersonRole_Min_Fields>;
};


/** aggregate fields of "EventPersonRole" */
export type EventPersonRole_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<EventPersonRole_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "EventPersonRole" */
export type EventPersonRole_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<EventPersonRole_Max_Order_By>;
  min?: Maybe<EventPersonRole_Min_Order_By>;
};

/** input type for inserting array relation for remote table "EventPersonRole" */
export type EventPersonRole_Arr_Rel_Insert_Input = {
  data: Array<EventPersonRole_Insert_Input>;
  on_conflict?: Maybe<EventPersonRole_On_Conflict>;
};

/** Boolean expression to filter rows from the table "EventPersonRole". All fields are combined with a logical 'AND'. */
export type EventPersonRole_Bool_Exp = {
  _and?: Maybe<Array<Maybe<EventPersonRole_Bool_Exp>>>;
  _not?: Maybe<EventPersonRole_Bool_Exp>;
  _or?: Maybe<Array<Maybe<EventPersonRole_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  eventPeople?: Maybe<EventPerson_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventPersonRole" */
export enum EventPersonRole_Constraint {
  /** unique or primary key constraint */
  EventPersonRolePkey = 'EventPersonRole_pkey'
}

export enum EventPersonRole_Enum {
  /** Chair/moderator of the event */
  Chair = 'CHAIR',
  /** Viewer who has been given access to the event (e.g. to ask a question). */
  Participant = 'PARTICIPANT',
  /** A presenter. */
  Presenter = 'PRESENTER'
}

/** expression to compare columns of type EventPersonRole_enum. All fields are combined with logical 'AND'. */
export type EventPersonRole_Enum_Comparison_Exp = {
  _eq?: Maybe<EventPersonRole_Enum>;
  _in?: Maybe<Array<EventPersonRole_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<EventPersonRole_Enum>;
  _nin?: Maybe<Array<EventPersonRole_Enum>>;
};

/** input type for inserting data into table "EventPersonRole" */
export type EventPersonRole_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  eventPeople?: Maybe<EventPerson_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type EventPersonRole_Max_Fields = {
  __typename?: 'EventPersonRole_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "EventPersonRole" */
export type EventPersonRole_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type EventPersonRole_Min_Fields = {
  __typename?: 'EventPersonRole_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "EventPersonRole" */
export type EventPersonRole_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "EventPersonRole" */
export type EventPersonRole_Mutation_Response = {
  __typename?: 'EventPersonRole_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<EventPersonRole>;
};

/** input type for inserting object relation for remote table "EventPersonRole" */
export type EventPersonRole_Obj_Rel_Insert_Input = {
  data: EventPersonRole_Insert_Input;
  on_conflict?: Maybe<EventPersonRole_On_Conflict>;
};

/** on conflict condition type for table "EventPersonRole" */
export type EventPersonRole_On_Conflict = {
  constraint: EventPersonRole_Constraint;
  update_columns: Array<EventPersonRole_Update_Column>;
  where?: Maybe<EventPersonRole_Bool_Exp>;
};

/** ordering options when selecting data from "EventPersonRole" */
export type EventPersonRole_Order_By = {
  description?: Maybe<Order_By>;
  eventPeople_aggregate?: Maybe<EventPerson_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "EventPersonRole" */
export type EventPersonRole_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "EventPersonRole" */
export enum EventPersonRole_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "EventPersonRole" */
export type EventPersonRole_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "EventPersonRole" */
export enum EventPersonRole_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** aggregated selection of "EventPerson" */
export type EventPerson_Aggregate = {
  __typename?: 'EventPerson_aggregate';
  aggregate?: Maybe<EventPerson_Aggregate_Fields>;
  nodes: Array<EventPerson>;
};

/** aggregate fields of "EventPerson" */
export type EventPerson_Aggregate_Fields = {
  __typename?: 'EventPerson_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<EventPerson_Max_Fields>;
  min?: Maybe<EventPerson_Min_Fields>;
};


/** aggregate fields of "EventPerson" */
export type EventPerson_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<EventPerson_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "EventPerson" */
export type EventPerson_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<EventPerson_Max_Order_By>;
  min?: Maybe<EventPerson_Min_Order_By>;
};

/** input type for inserting array relation for remote table "EventPerson" */
export type EventPerson_Arr_Rel_Insert_Input = {
  data: Array<EventPerson_Insert_Input>;
  on_conflict?: Maybe<EventPerson_On_Conflict>;
};

/** Boolean expression to filter rows from the table "EventPerson". All fields are combined with a logical 'AND'. */
export type EventPerson_Bool_Exp = {
  _and?: Maybe<Array<Maybe<EventPerson_Bool_Exp>>>;
  _not?: Maybe<EventPerson_Bool_Exp>;
  _or?: Maybe<Array<Maybe<EventPerson_Bool_Exp>>>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  eventPersonRole?: Maybe<EventPersonRole_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  person?: Maybe<ContentPerson_Bool_Exp>;
  personId?: Maybe<Uuid_Comparison_Exp>;
  roleName?: Maybe<EventPersonRole_Enum_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventPerson" */
export enum EventPerson_Constraint {
  /** unique or primary key constraint */
  EventPersonEventIdPersonIdRoleNameKey = 'EventPerson_eventId_personId_roleName_key',
  /** unique or primary key constraint */
  EventPersonPkey = 'EventPerson_pkey'
}

/** input type for inserting data into table "EventPerson" */
export type EventPerson_Insert_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  eventPersonRole?: Maybe<EventPersonRole_Obj_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  person?: Maybe<ContentPerson_Obj_Rel_Insert_Input>;
  personId?: Maybe<Scalars['uuid']>;
  roleName?: Maybe<EventPersonRole_Enum>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type EventPerson_Max_Fields = {
  __typename?: 'EventPerson_max_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  personId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "EventPerson" */
export type EventPerson_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  personId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type EventPerson_Min_Fields = {
  __typename?: 'EventPerson_min_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  personId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "EventPerson" */
export type EventPerson_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  personId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "EventPerson" */
export type EventPerson_Mutation_Response = {
  __typename?: 'EventPerson_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<EventPerson>;
};

/** input type for inserting object relation for remote table "EventPerson" */
export type EventPerson_Obj_Rel_Insert_Input = {
  data: EventPerson_Insert_Input;
  on_conflict?: Maybe<EventPerson_On_Conflict>;
};

/** on conflict condition type for table "EventPerson" */
export type EventPerson_On_Conflict = {
  constraint: EventPerson_Constraint;
  update_columns: Array<EventPerson_Update_Column>;
  where?: Maybe<EventPerson_Bool_Exp>;
};

/** ordering options when selecting data from "EventPerson" */
export type EventPerson_Order_By = {
  createdAt?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  eventPersonRole?: Maybe<EventPersonRole_Order_By>;
  id?: Maybe<Order_By>;
  person?: Maybe<ContentPerson_Order_By>;
  personId?: Maybe<Order_By>;
  roleName?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "EventPerson" */
export type EventPerson_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "EventPerson" */
export enum EventPerson_Select_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  PersonId = 'personId',
  /** column name */
  RoleName = 'roleName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "EventPerson" */
export type EventPerson_Set_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  personId?: Maybe<Scalars['uuid']>;
  roleName?: Maybe<EventPersonRole_Enum>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "EventPerson" */
export enum EventPerson_Update_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  PersonId = 'personId',
  /** column name */
  RoleName = 'roleName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "EventRoomJoinRequest" */
export type EventRoomJoinRequest = {
  __typename?: 'EventRoomJoinRequest';
  approved: Scalars['Boolean'];
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  /** An object relationship */
  eventPersonRole: EventPersonRole;
  eventPersonRoleName: EventPersonRole_Enum;
  id: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Aggregate = {
  __typename?: 'EventRoomJoinRequest_aggregate';
  aggregate?: Maybe<EventRoomJoinRequest_Aggregate_Fields>;
  nodes: Array<EventRoomJoinRequest>;
};

/** aggregate fields of "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Aggregate_Fields = {
  __typename?: 'EventRoomJoinRequest_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<EventRoomJoinRequest_Max_Fields>;
  min?: Maybe<EventRoomJoinRequest_Min_Fields>;
};


/** aggregate fields of "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<EventRoomJoinRequest_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<EventRoomJoinRequest_Max_Order_By>;
  min?: Maybe<EventRoomJoinRequest_Min_Order_By>;
};

/** input type for inserting array relation for remote table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Arr_Rel_Insert_Input = {
  data: Array<EventRoomJoinRequest_Insert_Input>;
  on_conflict?: Maybe<EventRoomJoinRequest_On_Conflict>;
};

/** Boolean expression to filter rows from the table "EventRoomJoinRequest". All fields are combined with a logical 'AND'. */
export type EventRoomJoinRequest_Bool_Exp = {
  _and?: Maybe<Array<Maybe<EventRoomJoinRequest_Bool_Exp>>>;
  _not?: Maybe<EventRoomJoinRequest_Bool_Exp>;
  _or?: Maybe<Array<Maybe<EventRoomJoinRequest_Bool_Exp>>>;
  approved?: Maybe<Boolean_Comparison_Exp>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  eventPersonRole?: Maybe<EventPersonRole_Bool_Exp>;
  eventPersonRoleName?: Maybe<EventPersonRole_Enum_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventRoomJoinRequest" */
export enum EventRoomJoinRequest_Constraint {
  /** unique or primary key constraint */
  EventRoomJoinRequestEventIdAttendeeIdKey = 'EventRoomJoinRequest_eventId_attendeeId_key',
  /** unique or primary key constraint */
  EventRoomJoinRequestPkey = 'EventRoomJoinRequest_pkey'
}

/** input type for inserting data into table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Insert_Input = {
  approved?: Maybe<Scalars['Boolean']>;
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  eventPersonRole?: Maybe<EventPersonRole_Obj_Rel_Insert_Input>;
  eventPersonRoleName?: Maybe<EventPersonRole_Enum>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type EventRoomJoinRequest_Max_Fields = {
  __typename?: 'EventRoomJoinRequest_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type EventRoomJoinRequest_Min_Fields = {
  __typename?: 'EventRoomJoinRequest_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Mutation_Response = {
  __typename?: 'EventRoomJoinRequest_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<EventRoomJoinRequest>;
};

/** input type for inserting object relation for remote table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Obj_Rel_Insert_Input = {
  data: EventRoomJoinRequest_Insert_Input;
  on_conflict?: Maybe<EventRoomJoinRequest_On_Conflict>;
};

/** on conflict condition type for table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_On_Conflict = {
  constraint: EventRoomJoinRequest_Constraint;
  update_columns: Array<EventRoomJoinRequest_Update_Column>;
  where?: Maybe<EventRoomJoinRequest_Bool_Exp>;
};

/** ordering options when selecting data from "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Order_By = {
  approved?: Maybe<Order_By>;
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  eventPersonRole?: Maybe<EventPersonRole_Order_By>;
  eventPersonRoleName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "EventRoomJoinRequest" */
export enum EventRoomJoinRequest_Select_Column {
  /** column name */
  Approved = 'approved',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  EventPersonRoleName = 'eventPersonRoleName',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "EventRoomJoinRequest" */
export type EventRoomJoinRequest_Set_Input = {
  approved?: Maybe<Scalars['Boolean']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  eventPersonRoleName?: Maybe<EventPersonRole_Enum>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "EventRoomJoinRequest" */
export enum EventRoomJoinRequest_Update_Column {
  /** column name */
  Approved = 'approved',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  EventPersonRoleName = 'eventPersonRoleName',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "EventTag" */
export type EventTag = {
  __typename?: 'EventTag';
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  tag: Tag;
  tagId: Scalars['uuid'];
};

/** aggregated selection of "EventTag" */
export type EventTag_Aggregate = {
  __typename?: 'EventTag_aggregate';
  aggregate?: Maybe<EventTag_Aggregate_Fields>;
  nodes: Array<EventTag>;
};

/** aggregate fields of "EventTag" */
export type EventTag_Aggregate_Fields = {
  __typename?: 'EventTag_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<EventTag_Max_Fields>;
  min?: Maybe<EventTag_Min_Fields>;
};


/** aggregate fields of "EventTag" */
export type EventTag_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<EventTag_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "EventTag" */
export type EventTag_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<EventTag_Max_Order_By>;
  min?: Maybe<EventTag_Min_Order_By>;
};

/** input type for inserting array relation for remote table "EventTag" */
export type EventTag_Arr_Rel_Insert_Input = {
  data: Array<EventTag_Insert_Input>;
  on_conflict?: Maybe<EventTag_On_Conflict>;
};

/** Boolean expression to filter rows from the table "EventTag". All fields are combined with a logical 'AND'. */
export type EventTag_Bool_Exp = {
  _and?: Maybe<Array<Maybe<EventTag_Bool_Exp>>>;
  _not?: Maybe<EventTag_Bool_Exp>;
  _or?: Maybe<Array<Maybe<EventTag_Bool_Exp>>>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  tag?: Maybe<Tag_Bool_Exp>;
  tagId?: Maybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventTag" */
export enum EventTag_Constraint {
  /** unique or primary key constraint */
  EventTagPkey = 'EventTag_pkey',
  /** unique or primary key constraint */
  EventTagTagIdEventIdKey = 'EventTag_tagId_eventId_key'
}

/** input type for inserting data into table "EventTag" */
export type EventTag_Insert_Input = {
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tag?: Maybe<Tag_Obj_Rel_Insert_Input>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type EventTag_Max_Fields = {
  __typename?: 'EventTag_max_fields';
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "EventTag" */
export type EventTag_Max_Order_By = {
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tagId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type EventTag_Min_Fields = {
  __typename?: 'EventTag_min_fields';
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "EventTag" */
export type EventTag_Min_Order_By = {
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tagId?: Maybe<Order_By>;
};

/** response of any mutation on the table "EventTag" */
export type EventTag_Mutation_Response = {
  __typename?: 'EventTag_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<EventTag>;
};

/** input type for inserting object relation for remote table "EventTag" */
export type EventTag_Obj_Rel_Insert_Input = {
  data: EventTag_Insert_Input;
  on_conflict?: Maybe<EventTag_On_Conflict>;
};

/** on conflict condition type for table "EventTag" */
export type EventTag_On_Conflict = {
  constraint: EventTag_Constraint;
  update_columns: Array<EventTag_Update_Column>;
  where?: Maybe<EventTag_Bool_Exp>;
};

/** ordering options when selecting data from "EventTag" */
export type EventTag_Order_By = {
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  tag?: Maybe<Tag_Order_By>;
  tagId?: Maybe<Order_By>;
};

/** primary key columns input for table: "EventTag" */
export type EventTag_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "EventTag" */
export enum EventTag_Select_Column {
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  TagId = 'tagId'
}

/** input type for updating data in table "EventTag" */
export type EventTag_Set_Input = {
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  tagId?: Maybe<Scalars['uuid']>;
};

/** update columns of table "EventTag" */
export enum EventTag_Update_Column {
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  TagId = 'tagId'
}

/** columns and relationships of "EventVonageSession" */
export type EventVonageSession = {
  __typename?: 'EventVonageSession';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  id: Scalars['uuid'];
  layoutData?: Maybe<Scalars['jsonb']>;
  sessionId: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "EventVonageSession" */
export type EventVonageSessionLayoutDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "EventVonageSession" */
export type EventVonageSession_Aggregate = {
  __typename?: 'EventVonageSession_aggregate';
  aggregate?: Maybe<EventVonageSession_Aggregate_Fields>;
  nodes: Array<EventVonageSession>;
};

/** aggregate fields of "EventVonageSession" */
export type EventVonageSession_Aggregate_Fields = {
  __typename?: 'EventVonageSession_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<EventVonageSession_Max_Fields>;
  min?: Maybe<EventVonageSession_Min_Fields>;
};


/** aggregate fields of "EventVonageSession" */
export type EventVonageSession_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<EventVonageSession_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "EventVonageSession" */
export type EventVonageSession_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<EventVonageSession_Max_Order_By>;
  min?: Maybe<EventVonageSession_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type EventVonageSession_Append_Input = {
  layoutData?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "EventVonageSession" */
export type EventVonageSession_Arr_Rel_Insert_Input = {
  data: Array<EventVonageSession_Insert_Input>;
  on_conflict?: Maybe<EventVonageSession_On_Conflict>;
};

/** Boolean expression to filter rows from the table "EventVonageSession". All fields are combined with a logical 'AND'. */
export type EventVonageSession_Bool_Exp = {
  _and?: Maybe<Array<Maybe<EventVonageSession_Bool_Exp>>>;
  _not?: Maybe<EventVonageSession_Bool_Exp>;
  _or?: Maybe<Array<Maybe<EventVonageSession_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  layoutData?: Maybe<Jsonb_Comparison_Exp>;
  sessionId?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "EventVonageSession" */
export enum EventVonageSession_Constraint {
  /** unique or primary key constraint */
  EventVonageSessionEventIdKey = 'EventVonageSession_eventId_key',
  /** unique or primary key constraint */
  EventVonageSessionPkey = 'EventVonageSession_pkey',
  /** unique or primary key constraint */
  EventVonageSessionSessionIdKey = 'EventVonageSession_sessionId_key'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type EventVonageSession_Delete_At_Path_Input = {
  layoutData?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type EventVonageSession_Delete_Elem_Input = {
  layoutData?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type EventVonageSession_Delete_Key_Input = {
  layoutData?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "EventVonageSession" */
export type EventVonageSession_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  layoutData?: Maybe<Scalars['jsonb']>;
  sessionId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type EventVonageSession_Max_Fields = {
  __typename?: 'EventVonageSession_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  sessionId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "EventVonageSession" */
export type EventVonageSession_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type EventVonageSession_Min_Fields = {
  __typename?: 'EventVonageSession_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  sessionId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "EventVonageSession" */
export type EventVonageSession_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "EventVonageSession" */
export type EventVonageSession_Mutation_Response = {
  __typename?: 'EventVonageSession_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<EventVonageSession>;
};

/** input type for inserting object relation for remote table "EventVonageSession" */
export type EventVonageSession_Obj_Rel_Insert_Input = {
  data: EventVonageSession_Insert_Input;
  on_conflict?: Maybe<EventVonageSession_On_Conflict>;
};

/** on conflict condition type for table "EventVonageSession" */
export type EventVonageSession_On_Conflict = {
  constraint: EventVonageSession_Constraint;
  update_columns: Array<EventVonageSession_Update_Column>;
  where?: Maybe<EventVonageSession_Bool_Exp>;
};

/** ordering options when selecting data from "EventVonageSession" */
export type EventVonageSession_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  layoutData?: Maybe<Order_By>;
  sessionId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "EventVonageSession" */
export type EventVonageSession_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type EventVonageSession_Prepend_Input = {
  layoutData?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "EventVonageSession" */
export enum EventVonageSession_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  LayoutData = 'layoutData',
  /** column name */
  SessionId = 'sessionId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "EventVonageSession" */
export type EventVonageSession_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  layoutData?: Maybe<Scalars['jsonb']>;
  sessionId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "EventVonageSession" */
export enum EventVonageSession_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  LayoutData = 'layoutData',
  /** column name */
  SessionId = 'sessionId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** aggregated selection of "Event" */
export type Event_Aggregate = {
  __typename?: 'Event_aggregate';
  aggregate?: Maybe<Event_Aggregate_Fields>;
  nodes: Array<Event>;
};

/** aggregate fields of "Event" */
export type Event_Aggregate_Fields = {
  __typename?: 'Event_aggregate_fields';
  avg?: Maybe<Event_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Event_Max_Fields>;
  min?: Maybe<Event_Min_Fields>;
  stddev?: Maybe<Event_Stddev_Fields>;
  stddev_pop?: Maybe<Event_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Event_Stddev_Samp_Fields>;
  sum?: Maybe<Event_Sum_Fields>;
  var_pop?: Maybe<Event_Var_Pop_Fields>;
  var_samp?: Maybe<Event_Var_Samp_Fields>;
  variance?: Maybe<Event_Variance_Fields>;
};


/** aggregate fields of "Event" */
export type Event_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Event_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Event" */
export type Event_Aggregate_Order_By = {
  avg?: Maybe<Event_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Event_Max_Order_By>;
  min?: Maybe<Event_Min_Order_By>;
  stddev?: Maybe<Event_Stddev_Order_By>;
  stddev_pop?: Maybe<Event_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Event_Stddev_Samp_Order_By>;
  sum?: Maybe<Event_Sum_Order_By>;
  var_pop?: Maybe<Event_Var_Pop_Order_By>;
  var_samp?: Maybe<Event_Var_Samp_Order_By>;
  variance?: Maybe<Event_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Event" */
export type Event_Arr_Rel_Insert_Input = {
  data: Array<Event_Insert_Input>;
  on_conflict?: Maybe<Event_On_Conflict>;
};

/** aggregate avg on columns */
export type Event_Avg_Fields = {
  __typename?: 'Event_avg_fields';
  durationSeconds?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "Event" */
export type Event_Avg_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Event". All fields are combined with a logical 'AND'. */
export type Event_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Event_Bool_Exp>>>;
  _not?: Maybe<Event_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Event_Bool_Exp>>>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Bool_Exp>;
  broadcasts?: Maybe<Broadcast_Bool_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroup?: Maybe<ContentGroup_Bool_Exp>;
  contentGroupId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  durationSeconds?: Maybe<Int_Comparison_Exp>;
  endTime?: Maybe<Timestamptz_Comparison_Exp>;
  eventPeople?: Maybe<EventPerson_Bool_Exp>;
  eventTags?: Maybe<EventTag_Bool_Exp>;
  eventVonageSession?: Maybe<EventVonageSession_Bool_Exp>;
  executedTransitions?: Maybe<ExecutedTransitions_Bool_Exp>;
  hallwayId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  intendedRoomModeName?: Maybe<RoomMode_Enum_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  originatingData?: Maybe<OriginatingData_Bool_Exp>;
  originatingDataId?: Maybe<Uuid_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  roomMode?: Maybe<RoomMode_Bool_Exp>;
  shufflePeriodId?: Maybe<Uuid_Comparison_Exp>;
  startTime?: Maybe<Timestamptz_Comparison_Exp>;
  transitions?: Maybe<Transitions_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Event" */
export enum Event_Constraint {
  /** unique or primary key constraint */
  EventPkey = 'Event_pkey'
}

/** input type for incrementing integer column in table "Event" */
export type Event_Inc_Input = {
  durationSeconds?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Event" */
export type Event_Insert_Input = {
  broadcastContentItem?: Maybe<BroadcastContentItem_Obj_Rel_Insert_Input>;
  broadcasts?: Maybe<Broadcast_Arr_Rel_Insert_Input>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroup?: Maybe<ContentGroup_Obj_Rel_Insert_Input>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  durationSeconds?: Maybe<Scalars['Int']>;
  endTime?: Maybe<Scalars['timestamptz']>;
  eventPeople?: Maybe<EventPerson_Arr_Rel_Insert_Input>;
  eventTags?: Maybe<EventTag_Arr_Rel_Insert_Input>;
  eventVonageSession?: Maybe<EventVonageSession_Obj_Rel_Insert_Input>;
  executedTransitions?: Maybe<ExecutedTransitions_Arr_Rel_Insert_Input>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  intendedRoomModeName?: Maybe<RoomMode_Enum>;
  name?: Maybe<Scalars['String']>;
  originatingData?: Maybe<OriginatingData_Obj_Rel_Insert_Input>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  roomMode?: Maybe<RoomMode_Obj_Rel_Insert_Input>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startTime?: Maybe<Scalars['timestamptz']>;
  transitions?: Maybe<Transitions_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Event_Max_Fields = {
  __typename?: 'Event_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  durationSeconds?: Maybe<Scalars['Int']>;
  endTime?: Maybe<Scalars['timestamptz']>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startTime?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Event" */
export type Event_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentGroupId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  durationSeconds?: Maybe<Order_By>;
  endTime?: Maybe<Order_By>;
  hallwayId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  startTime?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Event_Min_Fields = {
  __typename?: 'Event_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  durationSeconds?: Maybe<Scalars['Int']>;
  endTime?: Maybe<Scalars['timestamptz']>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startTime?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Event" */
export type Event_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentGroupId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  durationSeconds?: Maybe<Order_By>;
  endTime?: Maybe<Order_By>;
  hallwayId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  startTime?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Event" */
export type Event_Mutation_Response = {
  __typename?: 'Event_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Event>;
};

/** input type for inserting object relation for remote table "Event" */
export type Event_Obj_Rel_Insert_Input = {
  data: Event_Insert_Input;
  on_conflict?: Maybe<Event_On_Conflict>;
};

/** on conflict condition type for table "Event" */
export type Event_On_Conflict = {
  constraint: Event_Constraint;
  update_columns: Array<Event_Update_Column>;
  where?: Maybe<Event_Bool_Exp>;
};

/** ordering options when selecting data from "Event" */
export type Event_Order_By = {
  broadcastContentItem?: Maybe<BroadcastContentItem_Order_By>;
  broadcasts_aggregate?: Maybe<Broadcast_Aggregate_Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroup?: Maybe<ContentGroup_Order_By>;
  contentGroupId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  durationSeconds?: Maybe<Order_By>;
  endTime?: Maybe<Order_By>;
  eventPeople_aggregate?: Maybe<EventPerson_Aggregate_Order_By>;
  eventTags_aggregate?: Maybe<EventTag_Aggregate_Order_By>;
  eventVonageSession?: Maybe<EventVonageSession_Order_By>;
  executedTransitions_aggregate?: Maybe<ExecutedTransitions_Aggregate_Order_By>;
  hallwayId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  intendedRoomModeName?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingData?: Maybe<OriginatingData_Order_By>;
  originatingDataId?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  roomMode?: Maybe<RoomMode_Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  startTime?: Maybe<Order_By>;
  transitions_aggregate?: Maybe<Transitions_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "Event" */
export type Event_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Event" */
export enum Event_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DurationSeconds = 'durationSeconds',
  /** column name */
  EndTime = 'endTime',
  /** column name */
  HallwayId = 'hallwayId',
  /** column name */
  Id = 'id',
  /** column name */
  IntendedRoomModeName = 'intendedRoomModeName',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  ShufflePeriodId = 'shufflePeriodId',
  /** column name */
  StartTime = 'startTime',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Event" */
export type Event_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  durationSeconds?: Maybe<Scalars['Int']>;
  endTime?: Maybe<Scalars['timestamptz']>;
  hallwayId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  intendedRoomModeName?: Maybe<RoomMode_Enum>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startTime?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Event_Stddev_Fields = {
  __typename?: 'Event_stddev_fields';
  durationSeconds?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "Event" */
export type Event_Stddev_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Event_Stddev_Pop_Fields = {
  __typename?: 'Event_stddev_pop_fields';
  durationSeconds?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "Event" */
export type Event_Stddev_Pop_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Event_Stddev_Samp_Fields = {
  __typename?: 'Event_stddev_samp_fields';
  durationSeconds?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "Event" */
export type Event_Stddev_Samp_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Event_Sum_Fields = {
  __typename?: 'Event_sum_fields';
  durationSeconds?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "Event" */
export type Event_Sum_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** update columns of table "Event" */
export enum Event_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  DurationSeconds = 'durationSeconds',
  /** column name */
  EndTime = 'endTime',
  /** column name */
  HallwayId = 'hallwayId',
  /** column name */
  Id = 'id',
  /** column name */
  IntendedRoomModeName = 'intendedRoomModeName',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  ShufflePeriodId = 'shufflePeriodId',
  /** column name */
  StartTime = 'startTime',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** aggregate var_pop on columns */
export type Event_Var_Pop_Fields = {
  __typename?: 'Event_var_pop_fields';
  durationSeconds?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "Event" */
export type Event_Var_Pop_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Event_Var_Samp_Fields = {
  __typename?: 'Event_var_samp_fields';
  durationSeconds?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "Event" */
export type Event_Var_Samp_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Event_Variance_Fields = {
  __typename?: 'Event_variance_fields';
  durationSeconds?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "Event" */
export type Event_Variance_Order_By = {
  durationSeconds?: Maybe<Order_By>;
};

/** columns and relationships of "ExecutedTransitions" */
export type ExecutedTransitions = {
  __typename?: 'ExecutedTransitions';
  broadcastContentId: Scalars['uuid'];
  /** An object relationship */
  broadcastContentItem: BroadcastContentItem;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  room: Room;
  roomId: Scalars['uuid'];
  time: Scalars['timestamptz'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "ExecutedTransitions" */
export type ExecutedTransitions_Aggregate = {
  __typename?: 'ExecutedTransitions_aggregate';
  aggregate?: Maybe<ExecutedTransitions_Aggregate_Fields>;
  nodes: Array<ExecutedTransitions>;
};

/** aggregate fields of "ExecutedTransitions" */
export type ExecutedTransitions_Aggregate_Fields = {
  __typename?: 'ExecutedTransitions_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<ExecutedTransitions_Max_Fields>;
  min?: Maybe<ExecutedTransitions_Min_Fields>;
};


/** aggregate fields of "ExecutedTransitions" */
export type ExecutedTransitions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "ExecutedTransitions" */
export type ExecutedTransitions_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<ExecutedTransitions_Max_Order_By>;
  min?: Maybe<ExecutedTransitions_Min_Order_By>;
};

/** input type for inserting array relation for remote table "ExecutedTransitions" */
export type ExecutedTransitions_Arr_Rel_Insert_Input = {
  data: Array<ExecutedTransitions_Insert_Input>;
  on_conflict?: Maybe<ExecutedTransitions_On_Conflict>;
};

/** Boolean expression to filter rows from the table "ExecutedTransitions". All fields are combined with a logical 'AND'. */
export type ExecutedTransitions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<ExecutedTransitions_Bool_Exp>>>;
  _not?: Maybe<ExecutedTransitions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<ExecutedTransitions_Bool_Exp>>>;
  broadcastContentId?: Maybe<Uuid_Comparison_Exp>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Bool_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  time?: Maybe<Timestamptz_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "ExecutedTransitions" */
export enum ExecutedTransitions_Constraint {
  /** unique or primary key constraint */
  ExecutedTransitionsPkey = 'ExecutedTransitions_pkey'
}

/** input type for inserting data into table "ExecutedTransitions" */
export type ExecutedTransitions_Insert_Input = {
  broadcastContentId?: Maybe<Scalars['uuid']>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Obj_Rel_Insert_Input>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type ExecutedTransitions_Max_Fields = {
  __typename?: 'ExecutedTransitions_max_fields';
  broadcastContentId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "ExecutedTransitions" */
export type ExecutedTransitions_Max_Order_By = {
  broadcastContentId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  time?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type ExecutedTransitions_Min_Fields = {
  __typename?: 'ExecutedTransitions_min_fields';
  broadcastContentId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "ExecutedTransitions" */
export type ExecutedTransitions_Min_Order_By = {
  broadcastContentId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  time?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "ExecutedTransitions" */
export type ExecutedTransitions_Mutation_Response = {
  __typename?: 'ExecutedTransitions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<ExecutedTransitions>;
};

/** input type for inserting object relation for remote table "ExecutedTransitions" */
export type ExecutedTransitions_Obj_Rel_Insert_Input = {
  data: ExecutedTransitions_Insert_Input;
  on_conflict?: Maybe<ExecutedTransitions_On_Conflict>;
};

/** on conflict condition type for table "ExecutedTransitions" */
export type ExecutedTransitions_On_Conflict = {
  constraint: ExecutedTransitions_Constraint;
  update_columns: Array<ExecutedTransitions_Update_Column>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};

/** ordering options when selecting data from "ExecutedTransitions" */
export type ExecutedTransitions_Order_By = {
  broadcastContentId?: Maybe<Order_By>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  time?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "ExecutedTransitions" */
export type ExecutedTransitions_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "ExecutedTransitions" */
export enum ExecutedTransitions_Select_Column {
  /** column name */
  BroadcastContentId = 'broadcastContentId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  Time = 'time',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "ExecutedTransitions" */
export type ExecutedTransitions_Set_Input = {
  broadcastContentId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "ExecutedTransitions" */
export enum ExecutedTransitions_Update_Column {
  /** column name */
  BroadcastContentId = 'broadcastContentId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  Time = 'time',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "FlatUnauthPermission" */
export type FlatUnauthPermission = {
  __typename?: 'FlatUnauthPermission';
  permission_name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
};

/** aggregated selection of "FlatUnauthPermission" */
export type FlatUnauthPermission_Aggregate = {
  __typename?: 'FlatUnauthPermission_aggregate';
  aggregate?: Maybe<FlatUnauthPermission_Aggregate_Fields>;
  nodes: Array<FlatUnauthPermission>;
};

/** aggregate fields of "FlatUnauthPermission" */
export type FlatUnauthPermission_Aggregate_Fields = {
  __typename?: 'FlatUnauthPermission_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<FlatUnauthPermission_Max_Fields>;
  min?: Maybe<FlatUnauthPermission_Min_Fields>;
};


/** aggregate fields of "FlatUnauthPermission" */
export type FlatUnauthPermission_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<FlatUnauthPermission_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "FlatUnauthPermission" */
export type FlatUnauthPermission_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<FlatUnauthPermission_Max_Order_By>;
  min?: Maybe<FlatUnauthPermission_Min_Order_By>;
};

/** Boolean expression to filter rows from the table "FlatUnauthPermission". All fields are combined with a logical 'AND'. */
export type FlatUnauthPermission_Bool_Exp = {
  _and?: Maybe<Array<Maybe<FlatUnauthPermission_Bool_Exp>>>;
  _not?: Maybe<FlatUnauthPermission_Bool_Exp>;
  _or?: Maybe<Array<Maybe<FlatUnauthPermission_Bool_Exp>>>;
  permission_name?: Maybe<String_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type FlatUnauthPermission_Max_Fields = {
  __typename?: 'FlatUnauthPermission_max_fields';
  permission_name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "FlatUnauthPermission" */
export type FlatUnauthPermission_Max_Order_By = {
  permission_name?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type FlatUnauthPermission_Min_Fields = {
  __typename?: 'FlatUnauthPermission_min_fields';
  permission_name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "FlatUnauthPermission" */
export type FlatUnauthPermission_Min_Order_By = {
  permission_name?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
};

/** ordering options when selecting data from "FlatUnauthPermission" */
export type FlatUnauthPermission_Order_By = {
  permission_name?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
};

/** select columns of table "FlatUnauthPermission" */
export enum FlatUnauthPermission_Select_Column {
  /** column name */
  PermissionName = 'permission_name',
  /** column name */
  Slug = 'slug'
}

/** columns and relationships of "FlatUserPermission" */
export type FlatUserPermission = {
  __typename?: 'FlatUserPermission';
  /** An object relationship */
  conference?: Maybe<Conference>;
  /** An object relationship */
  permission?: Maybe<Permission>;
  permission_name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  /** An object relationship */
  user?: Maybe<User>;
  user_id?: Maybe<Scalars['String']>;
};

/** aggregated selection of "FlatUserPermission" */
export type FlatUserPermission_Aggregate = {
  __typename?: 'FlatUserPermission_aggregate';
  aggregate?: Maybe<FlatUserPermission_Aggregate_Fields>;
  nodes: Array<FlatUserPermission>;
};

/** aggregate fields of "FlatUserPermission" */
export type FlatUserPermission_Aggregate_Fields = {
  __typename?: 'FlatUserPermission_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<FlatUserPermission_Max_Fields>;
  min?: Maybe<FlatUserPermission_Min_Fields>;
};


/** aggregate fields of "FlatUserPermission" */
export type FlatUserPermission_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<FlatUserPermission_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "FlatUserPermission" */
export type FlatUserPermission_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<FlatUserPermission_Max_Order_By>;
  min?: Maybe<FlatUserPermission_Min_Order_By>;
};

/** Boolean expression to filter rows from the table "FlatUserPermission". All fields are combined with a logical 'AND'. */
export type FlatUserPermission_Bool_Exp = {
  _and?: Maybe<Array<Maybe<FlatUserPermission_Bool_Exp>>>;
  _not?: Maybe<FlatUserPermission_Bool_Exp>;
  _or?: Maybe<Array<Maybe<FlatUserPermission_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  permission?: Maybe<Permission_Bool_Exp>;
  permission_name?: Maybe<String_Comparison_Exp>;
  slug?: Maybe<String_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  user_id?: Maybe<String_Comparison_Exp>;
};

/** aggregate max on columns */
export type FlatUserPermission_Max_Fields = {
  __typename?: 'FlatUserPermission_max_fields';
  permission_name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "FlatUserPermission" */
export type FlatUserPermission_Max_Order_By = {
  permission_name?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type FlatUserPermission_Min_Fields = {
  __typename?: 'FlatUserPermission_min_fields';
  permission_name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  user_id?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "FlatUserPermission" */
export type FlatUserPermission_Min_Order_By = {
  permission_name?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  user_id?: Maybe<Order_By>;
};

/** ordering options when selecting data from "FlatUserPermission" */
export type FlatUserPermission_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  permission?: Maybe<Permission_Order_By>;
  permission_name?: Maybe<Order_By>;
  slug?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  user_id?: Maybe<Order_By>;
};

/** select columns of table "FlatUserPermission" */
export enum FlatUserPermission_Select_Column {
  /** column name */
  PermissionName = 'permission_name',
  /** column name */
  Slug = 'slug',
  /** column name */
  UserId = 'user_id'
}

/** expression to compare columns of type Float. All fields are combined with logical 'AND'. */
export type Float_Comparison_Exp = {
  _eq?: Maybe<Scalars['Float']>;
  _gt?: Maybe<Scalars['Float']>;
  _gte?: Maybe<Scalars['Float']>;
  _in?: Maybe<Array<Scalars['Float']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Float']>;
  _lte?: Maybe<Scalars['Float']>;
  _neq?: Maybe<Scalars['Float']>;
  _nin?: Maybe<Array<Scalars['Float']>>;
};

export type GenerateChatRemoteServiceIdsOutput = {
  __typename?: 'GenerateChatRemoteServiceIdsOutput';
  error?: Maybe<Scalars['String']>;
};

export type GenerateChatRemoteUserIdsOutput = {
  __typename?: 'GenerateChatRemoteUserIdsOutput';
  error?: Maybe<Scalars['String']>;
};

export type GetContentItemOutput = {
  __typename?: 'GetContentItemOutput';
  contentGroupTitle: Scalars['String'];
  contentTypeName: Scalars['String'];
  data: Scalars['jsonb'];
  id: Scalars['String'];
  layoutData?: Maybe<Scalars['jsonb']>;
  name: Scalars['String'];
};

export type GetGoogleOAuthUrlOutput = {
  __typename?: 'GetGoogleOAuthUrlOutput';
  url: Scalars['String'];
};

export type GetUploadAgreementOutput = {
  __typename?: 'GetUploadAgreementOutput';
  agreementText?: Maybe<Scalars['String']>;
};

/** columns and relationships of "Group" */
export type Group = {
  __typename?: 'Group';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  enabled: Scalars['Boolean'];
  /** An array relationship */
  groupAttendees: Array<GroupAttendee>;
  /** An aggregated array relationship */
  groupAttendees_aggregate: GroupAttendee_Aggregate;
  /** An array relationship */
  groupRoles: Array<GroupRole>;
  /** An aggregated array relationship */
  groupRoles_aggregate: GroupRole_Aggregate;
  id: Scalars['uuid'];
  includeUnauthenticated: Scalars['Boolean'];
  name: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "Group" */
export type GroupGroupAttendeesArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** columns and relationships of "Group" */
export type GroupGroupAttendees_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** columns and relationships of "Group" */
export type GroupGroupRolesArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};


/** columns and relationships of "Group" */
export type GroupGroupRoles_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};

/** columns and relationships of "GroupAttendee" */
export type GroupAttendee = {
  __typename?: 'GroupAttendee';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  group: Group;
  groupId: Scalars['uuid'];
  id: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "GroupAttendee" */
export type GroupAttendee_Aggregate = {
  __typename?: 'GroupAttendee_aggregate';
  aggregate?: Maybe<GroupAttendee_Aggregate_Fields>;
  nodes: Array<GroupAttendee>;
};

/** aggregate fields of "GroupAttendee" */
export type GroupAttendee_Aggregate_Fields = {
  __typename?: 'GroupAttendee_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<GroupAttendee_Max_Fields>;
  min?: Maybe<GroupAttendee_Min_Fields>;
};


/** aggregate fields of "GroupAttendee" */
export type GroupAttendee_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<GroupAttendee_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "GroupAttendee" */
export type GroupAttendee_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<GroupAttendee_Max_Order_By>;
  min?: Maybe<GroupAttendee_Min_Order_By>;
};

/** input type for inserting array relation for remote table "GroupAttendee" */
export type GroupAttendee_Arr_Rel_Insert_Input = {
  data: Array<GroupAttendee_Insert_Input>;
  on_conflict?: Maybe<GroupAttendee_On_Conflict>;
};

/** Boolean expression to filter rows from the table "GroupAttendee". All fields are combined with a logical 'AND'. */
export type GroupAttendee_Bool_Exp = {
  _and?: Maybe<Array<Maybe<GroupAttendee_Bool_Exp>>>;
  _not?: Maybe<GroupAttendee_Bool_Exp>;
  _or?: Maybe<Array<Maybe<GroupAttendee_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<Group_Bool_Exp>;
  groupId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "GroupAttendee" */
export enum GroupAttendee_Constraint {
  /** unique or primary key constraint */
  GroupAttendeeGroupIdAttendeeIdKey = 'GroupAttendee_groupId_attendeeId_key',
  /** unique or primary key constraint */
  GroupAttendeePkey = 'GroupAttendee_pkey'
}

/** input type for inserting data into table "GroupAttendee" */
export type GroupAttendee_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<Group_Obj_Rel_Insert_Input>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type GroupAttendee_Max_Fields = {
  __typename?: 'GroupAttendee_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "GroupAttendee" */
export type GroupAttendee_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type GroupAttendee_Min_Fields = {
  __typename?: 'GroupAttendee_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "GroupAttendee" */
export type GroupAttendee_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "GroupAttendee" */
export type GroupAttendee_Mutation_Response = {
  __typename?: 'GroupAttendee_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<GroupAttendee>;
};

/** input type for inserting object relation for remote table "GroupAttendee" */
export type GroupAttendee_Obj_Rel_Insert_Input = {
  data: GroupAttendee_Insert_Input;
  on_conflict?: Maybe<GroupAttendee_On_Conflict>;
};

/** on conflict condition type for table "GroupAttendee" */
export type GroupAttendee_On_Conflict = {
  constraint: GroupAttendee_Constraint;
  update_columns: Array<GroupAttendee_Update_Column>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};

/** ordering options when selecting data from "GroupAttendee" */
export type GroupAttendee_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  group?: Maybe<Group_Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "GroupAttendee" */
export type GroupAttendee_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "GroupAttendee" */
export enum GroupAttendee_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "GroupAttendee" */
export type GroupAttendee_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "GroupAttendee" */
export enum GroupAttendee_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "GroupRole" */
export type GroupRole = {
  __typename?: 'GroupRole';
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  group: Group;
  groupId: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  role: Role;
  roleId: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "GroupRole" */
export type GroupRole_Aggregate = {
  __typename?: 'GroupRole_aggregate';
  aggregate?: Maybe<GroupRole_Aggregate_Fields>;
  nodes: Array<GroupRole>;
};

/** aggregate fields of "GroupRole" */
export type GroupRole_Aggregate_Fields = {
  __typename?: 'GroupRole_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<GroupRole_Max_Fields>;
  min?: Maybe<GroupRole_Min_Fields>;
};


/** aggregate fields of "GroupRole" */
export type GroupRole_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<GroupRole_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "GroupRole" */
export type GroupRole_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<GroupRole_Max_Order_By>;
  min?: Maybe<GroupRole_Min_Order_By>;
};

/** input type for inserting array relation for remote table "GroupRole" */
export type GroupRole_Arr_Rel_Insert_Input = {
  data: Array<GroupRole_Insert_Input>;
  on_conflict?: Maybe<GroupRole_On_Conflict>;
};

/** Boolean expression to filter rows from the table "GroupRole". All fields are combined with a logical 'AND'. */
export type GroupRole_Bool_Exp = {
  _and?: Maybe<Array<Maybe<GroupRole_Bool_Exp>>>;
  _not?: Maybe<GroupRole_Bool_Exp>;
  _or?: Maybe<Array<Maybe<GroupRole_Bool_Exp>>>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  group?: Maybe<Group_Bool_Exp>;
  groupId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  role?: Maybe<Role_Bool_Exp>;
  roleId?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "GroupRole" */
export enum GroupRole_Constraint {
  /** unique or primary key constraint */
  GroupRoleGroupIdRoleIdKey = 'GroupRole_groupId_roleId_key',
  /** unique or primary key constraint */
  GroupRolePkey = 'GroupRole_pkey'
}

/** input type for inserting data into table "GroupRole" */
export type GroupRole_Insert_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  group?: Maybe<Group_Obj_Rel_Insert_Input>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  role?: Maybe<Role_Obj_Rel_Insert_Input>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type GroupRole_Max_Fields = {
  __typename?: 'GroupRole_max_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "GroupRole" */
export type GroupRole_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type GroupRole_Min_Fields = {
  __typename?: 'GroupRole_min_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "GroupRole" */
export type GroupRole_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "GroupRole" */
export type GroupRole_Mutation_Response = {
  __typename?: 'GroupRole_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<GroupRole>;
};

/** input type for inserting object relation for remote table "GroupRole" */
export type GroupRole_Obj_Rel_Insert_Input = {
  data: GroupRole_Insert_Input;
  on_conflict?: Maybe<GroupRole_On_Conflict>;
};

/** on conflict condition type for table "GroupRole" */
export type GroupRole_On_Conflict = {
  constraint: GroupRole_Constraint;
  update_columns: Array<GroupRole_Update_Column>;
  where?: Maybe<GroupRole_Bool_Exp>;
};

/** ordering options when selecting data from "GroupRole" */
export type GroupRole_Order_By = {
  createdAt?: Maybe<Order_By>;
  group?: Maybe<Group_Order_By>;
  groupId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  role?: Maybe<Role_Order_By>;
  roleId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "GroupRole" */
export type GroupRole_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "GroupRole" */
export enum GroupRole_Select_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  RoleId = 'roleId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "GroupRole" */
export type GroupRole_Set_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  groupId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "GroupRole" */
export enum GroupRole_Update_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  GroupId = 'groupId',
  /** column name */
  Id = 'id',
  /** column name */
  RoleId = 'roleId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** aggregated selection of "Group" */
export type Group_Aggregate = {
  __typename?: 'Group_aggregate';
  aggregate?: Maybe<Group_Aggregate_Fields>;
  nodes: Array<Group>;
};

/** aggregate fields of "Group" */
export type Group_Aggregate_Fields = {
  __typename?: 'Group_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Group_Max_Fields>;
  min?: Maybe<Group_Min_Fields>;
};


/** aggregate fields of "Group" */
export type Group_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Group_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Group" */
export type Group_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Group_Max_Order_By>;
  min?: Maybe<Group_Min_Order_By>;
};

/** input type for inserting array relation for remote table "Group" */
export type Group_Arr_Rel_Insert_Input = {
  data: Array<Group_Insert_Input>;
  on_conflict?: Maybe<Group_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Group". All fields are combined with a logical 'AND'. */
export type Group_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Group_Bool_Exp>>>;
  _not?: Maybe<Group_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Group_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  enabled?: Maybe<Boolean_Comparison_Exp>;
  groupAttendees?: Maybe<GroupAttendee_Bool_Exp>;
  groupRoles?: Maybe<GroupRole_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  includeUnauthenticated?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Group" */
export enum Group_Constraint {
  /** unique or primary key constraint */
  GroupConferenceIdNameKey = 'Group_conferenceId_name_key',
  /** unique or primary key constraint */
  GroupPkey = 'Group_pkey'
}

/** input type for inserting data into table "Group" */
export type Group_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  enabled?: Maybe<Scalars['Boolean']>;
  groupAttendees?: Maybe<GroupAttendee_Arr_Rel_Insert_Input>;
  groupRoles?: Maybe<GroupRole_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  includeUnauthenticated?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Group_Max_Fields = {
  __typename?: 'Group_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Group" */
export type Group_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Group_Min_Fields = {
  __typename?: 'Group_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Group" */
export type Group_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Group" */
export type Group_Mutation_Response = {
  __typename?: 'Group_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Group>;
};

/** input type for inserting object relation for remote table "Group" */
export type Group_Obj_Rel_Insert_Input = {
  data: Group_Insert_Input;
  on_conflict?: Maybe<Group_On_Conflict>;
};

/** on conflict condition type for table "Group" */
export type Group_On_Conflict = {
  constraint: Group_Constraint;
  update_columns: Array<Group_Update_Column>;
  where?: Maybe<Group_Bool_Exp>;
};

/** ordering options when selecting data from "Group" */
export type Group_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  enabled?: Maybe<Order_By>;
  groupAttendees_aggregate?: Maybe<GroupAttendee_Aggregate_Order_By>;
  groupRoles_aggregate?: Maybe<GroupRole_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  includeUnauthenticated?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "Group" */
export type Group_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Group" */
export enum Group_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Enabled = 'enabled',
  /** column name */
  Id = 'id',
  /** column name */
  IncludeUnauthenticated = 'includeUnauthenticated',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Group" */
export type Group_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  enabled?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['uuid']>;
  includeUnauthenticated?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "Group" */
export enum Group_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Enabled = 'enabled',
  /** column name */
  Id = 'id',
  /** column name */
  IncludeUnauthenticated = 'includeUnauthenticated',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "Hallway" */
export type Hallway = {
  __typename?: 'Hallway';
  colour: Scalars['String'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An array relationship */
  contentGroups: Array<ContentGroupHallway>;
  /** An aggregated array relationship */
  contentGroups_aggregate: ContentGroupHallway_Aggregate;
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  name: Scalars['String'];
  priority: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "Hallway" */
export type HallwayContentGroupsArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};


/** columns and relationships of "Hallway" */
export type HallwayContentGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};

/** aggregated selection of "Hallway" */
export type Hallway_Aggregate = {
  __typename?: 'Hallway_aggregate';
  aggregate?: Maybe<Hallway_Aggregate_Fields>;
  nodes: Array<Hallway>;
};

/** aggregate fields of "Hallway" */
export type Hallway_Aggregate_Fields = {
  __typename?: 'Hallway_aggregate_fields';
  avg?: Maybe<Hallway_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Hallway_Max_Fields>;
  min?: Maybe<Hallway_Min_Fields>;
  stddev?: Maybe<Hallway_Stddev_Fields>;
  stddev_pop?: Maybe<Hallway_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Hallway_Stddev_Samp_Fields>;
  sum?: Maybe<Hallway_Sum_Fields>;
  var_pop?: Maybe<Hallway_Var_Pop_Fields>;
  var_samp?: Maybe<Hallway_Var_Samp_Fields>;
  variance?: Maybe<Hallway_Variance_Fields>;
};


/** aggregate fields of "Hallway" */
export type Hallway_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Hallway_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Hallway" */
export type Hallway_Aggregate_Order_By = {
  avg?: Maybe<Hallway_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Hallway_Max_Order_By>;
  min?: Maybe<Hallway_Min_Order_By>;
  stddev?: Maybe<Hallway_Stddev_Order_By>;
  stddev_pop?: Maybe<Hallway_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Hallway_Stddev_Samp_Order_By>;
  sum?: Maybe<Hallway_Sum_Order_By>;
  var_pop?: Maybe<Hallway_Var_Pop_Order_By>;
  var_samp?: Maybe<Hallway_Var_Samp_Order_By>;
  variance?: Maybe<Hallway_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Hallway" */
export type Hallway_Arr_Rel_Insert_Input = {
  data: Array<Hallway_Insert_Input>;
  on_conflict?: Maybe<Hallway_On_Conflict>;
};

/** aggregate avg on columns */
export type Hallway_Avg_Fields = {
  __typename?: 'Hallway_avg_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "Hallway" */
export type Hallway_Avg_Order_By = {
  priority?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Hallway". All fields are combined with a logical 'AND'. */
export type Hallway_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Hallway_Bool_Exp>>>;
  _not?: Maybe<Hallway_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Hallway_Bool_Exp>>>;
  colour?: Maybe<String_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroups?: Maybe<ContentGroupHallway_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Hallway" */
export enum Hallway_Constraint {
  /** unique or primary key constraint */
  HallwayNameConferenceIdKey = 'Hallway_name_conferenceId_key',
  /** unique or primary key constraint */
  HallwayPkey = 'Hallway_pkey'
}

/** input type for incrementing integer column in table "Hallway" */
export type Hallway_Inc_Input = {
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Hallway" */
export type Hallway_Insert_Input = {
  colour?: Maybe<Scalars['String']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroups?: Maybe<ContentGroupHallway_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Hallway_Max_Fields = {
  __typename?: 'Hallway_max_fields';
  colour?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Hallway" */
export type Hallway_Max_Order_By = {
  colour?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Hallway_Min_Fields = {
  __typename?: 'Hallway_min_fields';
  colour?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Hallway" */
export type Hallway_Min_Order_By = {
  colour?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "Hallway" */
export type Hallway_Mutation_Response = {
  __typename?: 'Hallway_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Hallway>;
};

/** input type for inserting object relation for remote table "Hallway" */
export type Hallway_Obj_Rel_Insert_Input = {
  data: Hallway_Insert_Input;
  on_conflict?: Maybe<Hallway_On_Conflict>;
};

/** on conflict condition type for table "Hallway" */
export type Hallway_On_Conflict = {
  constraint: Hallway_Constraint;
  update_columns: Array<Hallway_Update_Column>;
  where?: Maybe<Hallway_Bool_Exp>;
};

/** ordering options when selecting data from "Hallway" */
export type Hallway_Order_By = {
  colour?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroups_aggregate?: Maybe<ContentGroupHallway_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "Hallway" */
export type Hallway_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Hallway" */
export enum Hallway_Select_Column {
  /** column name */
  Colour = 'colour',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Priority = 'priority',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "Hallway" */
export type Hallway_Set_Input = {
  colour?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  priority?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Hallway_Stddev_Fields = {
  __typename?: 'Hallway_stddev_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "Hallway" */
export type Hallway_Stddev_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Hallway_Stddev_Pop_Fields = {
  __typename?: 'Hallway_stddev_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "Hallway" */
export type Hallway_Stddev_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Hallway_Stddev_Samp_Fields = {
  __typename?: 'Hallway_stddev_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "Hallway" */
export type Hallway_Stddev_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Hallway_Sum_Fields = {
  __typename?: 'Hallway_sum_fields';
  priority?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "Hallway" */
export type Hallway_Sum_Order_By = {
  priority?: Maybe<Order_By>;
};

/** update columns of table "Hallway" */
export enum Hallway_Update_Column {
  /** column name */
  Colour = 'colour',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  Priority = 'priority',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Hallway_Var_Pop_Fields = {
  __typename?: 'Hallway_var_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "Hallway" */
export type Hallway_Var_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Hallway_Var_Samp_Fields = {
  __typename?: 'Hallway_var_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "Hallway" */
export type Hallway_Var_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Hallway_Variance_Fields = {
  __typename?: 'Hallway_variance_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "Hallway" */
export type Hallway_Variance_Order_By = {
  priority?: Maybe<Order_By>;
};

/** columns and relationships of "InputType" */
export type InputType = {
  __typename?: 'InputType';
  /** An array relationship */
  broadcastContentItems: Array<BroadcastContentItem>;
  /** An aggregated array relationship */
  broadcastContentItems_aggregate: BroadcastContentItem_Aggregate;
  description: Scalars['String'];
  name: Scalars['String'];
};


/** columns and relationships of "InputType" */
export type InputTypeBroadcastContentItemsArgs = {
  distinct_on?: Maybe<Array<BroadcastContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BroadcastContentItem_Order_By>>;
  where?: Maybe<BroadcastContentItem_Bool_Exp>;
};


/** columns and relationships of "InputType" */
export type InputTypeBroadcastContentItems_AggregateArgs = {
  distinct_on?: Maybe<Array<BroadcastContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BroadcastContentItem_Order_By>>;
  where?: Maybe<BroadcastContentItem_Bool_Exp>;
};

/** aggregated selection of "InputType" */
export type InputType_Aggregate = {
  __typename?: 'InputType_aggregate';
  aggregate?: Maybe<InputType_Aggregate_Fields>;
  nodes: Array<InputType>;
};

/** aggregate fields of "InputType" */
export type InputType_Aggregate_Fields = {
  __typename?: 'InputType_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<InputType_Max_Fields>;
  min?: Maybe<InputType_Min_Fields>;
};


/** aggregate fields of "InputType" */
export type InputType_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<InputType_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "InputType" */
export type InputType_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<InputType_Max_Order_By>;
  min?: Maybe<InputType_Min_Order_By>;
};

/** input type for inserting array relation for remote table "InputType" */
export type InputType_Arr_Rel_Insert_Input = {
  data: Array<InputType_Insert_Input>;
  on_conflict?: Maybe<InputType_On_Conflict>;
};

/** Boolean expression to filter rows from the table "InputType". All fields are combined with a logical 'AND'. */
export type InputType_Bool_Exp = {
  _and?: Maybe<Array<Maybe<InputType_Bool_Exp>>>;
  _not?: Maybe<InputType_Bool_Exp>;
  _or?: Maybe<Array<Maybe<InputType_Bool_Exp>>>;
  broadcastContentItems?: Maybe<BroadcastContentItem_Bool_Exp>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "InputType" */
export enum InputType_Constraint {
  /** unique or primary key constraint */
  InputTypeNamePkey = 'InputTypeName_pkey'
}

export enum InputType_Enum {
  /** GIF image. */
  Gif = 'GIF',
  /** JPEG image (jay-peg). */
  Jpeg = 'JPEG',
  /** MP4 video file. */
  Mp4 = 'MP4',
  /** PNG image. */
  Png = 'PNG',
  /** RTMP stream in push mode. */
  RtmpPush = 'RTMP_PUSH',
  /** RTMP push from a Vonage Video API session. */
  VonageSession = 'VONAGE_SESSION'
}

/** expression to compare columns of type InputType_enum. All fields are combined with logical 'AND'. */
export type InputType_Enum_Comparison_Exp = {
  _eq?: Maybe<InputType_Enum>;
  _in?: Maybe<Array<InputType_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<InputType_Enum>;
  _nin?: Maybe<Array<InputType_Enum>>;
};

/** input type for inserting data into table "InputType" */
export type InputType_Insert_Input = {
  broadcastContentItems?: Maybe<BroadcastContentItem_Arr_Rel_Insert_Input>;
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type InputType_Max_Fields = {
  __typename?: 'InputType_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "InputType" */
export type InputType_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type InputType_Min_Fields = {
  __typename?: 'InputType_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "InputType" */
export type InputType_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "InputType" */
export type InputType_Mutation_Response = {
  __typename?: 'InputType_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<InputType>;
};

/** input type for inserting object relation for remote table "InputType" */
export type InputType_Obj_Rel_Insert_Input = {
  data: InputType_Insert_Input;
  on_conflict?: Maybe<InputType_On_Conflict>;
};

/** on conflict condition type for table "InputType" */
export type InputType_On_Conflict = {
  constraint: InputType_Constraint;
  update_columns: Array<InputType_Update_Column>;
  where?: Maybe<InputType_Bool_Exp>;
};

/** ordering options when selecting data from "InputType" */
export type InputType_Order_By = {
  broadcastContentItems_aggregate?: Maybe<BroadcastContentItem_Aggregate_Order_By>;
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "InputType" */
export type InputType_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "InputType" */
export enum InputType_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "InputType" */
export type InputType_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "InputType" */
export enum InputType_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** expression to compare columns of type Int. All fields are combined with logical 'AND'. */
export type Int_Comparison_Exp = {
  _eq?: Maybe<Scalars['Int']>;
  _gt?: Maybe<Scalars['Int']>;
  _gte?: Maybe<Scalars['Int']>;
  _in?: Maybe<Array<Scalars['Int']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['Int']>;
  _lte?: Maybe<Scalars['Int']>;
  _neq?: Maybe<Scalars['Int']>;
  _nin?: Maybe<Array<Scalars['Int']>>;
};

/** columns and relationships of "Invitation" */
export type Invitation = {
  __typename?: 'Invitation';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  conferenceId: Scalars['uuid'];
  confirmationCode?: Maybe<Scalars['uuid']>;
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  emails: Array<Email>;
  /** An aggregated array relationship */
  emails_aggregate: Email_Aggregate;
  /** A computed field, executes function "invitationhash" */
  hash?: Maybe<Scalars['String']>;
  id: Scalars['uuid'];
  inviteCode: Scalars['uuid'];
  invitedEmailAddress: Scalars['String'];
  linkToUserId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  user?: Maybe<User>;
};


/** columns and relationships of "Invitation" */
export type InvitationEmailsArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};


/** columns and relationships of "Invitation" */
export type InvitationEmails_AggregateArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};

export type InvitationConfirmationEmailInput = {
  inviteCode: Scalars['uuid'];
};

export type InvitationConfirmationEmailOutput = {
  __typename?: 'InvitationConfirmationEmailOutput';
  sent: Scalars['Boolean'];
};

export type InvitationSendEmailResult = {
  __typename?: 'InvitationSendEmailResult';
  attendeeId: Scalars['String'];
  sent: Scalars['Boolean'];
};

/** aggregated selection of "Invitation" */
export type Invitation_Aggregate = {
  __typename?: 'Invitation_aggregate';
  aggregate?: Maybe<Invitation_Aggregate_Fields>;
  nodes: Array<Invitation>;
};

/** aggregate fields of "Invitation" */
export type Invitation_Aggregate_Fields = {
  __typename?: 'Invitation_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Invitation_Max_Fields>;
  min?: Maybe<Invitation_Min_Fields>;
};


/** aggregate fields of "Invitation" */
export type Invitation_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Invitation_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Invitation" */
export type Invitation_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Invitation_Max_Order_By>;
  min?: Maybe<Invitation_Min_Order_By>;
};

/** input type for inserting array relation for remote table "Invitation" */
export type Invitation_Arr_Rel_Insert_Input = {
  data: Array<Invitation_Insert_Input>;
  on_conflict?: Maybe<Invitation_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Invitation". All fields are combined with a logical 'AND'. */
export type Invitation_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Invitation_Bool_Exp>>>;
  _not?: Maybe<Invitation_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Invitation_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  confirmationCode?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  emails?: Maybe<Email_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  inviteCode?: Maybe<Uuid_Comparison_Exp>;
  invitedEmailAddress?: Maybe<String_Comparison_Exp>;
  linkToUserId?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
};

/** unique or primary key constraints on table "Invitation" */
export enum Invitation_Constraint {
  /** unique or primary key constraint */
  InivitationAttendeeIdKey = 'Inivitation_attendeeId_key',
  /** unique or primary key constraint */
  InivitationConfirmationCodeKey = 'Inivitation_confirmationCode_key',
  /** unique or primary key constraint */
  InivitationInviteCodeKey = 'Inivitation_inviteCode_key',
  /** unique or primary key constraint */
  InivitationPkey = 'Inivitation_pkey',
  /** unique or primary key constraint */
  InvitationInvitedEmailAddressConferenceIdKey = 'Invitation_invitedEmailAddress_conferenceId_key'
}

/** input type for inserting data into table "Invitation" */
export type Invitation_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  confirmationCode?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  emails?: Maybe<Email_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  inviteCode?: Maybe<Scalars['uuid']>;
  invitedEmailAddress?: Maybe<Scalars['String']>;
  linkToUserId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Invitation_Max_Fields = {
  __typename?: 'Invitation_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  confirmationCode?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  inviteCode?: Maybe<Scalars['uuid']>;
  invitedEmailAddress?: Maybe<Scalars['String']>;
  linkToUserId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Invitation" */
export type Invitation_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  confirmationCode?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inviteCode?: Maybe<Order_By>;
  invitedEmailAddress?: Maybe<Order_By>;
  linkToUserId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Invitation_Min_Fields = {
  __typename?: 'Invitation_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  confirmationCode?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  inviteCode?: Maybe<Scalars['uuid']>;
  invitedEmailAddress?: Maybe<Scalars['String']>;
  linkToUserId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Invitation" */
export type Invitation_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  confirmationCode?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  inviteCode?: Maybe<Order_By>;
  invitedEmailAddress?: Maybe<Order_By>;
  linkToUserId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Invitation" */
export type Invitation_Mutation_Response = {
  __typename?: 'Invitation_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Invitation>;
};

/** input type for inserting object relation for remote table "Invitation" */
export type Invitation_Obj_Rel_Insert_Input = {
  data: Invitation_Insert_Input;
  on_conflict?: Maybe<Invitation_On_Conflict>;
};

/** on conflict condition type for table "Invitation" */
export type Invitation_On_Conflict = {
  constraint: Invitation_Constraint;
  update_columns: Array<Invitation_Update_Column>;
  where?: Maybe<Invitation_Bool_Exp>;
};

/** ordering options when selecting data from "Invitation" */
export type Invitation_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  confirmationCode?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  emails_aggregate?: Maybe<Email_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  inviteCode?: Maybe<Order_By>;
  invitedEmailAddress?: Maybe<Order_By>;
  linkToUserId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
};

/** primary key columns input for table: "Invitation" */
export type Invitation_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Invitation" */
export enum Invitation_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ConfirmationCode = 'confirmationCode',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  InviteCode = 'inviteCode',
  /** column name */
  InvitedEmailAddress = 'invitedEmailAddress',
  /** column name */
  LinkToUserId = 'linkToUserId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Invitation" */
export type Invitation_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  confirmationCode?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  inviteCode?: Maybe<Scalars['uuid']>;
  invitedEmailAddress?: Maybe<Scalars['String']>;
  linkToUserId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "Invitation" */
export enum Invitation_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ConfirmationCode = 'confirmationCode',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  InviteCode = 'inviteCode',
  /** column name */
  InvitedEmailAddress = 'invitedEmailAddress',
  /** column name */
  LinkToUserId = 'linkToUserId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "JobStatus" */
export type JobStatus = {
  __typename?: 'JobStatus';
  description: Scalars['String'];
  name: Scalars['String'];
};

/** aggregated selection of "JobStatus" */
export type JobStatus_Aggregate = {
  __typename?: 'JobStatus_aggregate';
  aggregate?: Maybe<JobStatus_Aggregate_Fields>;
  nodes: Array<JobStatus>;
};

/** aggregate fields of "JobStatus" */
export type JobStatus_Aggregate_Fields = {
  __typename?: 'JobStatus_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<JobStatus_Max_Fields>;
  min?: Maybe<JobStatus_Min_Fields>;
};


/** aggregate fields of "JobStatus" */
export type JobStatus_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<JobStatus_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "JobStatus" */
export type JobStatus_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<JobStatus_Max_Order_By>;
  min?: Maybe<JobStatus_Min_Order_By>;
};

/** input type for inserting array relation for remote table "JobStatus" */
export type JobStatus_Arr_Rel_Insert_Input = {
  data: Array<JobStatus_Insert_Input>;
  on_conflict?: Maybe<JobStatus_On_Conflict>;
};

/** Boolean expression to filter rows from the table "JobStatus". All fields are combined with a logical 'AND'. */
export type JobStatus_Bool_Exp = {
  _and?: Maybe<Array<Maybe<JobStatus_Bool_Exp>>>;
  _not?: Maybe<JobStatus_Bool_Exp>;
  _or?: Maybe<Array<Maybe<JobStatus_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "JobStatus" */
export enum JobStatus_Constraint {
  /** unique or primary key constraint */
  JobStatusPkey = 'JobStatus_pkey'
}

export enum JobStatus_Enum {
  /** Job completed successfully. */
  Completed = 'COMPLETED',
  /** Job is no longer valid. */
  Expired = 'EXPIRED',
  /** Job failed during execution. */
  Failed = 'FAILED',
  /** Job is currently in progress. */
  InProgress = 'IN_PROGRESS',
  /** Job has not yet started execution. */
  New = 'NEW'
}

/** expression to compare columns of type JobStatus_enum. All fields are combined with logical 'AND'. */
export type JobStatus_Enum_Comparison_Exp = {
  _eq?: Maybe<JobStatus_Enum>;
  _in?: Maybe<Array<JobStatus_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<JobStatus_Enum>;
  _nin?: Maybe<Array<JobStatus_Enum>>;
};

/** input type for inserting data into table "JobStatus" */
export type JobStatus_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type JobStatus_Max_Fields = {
  __typename?: 'JobStatus_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "JobStatus" */
export type JobStatus_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type JobStatus_Min_Fields = {
  __typename?: 'JobStatus_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "JobStatus" */
export type JobStatus_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "JobStatus" */
export type JobStatus_Mutation_Response = {
  __typename?: 'JobStatus_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<JobStatus>;
};

/** input type for inserting object relation for remote table "JobStatus" */
export type JobStatus_Obj_Rel_Insert_Input = {
  data: JobStatus_Insert_Input;
  on_conflict?: Maybe<JobStatus_On_Conflict>;
};

/** on conflict condition type for table "JobStatus" */
export type JobStatus_On_Conflict = {
  constraint: JobStatus_Constraint;
  update_columns: Array<JobStatus_Update_Column>;
  where?: Maybe<JobStatus_Bool_Exp>;
};

/** ordering options when selecting data from "JobStatus" */
export type JobStatus_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "JobStatus" */
export type JobStatus_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "JobStatus" */
export enum JobStatus_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "JobStatus" */
export type JobStatus_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "JobStatus" */
export enum JobStatus_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type JoinEventVonageSessionOutput = {
  __typename?: 'JoinEventVonageSessionOutput';
  accessToken?: Maybe<Scalars['String']>;
};

export type JoinRoomVonageSessionOutput = {
  __typename?: 'JoinRoomVonageSessionOutput';
  accessToken?: Maybe<Scalars['String']>;
  sessionId?: Maybe<Scalars['String']>;
};

/** columns and relationships of "MediaLiveChannel" */
export type MediaLiveChannel = {
  __typename?: 'MediaLiveChannel';
  /** An object relationship */
  channelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob>;
  channelStackCreateJobId?: Maybe<Scalars['uuid']>;
  cloudFormationStackArn?: Maybe<Scalars['String']>;
  cloudFrontDistributionId: Scalars['String'];
  cloudFrontDomain: Scalars['String'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  endpointUri: Scalars['String'];
  id: Scalars['uuid'];
  loopingMp4InputAttachmentName: Scalars['String'];
  mediaLiveChannelId: Scalars['String'];
  mediaPackageChannelId: Scalars['String'];
  mp4InputAttachmentName: Scalars['String'];
  mp4InputId: Scalars['String'];
  /** An object relationship */
  room?: Maybe<Room>;
  roomId?: Maybe<Scalars['uuid']>;
  rtmpInputId: Scalars['String'];
  rtmpInputUri: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  vonageInputAttachmentName: Scalars['String'];
};

/** aggregated selection of "MediaLiveChannel" */
export type MediaLiveChannel_Aggregate = {
  __typename?: 'MediaLiveChannel_aggregate';
  aggregate?: Maybe<MediaLiveChannel_Aggregate_Fields>;
  nodes: Array<MediaLiveChannel>;
};

/** aggregate fields of "MediaLiveChannel" */
export type MediaLiveChannel_Aggregate_Fields = {
  __typename?: 'MediaLiveChannel_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<MediaLiveChannel_Max_Fields>;
  min?: Maybe<MediaLiveChannel_Min_Fields>;
};


/** aggregate fields of "MediaLiveChannel" */
export type MediaLiveChannel_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<MediaLiveChannel_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "MediaLiveChannel" */
export type MediaLiveChannel_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<MediaLiveChannel_Max_Order_By>;
  min?: Maybe<MediaLiveChannel_Min_Order_By>;
};

/** input type for inserting array relation for remote table "MediaLiveChannel" */
export type MediaLiveChannel_Arr_Rel_Insert_Input = {
  data: Array<MediaLiveChannel_Insert_Input>;
  on_conflict?: Maybe<MediaLiveChannel_On_Conflict>;
};

/** Boolean expression to filter rows from the table "MediaLiveChannel". All fields are combined with a logical 'AND'. */
export type MediaLiveChannel_Bool_Exp = {
  _and?: Maybe<Array<Maybe<MediaLiveChannel_Bool_Exp>>>;
  _not?: Maybe<MediaLiveChannel_Bool_Exp>;
  _or?: Maybe<Array<Maybe<MediaLiveChannel_Bool_Exp>>>;
  channelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
  channelStackCreateJobId?: Maybe<Uuid_Comparison_Exp>;
  cloudFormationStackArn?: Maybe<String_Comparison_Exp>;
  cloudFrontDistributionId?: Maybe<String_Comparison_Exp>;
  cloudFrontDomain?: Maybe<String_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  endpointUri?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  loopingMp4InputAttachmentName?: Maybe<String_Comparison_Exp>;
  mediaLiveChannelId?: Maybe<String_Comparison_Exp>;
  mediaPackageChannelId?: Maybe<String_Comparison_Exp>;
  mp4InputAttachmentName?: Maybe<String_Comparison_Exp>;
  mp4InputId?: Maybe<String_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  rtmpInputId?: Maybe<String_Comparison_Exp>;
  rtmpInputUri?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  vonageInputAttachmentName?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "MediaLiveChannel" */
export enum MediaLiveChannel_Constraint {
  /** unique or primary key constraint */
  MediaLiveChannelPkey = 'MediaLiveChannel_pkey',
  /** unique or primary key constraint */
  MediaLiveChannelRoomIdKey = 'MediaLiveChannel_roomId_key'
}

/** input type for inserting data into table "MediaLiveChannel" */
export type MediaLiveChannel_Insert_Input = {
  channelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Obj_Rel_Insert_Input>;
  channelStackCreateJobId?: Maybe<Scalars['uuid']>;
  cloudFormationStackArn?: Maybe<Scalars['String']>;
  cloudFrontDistributionId?: Maybe<Scalars['String']>;
  cloudFrontDomain?: Maybe<Scalars['String']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  endpointUri?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  loopingMp4InputAttachmentName?: Maybe<Scalars['String']>;
  mediaLiveChannelId?: Maybe<Scalars['String']>;
  mediaPackageChannelId?: Maybe<Scalars['String']>;
  mp4InputAttachmentName?: Maybe<Scalars['String']>;
  mp4InputId?: Maybe<Scalars['String']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  rtmpInputId?: Maybe<Scalars['String']>;
  rtmpInputUri?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageInputAttachmentName?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type MediaLiveChannel_Max_Fields = {
  __typename?: 'MediaLiveChannel_max_fields';
  channelStackCreateJobId?: Maybe<Scalars['uuid']>;
  cloudFormationStackArn?: Maybe<Scalars['String']>;
  cloudFrontDistributionId?: Maybe<Scalars['String']>;
  cloudFrontDomain?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  endpointUri?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  loopingMp4InputAttachmentName?: Maybe<Scalars['String']>;
  mediaLiveChannelId?: Maybe<Scalars['String']>;
  mediaPackageChannelId?: Maybe<Scalars['String']>;
  mp4InputAttachmentName?: Maybe<Scalars['String']>;
  mp4InputId?: Maybe<Scalars['String']>;
  roomId?: Maybe<Scalars['uuid']>;
  rtmpInputId?: Maybe<Scalars['String']>;
  rtmpInputUri?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageInputAttachmentName?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "MediaLiveChannel" */
export type MediaLiveChannel_Max_Order_By = {
  channelStackCreateJobId?: Maybe<Order_By>;
  cloudFormationStackArn?: Maybe<Order_By>;
  cloudFrontDistributionId?: Maybe<Order_By>;
  cloudFrontDomain?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  endpointUri?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  loopingMp4InputAttachmentName?: Maybe<Order_By>;
  mediaLiveChannelId?: Maybe<Order_By>;
  mediaPackageChannelId?: Maybe<Order_By>;
  mp4InputAttachmentName?: Maybe<Order_By>;
  mp4InputId?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  rtmpInputId?: Maybe<Order_By>;
  rtmpInputUri?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageInputAttachmentName?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type MediaLiveChannel_Min_Fields = {
  __typename?: 'MediaLiveChannel_min_fields';
  channelStackCreateJobId?: Maybe<Scalars['uuid']>;
  cloudFormationStackArn?: Maybe<Scalars['String']>;
  cloudFrontDistributionId?: Maybe<Scalars['String']>;
  cloudFrontDomain?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  endpointUri?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  loopingMp4InputAttachmentName?: Maybe<Scalars['String']>;
  mediaLiveChannelId?: Maybe<Scalars['String']>;
  mediaPackageChannelId?: Maybe<Scalars['String']>;
  mp4InputAttachmentName?: Maybe<Scalars['String']>;
  mp4InputId?: Maybe<Scalars['String']>;
  roomId?: Maybe<Scalars['uuid']>;
  rtmpInputId?: Maybe<Scalars['String']>;
  rtmpInputUri?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageInputAttachmentName?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "MediaLiveChannel" */
export type MediaLiveChannel_Min_Order_By = {
  channelStackCreateJobId?: Maybe<Order_By>;
  cloudFormationStackArn?: Maybe<Order_By>;
  cloudFrontDistributionId?: Maybe<Order_By>;
  cloudFrontDomain?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  endpointUri?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  loopingMp4InputAttachmentName?: Maybe<Order_By>;
  mediaLiveChannelId?: Maybe<Order_By>;
  mediaPackageChannelId?: Maybe<Order_By>;
  mp4InputAttachmentName?: Maybe<Order_By>;
  mp4InputId?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  rtmpInputId?: Maybe<Order_By>;
  rtmpInputUri?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageInputAttachmentName?: Maybe<Order_By>;
};

/** response of any mutation on the table "MediaLiveChannel" */
export type MediaLiveChannel_Mutation_Response = {
  __typename?: 'MediaLiveChannel_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<MediaLiveChannel>;
};

/** input type for inserting object relation for remote table "MediaLiveChannel" */
export type MediaLiveChannel_Obj_Rel_Insert_Input = {
  data: MediaLiveChannel_Insert_Input;
  on_conflict?: Maybe<MediaLiveChannel_On_Conflict>;
};

/** on conflict condition type for table "MediaLiveChannel" */
export type MediaLiveChannel_On_Conflict = {
  constraint: MediaLiveChannel_Constraint;
  update_columns: Array<MediaLiveChannel_Update_Column>;
  where?: Maybe<MediaLiveChannel_Bool_Exp>;
};

/** ordering options when selecting data from "MediaLiveChannel" */
export type MediaLiveChannel_Order_By = {
  channelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Order_By>;
  channelStackCreateJobId?: Maybe<Order_By>;
  cloudFormationStackArn?: Maybe<Order_By>;
  cloudFrontDistributionId?: Maybe<Order_By>;
  cloudFrontDomain?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  endpointUri?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  loopingMp4InputAttachmentName?: Maybe<Order_By>;
  mediaLiveChannelId?: Maybe<Order_By>;
  mediaPackageChannelId?: Maybe<Order_By>;
  mp4InputAttachmentName?: Maybe<Order_By>;
  mp4InputId?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  rtmpInputId?: Maybe<Order_By>;
  rtmpInputUri?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageInputAttachmentName?: Maybe<Order_By>;
};

/** primary key columns input for table: "MediaLiveChannel" */
export type MediaLiveChannel_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "MediaLiveChannel" */
export enum MediaLiveChannel_Select_Column {
  /** column name */
  ChannelStackCreateJobId = 'channelStackCreateJobId',
  /** column name */
  CloudFormationStackArn = 'cloudFormationStackArn',
  /** column name */
  CloudFrontDistributionId = 'cloudFrontDistributionId',
  /** column name */
  CloudFrontDomain = 'cloudFrontDomain',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EndpointUri = 'endpointUri',
  /** column name */
  Id = 'id',
  /** column name */
  LoopingMp4InputAttachmentName = 'loopingMp4InputAttachmentName',
  /** column name */
  MediaLiveChannelId = 'mediaLiveChannelId',
  /** column name */
  MediaPackageChannelId = 'mediaPackageChannelId',
  /** column name */
  Mp4InputAttachmentName = 'mp4InputAttachmentName',
  /** column name */
  Mp4InputId = 'mp4InputId',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  RtmpInputId = 'rtmpInputId',
  /** column name */
  RtmpInputUri = 'rtmpInputUri',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VonageInputAttachmentName = 'vonageInputAttachmentName'
}

/** input type for updating data in table "MediaLiveChannel" */
export type MediaLiveChannel_Set_Input = {
  channelStackCreateJobId?: Maybe<Scalars['uuid']>;
  cloudFormationStackArn?: Maybe<Scalars['String']>;
  cloudFrontDistributionId?: Maybe<Scalars['String']>;
  cloudFrontDomain?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  endpointUri?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  loopingMp4InputAttachmentName?: Maybe<Scalars['String']>;
  mediaLiveChannelId?: Maybe<Scalars['String']>;
  mediaPackageChannelId?: Maybe<Scalars['String']>;
  mp4InputAttachmentName?: Maybe<Scalars['String']>;
  mp4InputId?: Maybe<Scalars['String']>;
  roomId?: Maybe<Scalars['uuid']>;
  rtmpInputId?: Maybe<Scalars['String']>;
  rtmpInputUri?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageInputAttachmentName?: Maybe<Scalars['String']>;
};

/** update columns of table "MediaLiveChannel" */
export enum MediaLiveChannel_Update_Column {
  /** column name */
  ChannelStackCreateJobId = 'channelStackCreateJobId',
  /** column name */
  CloudFormationStackArn = 'cloudFormationStackArn',
  /** column name */
  CloudFrontDistributionId = 'cloudFrontDistributionId',
  /** column name */
  CloudFrontDomain = 'cloudFrontDomain',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EndpointUri = 'endpointUri',
  /** column name */
  Id = 'id',
  /** column name */
  LoopingMp4InputAttachmentName = 'loopingMp4InputAttachmentName',
  /** column name */
  MediaLiveChannelId = 'mediaLiveChannelId',
  /** column name */
  MediaPackageChannelId = 'mediaPackageChannelId',
  /** column name */
  Mp4InputAttachmentName = 'mp4InputAttachmentName',
  /** column name */
  Mp4InputId = 'mp4InputId',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  RtmpInputId = 'rtmpInputId',
  /** column name */
  RtmpInputUri = 'rtmpInputUri',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VonageInputAttachmentName = 'vonageInputAttachmentName'
}

/** columns and relationships of "OnlineStatus" */
export type OnlineStatus = {
  __typename?: 'OnlineStatus';
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  isIncognito: Scalars['Boolean'];
  lastSeen: Scalars['timestamptz'];
  updatedAt: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  userId: Scalars['String'];
};

/** aggregated selection of "OnlineStatus" */
export type OnlineStatus_Aggregate = {
  __typename?: 'OnlineStatus_aggregate';
  aggregate?: Maybe<OnlineStatus_Aggregate_Fields>;
  nodes: Array<OnlineStatus>;
};

/** aggregate fields of "OnlineStatus" */
export type OnlineStatus_Aggregate_Fields = {
  __typename?: 'OnlineStatus_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<OnlineStatus_Max_Fields>;
  min?: Maybe<OnlineStatus_Min_Fields>;
};


/** aggregate fields of "OnlineStatus" */
export type OnlineStatus_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OnlineStatus_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "OnlineStatus" */
export type OnlineStatus_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<OnlineStatus_Max_Order_By>;
  min?: Maybe<OnlineStatus_Min_Order_By>;
};

/** input type for inserting array relation for remote table "OnlineStatus" */
export type OnlineStatus_Arr_Rel_Insert_Input = {
  data: Array<OnlineStatus_Insert_Input>;
  on_conflict?: Maybe<OnlineStatus_On_Conflict>;
};

/** Boolean expression to filter rows from the table "OnlineStatus". All fields are combined with a logical 'AND'. */
export type OnlineStatus_Bool_Exp = {
  _and?: Maybe<Array<Maybe<OnlineStatus_Bool_Exp>>>;
  _not?: Maybe<OnlineStatus_Bool_Exp>;
  _or?: Maybe<Array<Maybe<OnlineStatus_Bool_Exp>>>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  isIncognito?: Maybe<Boolean_Comparison_Exp>;
  lastSeen?: Maybe<Timestamptz_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  userId?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "OnlineStatus" */
export enum OnlineStatus_Constraint {
  /** unique or primary key constraint */
  OnlineStatusPkey = 'OnlineStatus_pkey',
  /** unique or primary key constraint */
  OnlineStatusUserIdKey = 'OnlineStatus_userId_key'
}

/** input type for inserting data into table "OnlineStatus" */
export type OnlineStatus_Insert_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  isIncognito?: Maybe<Scalars['Boolean']>;
  lastSeen?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  userId?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type OnlineStatus_Max_Fields = {
  __typename?: 'OnlineStatus_max_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  lastSeen?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "OnlineStatus" */
export type OnlineStatus_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastSeen?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type OnlineStatus_Min_Fields = {
  __typename?: 'OnlineStatus_min_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  lastSeen?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "OnlineStatus" */
export type OnlineStatus_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastSeen?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** response of any mutation on the table "OnlineStatus" */
export type OnlineStatus_Mutation_Response = {
  __typename?: 'OnlineStatus_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<OnlineStatus>;
};

/** input type for inserting object relation for remote table "OnlineStatus" */
export type OnlineStatus_Obj_Rel_Insert_Input = {
  data: OnlineStatus_Insert_Input;
  on_conflict?: Maybe<OnlineStatus_On_Conflict>;
};

/** on conflict condition type for table "OnlineStatus" */
export type OnlineStatus_On_Conflict = {
  constraint: OnlineStatus_Constraint;
  update_columns: Array<OnlineStatus_Update_Column>;
  where?: Maybe<OnlineStatus_Bool_Exp>;
};

/** ordering options when selecting data from "OnlineStatus" */
export type OnlineStatus_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  isIncognito?: Maybe<Order_By>;
  lastSeen?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  userId?: Maybe<Order_By>;
};

/** primary key columns input for table: "OnlineStatus" */
export type OnlineStatus_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "OnlineStatus" */
export enum OnlineStatus_Select_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  IsIncognito = 'isIncognito',
  /** column name */
  LastSeen = 'lastSeen',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "OnlineStatus" */
export type OnlineStatus_Set_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  isIncognito?: Maybe<Scalars['Boolean']>;
  lastSeen?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** update columns of table "OnlineStatus" */
export enum OnlineStatus_Update_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  IsIncognito = 'isIncognito',
  /** column name */
  LastSeen = 'lastSeen',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UserId = 'userId'
}

/** columns and relationships of "OriginatingData" */
export type OriginatingData = {
  __typename?: 'OriginatingData';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An array relationship */
  contentGroups: Array<ContentGroup>;
  /** An aggregated array relationship */
  contentGroups_aggregate: ContentGroup_Aggregate;
  /** An array relationship */
  contentItems: Array<ContentItem>;
  /** An aggregated array relationship */
  contentItems_aggregate: ContentItem_Aggregate;
  /** An array relationship */
  contentPeople: Array<ContentPerson>;
  /** An aggregated array relationship */
  contentPeople_aggregate: ContentPerson_Aggregate;
  createdAt: Scalars['timestamptz'];
  data?: Maybe<Scalars['jsonb']>;
  /** An array relationship */
  events: Array<Event>;
  /** An aggregated array relationship */
  events_aggregate: Event_Aggregate;
  id: Scalars['uuid'];
  /** An array relationship */
  requiredContentItems: Array<RequiredContentItem>;
  /** An aggregated array relationship */
  requiredContentItems_aggregate: RequiredContentItem_Aggregate;
  /** An array relationship */
  rooms: Array<Room>;
  /** An aggregated array relationship */
  rooms_aggregate: Room_Aggregate;
  sourceId: Scalars['String'];
  /** An array relationship */
  tags: Array<Tag>;
  /** An aggregated array relationship */
  tags_aggregate: Tag_Aggregate;
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataContentGroupsArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataContentGroups_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataContentItemsArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataContentItems_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataContentPeopleArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataContentPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataEventsArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataEvents_AggregateArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataRequiredContentItemsArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataRequiredContentItems_AggregateArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataRoomsArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataTagsArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};


/** columns and relationships of "OriginatingData" */
export type OriginatingDataTags_AggregateArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};

/** aggregated selection of "OriginatingData" */
export type OriginatingData_Aggregate = {
  __typename?: 'OriginatingData_aggregate';
  aggregate?: Maybe<OriginatingData_Aggregate_Fields>;
  nodes: Array<OriginatingData>;
};

/** aggregate fields of "OriginatingData" */
export type OriginatingData_Aggregate_Fields = {
  __typename?: 'OriginatingData_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<OriginatingData_Max_Fields>;
  min?: Maybe<OriginatingData_Min_Fields>;
};


/** aggregate fields of "OriginatingData" */
export type OriginatingData_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<OriginatingData_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "OriginatingData" */
export type OriginatingData_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<OriginatingData_Max_Order_By>;
  min?: Maybe<OriginatingData_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type OriginatingData_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "OriginatingData" */
export type OriginatingData_Arr_Rel_Insert_Input = {
  data: Array<OriginatingData_Insert_Input>;
  on_conflict?: Maybe<OriginatingData_On_Conflict>;
};

/** Boolean expression to filter rows from the table "OriginatingData". All fields are combined with a logical 'AND'. */
export type OriginatingData_Bool_Exp = {
  _and?: Maybe<Array<Maybe<OriginatingData_Bool_Exp>>>;
  _not?: Maybe<OriginatingData_Bool_Exp>;
  _or?: Maybe<Array<Maybe<OriginatingData_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroups?: Maybe<ContentGroup_Bool_Exp>;
  contentItems?: Maybe<ContentItem_Bool_Exp>;
  contentPeople?: Maybe<ContentPerson_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  events?: Maybe<Event_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  requiredContentItems?: Maybe<RequiredContentItem_Bool_Exp>;
  rooms?: Maybe<Room_Bool_Exp>;
  sourceId?: Maybe<String_Comparison_Exp>;
  tags?: Maybe<Tag_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "OriginatingData" */
export enum OriginatingData_Constraint {
  /** unique or primary key constraint */
  OriginatingDataPkey = 'OriginatingData_pkey',
  /** unique or primary key constraint */
  OriginatingDataSourceIdConferenceIdKey = 'OriginatingData_sourceId_conferenceId_key'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type OriginatingData_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type OriginatingData_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type OriginatingData_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "OriginatingData" */
export type OriginatingData_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroups?: Maybe<ContentGroup_Arr_Rel_Insert_Input>;
  contentItems?: Maybe<ContentItem_Arr_Rel_Insert_Input>;
  contentPeople?: Maybe<ContentPerson_Arr_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  events?: Maybe<Event_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  requiredContentItems?: Maybe<RequiredContentItem_Arr_Rel_Insert_Input>;
  rooms?: Maybe<Room_Arr_Rel_Insert_Input>;
  sourceId?: Maybe<Scalars['String']>;
  tags?: Maybe<Tag_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type OriginatingData_Max_Fields = {
  __typename?: 'OriginatingData_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  sourceId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "OriginatingData" */
export type OriginatingData_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sourceId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type OriginatingData_Min_Fields = {
  __typename?: 'OriginatingData_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  sourceId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "OriginatingData" */
export type OriginatingData_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  sourceId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "OriginatingData" */
export type OriginatingData_Mutation_Response = {
  __typename?: 'OriginatingData_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<OriginatingData>;
};

/** input type for inserting object relation for remote table "OriginatingData" */
export type OriginatingData_Obj_Rel_Insert_Input = {
  data: OriginatingData_Insert_Input;
  on_conflict?: Maybe<OriginatingData_On_Conflict>;
};

/** on conflict condition type for table "OriginatingData" */
export type OriginatingData_On_Conflict = {
  constraint: OriginatingData_Constraint;
  update_columns: Array<OriginatingData_Update_Column>;
  where?: Maybe<OriginatingData_Bool_Exp>;
};

/** ordering options when selecting data from "OriginatingData" */
export type OriginatingData_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroups_aggregate?: Maybe<ContentGroup_Aggregate_Order_By>;
  contentItems_aggregate?: Maybe<ContentItem_Aggregate_Order_By>;
  contentPeople_aggregate?: Maybe<ContentPerson_Aggregate_Order_By>;
  createdAt?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  events_aggregate?: Maybe<Event_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  requiredContentItems_aggregate?: Maybe<RequiredContentItem_Aggregate_Order_By>;
  rooms_aggregate?: Maybe<Room_Aggregate_Order_By>;
  sourceId?: Maybe<Order_By>;
  tags_aggregate?: Maybe<Tag_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "OriginatingData" */
export type OriginatingData_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type OriginatingData_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "OriginatingData" */
export enum OriginatingData_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  SourceId = 'sourceId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "OriginatingData" */
export type OriginatingData_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  sourceId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "OriginatingData" */
export enum OriginatingData_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  SourceId = 'sourceId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "Permission" */
export type Permission = {
  __typename?: 'Permission';
  description: Scalars['String'];
  name: Scalars['String'];
  /** An array relationship */
  rolePermissions: Array<RolePermission>;
  /** An aggregated array relationship */
  rolePermissions_aggregate: RolePermission_Aggregate;
};


/** columns and relationships of "Permission" */
export type PermissionRolePermissionsArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};


/** columns and relationships of "Permission" */
export type PermissionRolePermissions_AggregateArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};

/** aggregated selection of "Permission" */
export type Permission_Aggregate = {
  __typename?: 'Permission_aggregate';
  aggregate?: Maybe<Permission_Aggregate_Fields>;
  nodes: Array<Permission>;
};

/** aggregate fields of "Permission" */
export type Permission_Aggregate_Fields = {
  __typename?: 'Permission_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Permission_Max_Fields>;
  min?: Maybe<Permission_Min_Fields>;
};


/** aggregate fields of "Permission" */
export type Permission_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Permission_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Permission" */
export type Permission_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Permission_Max_Order_By>;
  min?: Maybe<Permission_Min_Order_By>;
};

/** input type for inserting array relation for remote table "Permission" */
export type Permission_Arr_Rel_Insert_Input = {
  data: Array<Permission_Insert_Input>;
  on_conflict?: Maybe<Permission_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Permission". All fields are combined with a logical 'AND'. */
export type Permission_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Permission_Bool_Exp>>>;
  _not?: Maybe<Permission_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Permission_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  rolePermissions?: Maybe<RolePermission_Bool_Exp>;
};

/** unique or primary key constraints on table "Permission" */
export enum Permission_Constraint {
  /** unique or primary key constraint */
  PermissionPkey = 'Permission_pkey'
}

export enum Permission_Enum {
  /** Manage (create/update/delete) conference attendees. */
  ConferenceManageAttendees = 'CONFERENCE_MANAGE_ATTENDEES',
  /** Manage Content tables. */
  ConferenceManageContent = 'CONFERENCE_MANAGE_CONTENT',
  /** Manage groups of a conference. */
  ConferenceManageGroups = 'CONFERENCE_MANAGE_GROUPS',
  /** Manage (update only) conference name, short name and slug. */
  ConferenceManageName = 'CONFERENCE_MANAGE_NAME',
  /** Manage roles of a conference. */
  ConferenceManageRoles = 'CONFERENCE_MANAGE_ROLES',
  /** Manage Schedule tables. */
  ConferenceManageSchedule = 'CONFERENCE_MANAGE_SCHEDULE',
  /** Manage shuffle periods. */
  ConferenceManageShuffle = 'CONFERENCE_MANAGE_SHUFFLE',
  /** Moderate (update only) conference attendees. */
  ConferenceModerateAttendees = 'CONFERENCE_MODERATE_ATTENDEES',
  /** View the conference. */
  ConferenceView = 'CONFERENCE_VIEW',
  /** View conference attendees. */
  ConferenceViewAttendees = 'CONFERENCE_VIEW_ATTENDEES'
}

/** expression to compare columns of type Permission_enum. All fields are combined with logical 'AND'. */
export type Permission_Enum_Comparison_Exp = {
  _eq?: Maybe<Permission_Enum>;
  _in?: Maybe<Array<Permission_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Permission_Enum>;
  _nin?: Maybe<Array<Permission_Enum>>;
};

/** input type for inserting data into table "Permission" */
export type Permission_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  rolePermissions?: Maybe<RolePermission_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type Permission_Max_Fields = {
  __typename?: 'Permission_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "Permission" */
export type Permission_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Permission_Min_Fields = {
  __typename?: 'Permission_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "Permission" */
export type Permission_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "Permission" */
export type Permission_Mutation_Response = {
  __typename?: 'Permission_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Permission>;
};

/** input type for inserting object relation for remote table "Permission" */
export type Permission_Obj_Rel_Insert_Input = {
  data: Permission_Insert_Input;
  on_conflict?: Maybe<Permission_On_Conflict>;
};

/** on conflict condition type for table "Permission" */
export type Permission_On_Conflict = {
  constraint: Permission_Constraint;
  update_columns: Array<Permission_Update_Column>;
  where?: Maybe<Permission_Bool_Exp>;
};

/** ordering options when selecting data from "Permission" */
export type Permission_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  rolePermissions_aggregate?: Maybe<RolePermission_Aggregate_Order_By>;
};

/** primary key columns input for table: "Permission" */
export type Permission_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "Permission" */
export enum Permission_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "Permission" */
export type Permission_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "Permission" */
export enum Permission_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

export type PresenceFlushOutput = {
  __typename?: 'PresenceFlushOutput';
  ok?: Maybe<Scalars['String']>;
};

export type PresenceSummaryOutput = {
  __typename?: 'PresenceSummaryOutput';
  pages?: Maybe<Scalars['jsonb']>;
  total_unique_tabs: Scalars['Int'];
  total_unique_user_ids: Scalars['Int'];
};

export type ProfilePhotoUrlResponse = {
  __typename?: 'ProfilePhotoURLResponse';
  url: Scalars['String'];
};

export type ProtectedEchoOutput = {
  __typename?: 'ProtectedEchoOutput';
  message: Scalars['String'];
};

/** columns and relationships of "PushNotificationSubscription" */
export type PushNotificationSubscription = {
  __typename?: 'PushNotificationSubscription';
  auth: Scalars['String'];
  created_at: Scalars['timestamptz'];
  endpoint: Scalars['String'];
  p256dh: Scalars['String'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  user: User;
  userId: Scalars['String'];
};

/** aggregated selection of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate = {
  __typename?: 'PushNotificationSubscription_aggregate';
  aggregate?: Maybe<PushNotificationSubscription_Aggregate_Fields>;
  nodes: Array<PushNotificationSubscription>;
};

/** aggregate fields of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_Fields = {
  __typename?: 'PushNotificationSubscription_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<PushNotificationSubscription_Max_Fields>;
  min?: Maybe<PushNotificationSubscription_Min_Fields>;
};


/** aggregate fields of "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<PushNotificationSubscription_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<PushNotificationSubscription_Max_Order_By>;
  min?: Maybe<PushNotificationSubscription_Min_Order_By>;
};

/** input type for inserting array relation for remote table "PushNotificationSubscription" */
export type PushNotificationSubscription_Arr_Rel_Insert_Input = {
  data: Array<PushNotificationSubscription_Insert_Input>;
  on_conflict?: Maybe<PushNotificationSubscription_On_Conflict>;
};

/** Boolean expression to filter rows from the table "PushNotificationSubscription". All fields are combined with a logical 'AND'. */
export type PushNotificationSubscription_Bool_Exp = {
  _and?: Maybe<Array<Maybe<PushNotificationSubscription_Bool_Exp>>>;
  _not?: Maybe<PushNotificationSubscription_Bool_Exp>;
  _or?: Maybe<Array<Maybe<PushNotificationSubscription_Bool_Exp>>>;
  auth?: Maybe<String_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  endpoint?: Maybe<String_Comparison_Exp>;
  p256dh?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  user?: Maybe<User_Bool_Exp>;
  userId?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Constraint {
  /** unique or primary key constraint */
  PushNotificationSubscriptionPkey = 'PushNotificationSubscription_pkey'
}

/** input type for inserting data into table "PushNotificationSubscription" */
export type PushNotificationSubscription_Insert_Input = {
  auth?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endpoint?: Maybe<Scalars['String']>;
  p256dh?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  user?: Maybe<User_Obj_Rel_Insert_Input>;
  userId?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type PushNotificationSubscription_Max_Fields = {
  __typename?: 'PushNotificationSubscription_max_fields';
  auth?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endpoint?: Maybe<Scalars['String']>;
  p256dh?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Max_Order_By = {
  auth?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  endpoint?: Maybe<Order_By>;
  p256dh?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type PushNotificationSubscription_Min_Fields = {
  __typename?: 'PushNotificationSubscription_min_fields';
  auth?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endpoint?: Maybe<Scalars['String']>;
  p256dh?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "PushNotificationSubscription" */
export type PushNotificationSubscription_Min_Order_By = {
  auth?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  endpoint?: Maybe<Order_By>;
  p256dh?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  userId?: Maybe<Order_By>;
};

/** response of any mutation on the table "PushNotificationSubscription" */
export type PushNotificationSubscription_Mutation_Response = {
  __typename?: 'PushNotificationSubscription_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<PushNotificationSubscription>;
};

/** input type for inserting object relation for remote table "PushNotificationSubscription" */
export type PushNotificationSubscription_Obj_Rel_Insert_Input = {
  data: PushNotificationSubscription_Insert_Input;
  on_conflict?: Maybe<PushNotificationSubscription_On_Conflict>;
};

/** on conflict condition type for table "PushNotificationSubscription" */
export type PushNotificationSubscription_On_Conflict = {
  constraint: PushNotificationSubscription_Constraint;
  update_columns: Array<PushNotificationSubscription_Update_Column>;
  where?: Maybe<PushNotificationSubscription_Bool_Exp>;
};

/** ordering options when selecting data from "PushNotificationSubscription" */
export type PushNotificationSubscription_Order_By = {
  auth?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  endpoint?: Maybe<Order_By>;
  p256dh?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  user?: Maybe<User_Order_By>;
  userId?: Maybe<Order_By>;
};

/** primary key columns input for table: "PushNotificationSubscription" */
export type PushNotificationSubscription_Pk_Columns_Input = {
  endpoint: Scalars['String'];
};

/** select columns of table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Select_Column {
  /** column name */
  Auth = 'auth',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Endpoint = 'endpoint',
  /** column name */
  P256dh = 'p256dh',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'userId'
}

/** input type for updating data in table "PushNotificationSubscription" */
export type PushNotificationSubscription_Set_Input = {
  auth?: Maybe<Scalars['String']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endpoint?: Maybe<Scalars['String']>;
  p256dh?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  userId?: Maybe<Scalars['String']>;
};

/** update columns of table "PushNotificationSubscription" */
export enum PushNotificationSubscription_Update_Column {
  /** column name */
  Auth = 'auth',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Endpoint = 'endpoint',
  /** column name */
  P256dh = 'p256dh',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UserId = 'userId'
}

export type RefreshYouTubeDataOutput = {
  __typename?: 'RefreshYouTubeDataOutput';
  message?: Maybe<Scalars['String']>;
  success: Scalars['Boolean'];
};

/** columns and relationships of "RequiredContentItem" */
export type RequiredContentItem = {
  __typename?: 'RequiredContentItem';
  accessToken?: Maybe<Scalars['String']>;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentGroup: ContentGroup;
  contentGroupId: Scalars['uuid'];
  /** A computed field, executes function "requireditem_content_group_title" */
  contentGroupTitle?: Maybe<Scalars['String']>;
  /** An object relationship */
  contentItem?: Maybe<ContentItem>;
  /** An object relationship */
  contentType: ContentType;
  contentTypeName: ContentType_Enum;
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  isHidden: Scalars['Boolean'];
  name: Scalars['String'];
  /** An object relationship */
  originatingData?: Maybe<OriginatingData>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  updatedAt: Scalars['timestamptz'];
  /** An array relationship */
  uploaders: Array<Uploader>;
  /** An aggregated array relationship */
  uploaders_aggregate: Uploader_Aggregate;
  uploadsRemaining?: Maybe<Scalars['Int']>;
};


/** columns and relationships of "RequiredContentItem" */
export type RequiredContentItemUploadersArgs = {
  distinct_on?: Maybe<Array<Uploader_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Uploader_Order_By>>;
  where?: Maybe<Uploader_Bool_Exp>;
};


/** columns and relationships of "RequiredContentItem" */
export type RequiredContentItemUploaders_AggregateArgs = {
  distinct_on?: Maybe<Array<Uploader_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Uploader_Order_By>>;
  where?: Maybe<Uploader_Bool_Exp>;
};

/** aggregated selection of "RequiredContentItem" */
export type RequiredContentItem_Aggregate = {
  __typename?: 'RequiredContentItem_aggregate';
  aggregate?: Maybe<RequiredContentItem_Aggregate_Fields>;
  nodes: Array<RequiredContentItem>;
};

/** aggregate fields of "RequiredContentItem" */
export type RequiredContentItem_Aggregate_Fields = {
  __typename?: 'RequiredContentItem_aggregate_fields';
  avg?: Maybe<RequiredContentItem_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<RequiredContentItem_Max_Fields>;
  min?: Maybe<RequiredContentItem_Min_Fields>;
  stddev?: Maybe<RequiredContentItem_Stddev_Fields>;
  stddev_pop?: Maybe<RequiredContentItem_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<RequiredContentItem_Stddev_Samp_Fields>;
  sum?: Maybe<RequiredContentItem_Sum_Fields>;
  var_pop?: Maybe<RequiredContentItem_Var_Pop_Fields>;
  var_samp?: Maybe<RequiredContentItem_Var_Samp_Fields>;
  variance?: Maybe<RequiredContentItem_Variance_Fields>;
};


/** aggregate fields of "RequiredContentItem" */
export type RequiredContentItem_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RequiredContentItem_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "RequiredContentItem" */
export type RequiredContentItem_Aggregate_Order_By = {
  avg?: Maybe<RequiredContentItem_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<RequiredContentItem_Max_Order_By>;
  min?: Maybe<RequiredContentItem_Min_Order_By>;
  stddev?: Maybe<RequiredContentItem_Stddev_Order_By>;
  stddev_pop?: Maybe<RequiredContentItem_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<RequiredContentItem_Stddev_Samp_Order_By>;
  sum?: Maybe<RequiredContentItem_Sum_Order_By>;
  var_pop?: Maybe<RequiredContentItem_Var_Pop_Order_By>;
  var_samp?: Maybe<RequiredContentItem_Var_Samp_Order_By>;
  variance?: Maybe<RequiredContentItem_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "RequiredContentItem" */
export type RequiredContentItem_Arr_Rel_Insert_Input = {
  data: Array<RequiredContentItem_Insert_Input>;
  on_conflict?: Maybe<RequiredContentItem_On_Conflict>;
};

/** aggregate avg on columns */
export type RequiredContentItem_Avg_Fields = {
  __typename?: 'RequiredContentItem_avg_fields';
  uploadsRemaining?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Avg_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "RequiredContentItem". All fields are combined with a logical 'AND'. */
export type RequiredContentItem_Bool_Exp = {
  _and?: Maybe<Array<Maybe<RequiredContentItem_Bool_Exp>>>;
  _not?: Maybe<RequiredContentItem_Bool_Exp>;
  _or?: Maybe<Array<Maybe<RequiredContentItem_Bool_Exp>>>;
  accessToken?: Maybe<String_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroup?: Maybe<ContentGroup_Bool_Exp>;
  contentGroupId?: Maybe<Uuid_Comparison_Exp>;
  contentItem?: Maybe<ContentItem_Bool_Exp>;
  contentType?: Maybe<ContentType_Bool_Exp>;
  contentTypeName?: Maybe<ContentType_Enum_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  isHidden?: Maybe<Boolean_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  originatingData?: Maybe<OriginatingData_Bool_Exp>;
  originatingDataId?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  uploaders?: Maybe<Uploader_Bool_Exp>;
  uploadsRemaining?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "RequiredContentItem" */
export enum RequiredContentItem_Constraint {
  /** unique or primary key constraint */
  RequiredContentItemPkey = 'RequiredContentItem_pkey'
}

/** input type for incrementing integer column in table "RequiredContentItem" */
export type RequiredContentItem_Inc_Input = {
  uploadsRemaining?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "RequiredContentItem" */
export type RequiredContentItem_Insert_Input = {
  accessToken?: Maybe<Scalars['String']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroup?: Maybe<ContentGroup_Obj_Rel_Insert_Input>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  contentItem?: Maybe<ContentItem_Obj_Rel_Insert_Input>;
  contentType?: Maybe<ContentType_Obj_Rel_Insert_Input>;
  contentTypeName?: Maybe<ContentType_Enum>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  isHidden?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  originatingData?: Maybe<OriginatingData_Obj_Rel_Insert_Input>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploaders?: Maybe<Uploader_Arr_Rel_Insert_Input>;
  uploadsRemaining?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type RequiredContentItem_Max_Fields = {
  __typename?: 'RequiredContentItem_max_fields';
  accessToken?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploadsRemaining?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Max_Order_By = {
  accessToken?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroupId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  uploadsRemaining?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RequiredContentItem_Min_Fields = {
  __typename?: 'RequiredContentItem_min_fields';
  accessToken?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploadsRemaining?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Min_Order_By = {
  accessToken?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroupId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  uploadsRemaining?: Maybe<Order_By>;
};

/** response of any mutation on the table "RequiredContentItem" */
export type RequiredContentItem_Mutation_Response = {
  __typename?: 'RequiredContentItem_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<RequiredContentItem>;
};

/** input type for inserting object relation for remote table "RequiredContentItem" */
export type RequiredContentItem_Obj_Rel_Insert_Input = {
  data: RequiredContentItem_Insert_Input;
  on_conflict?: Maybe<RequiredContentItem_On_Conflict>;
};

/** on conflict condition type for table "RequiredContentItem" */
export type RequiredContentItem_On_Conflict = {
  constraint: RequiredContentItem_Constraint;
  update_columns: Array<RequiredContentItem_Update_Column>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};

/** ordering options when selecting data from "RequiredContentItem" */
export type RequiredContentItem_Order_By = {
  accessToken?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroup?: Maybe<ContentGroup_Order_By>;
  contentGroupId?: Maybe<Order_By>;
  contentItem?: Maybe<ContentItem_Order_By>;
  contentType?: Maybe<ContentType_Order_By>;
  contentTypeName?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  isHidden?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingData?: Maybe<OriginatingData_Order_By>;
  originatingDataId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  uploaders_aggregate?: Maybe<Uploader_Aggregate_Order_By>;
  uploadsRemaining?: Maybe<Order_By>;
};

/** primary key columns input for table: "RequiredContentItem" */
export type RequiredContentItem_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "RequiredContentItem" */
export enum RequiredContentItem_Select_Column {
  /** column name */
  AccessToken = 'accessToken',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  ContentTypeName = 'contentTypeName',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UploadsRemaining = 'uploadsRemaining'
}

/** input type for updating data in table "RequiredContentItem" */
export type RequiredContentItem_Set_Input = {
  accessToken?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupId?: Maybe<Scalars['uuid']>;
  contentTypeName?: Maybe<ContentType_Enum>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  isHidden?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploadsRemaining?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type RequiredContentItem_Stddev_Fields = {
  __typename?: 'RequiredContentItem_stddev_fields';
  uploadsRemaining?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Stddev_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type RequiredContentItem_Stddev_Pop_Fields = {
  __typename?: 'RequiredContentItem_stddev_pop_fields';
  uploadsRemaining?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Stddev_Pop_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type RequiredContentItem_Stddev_Samp_Fields = {
  __typename?: 'RequiredContentItem_stddev_samp_fields';
  uploadsRemaining?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Stddev_Samp_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type RequiredContentItem_Sum_Fields = {
  __typename?: 'RequiredContentItem_sum_fields';
  uploadsRemaining?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Sum_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** update columns of table "RequiredContentItem" */
export enum RequiredContentItem_Update_Column {
  /** column name */
  AccessToken = 'accessToken',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentGroupId = 'contentGroupId',
  /** column name */
  ContentTypeName = 'contentTypeName',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  IsHidden = 'isHidden',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UploadsRemaining = 'uploadsRemaining'
}

/** aggregate var_pop on columns */
export type RequiredContentItem_Var_Pop_Fields = {
  __typename?: 'RequiredContentItem_var_pop_fields';
  uploadsRemaining?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Var_Pop_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type RequiredContentItem_Var_Samp_Fields = {
  __typename?: 'RequiredContentItem_var_samp_fields';
  uploadsRemaining?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Var_Samp_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type RequiredContentItem_Variance_Fields = {
  __typename?: 'RequiredContentItem_variance_fields';
  uploadsRemaining?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "RequiredContentItem" */
export type RequiredContentItem_Variance_Order_By = {
  uploadsRemaining?: Maybe<Order_By>;
};

/** columns and relationships of "Role" */
export type Role = {
  __typename?: 'Role';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  groupRoles: Array<GroupRole>;
  /** An aggregated array relationship */
  groupRoles_aggregate: GroupRole_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An array relationship */
  rolePermissions: Array<RolePermission>;
  /** An aggregated array relationship */
  rolePermissions_aggregate: RolePermission_Aggregate;
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "Role" */
export type RoleGroupRolesArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};


/** columns and relationships of "Role" */
export type RoleGroupRoles_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};


/** columns and relationships of "Role" */
export type RoleRolePermissionsArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};


/** columns and relationships of "Role" */
export type RoleRolePermissions_AggregateArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};

/** columns and relationships of "RolePermission" */
export type RolePermission = {
  __typename?: 'RolePermission';
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  permission: Permission;
  permissionName: Permission_Enum;
  /** An object relationship */
  role: Role;
  roleId: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "RolePermission" */
export type RolePermission_Aggregate = {
  __typename?: 'RolePermission_aggregate';
  aggregate?: Maybe<RolePermission_Aggregate_Fields>;
  nodes: Array<RolePermission>;
};

/** aggregate fields of "RolePermission" */
export type RolePermission_Aggregate_Fields = {
  __typename?: 'RolePermission_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<RolePermission_Max_Fields>;
  min?: Maybe<RolePermission_Min_Fields>;
};


/** aggregate fields of "RolePermission" */
export type RolePermission_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RolePermission_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "RolePermission" */
export type RolePermission_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<RolePermission_Max_Order_By>;
  min?: Maybe<RolePermission_Min_Order_By>;
};

/** input type for inserting array relation for remote table "RolePermission" */
export type RolePermission_Arr_Rel_Insert_Input = {
  data: Array<RolePermission_Insert_Input>;
  on_conflict?: Maybe<RolePermission_On_Conflict>;
};

/** Boolean expression to filter rows from the table "RolePermission". All fields are combined with a logical 'AND'. */
export type RolePermission_Bool_Exp = {
  _and?: Maybe<Array<Maybe<RolePermission_Bool_Exp>>>;
  _not?: Maybe<RolePermission_Bool_Exp>;
  _or?: Maybe<Array<Maybe<RolePermission_Bool_Exp>>>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  permission?: Maybe<Permission_Bool_Exp>;
  permissionName?: Maybe<Permission_Enum_Comparison_Exp>;
  role?: Maybe<Role_Bool_Exp>;
  roleId?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "RolePermission" */
export enum RolePermission_Constraint {
  /** unique or primary key constraint */
  RolePermissionPkey = 'RolePermission_pkey',
  /** unique or primary key constraint */
  RolePermissionRoleIdPermissionKey = 'RolePermission_roleId_permission_key'
}

/** input type for inserting data into table "RolePermission" */
export type RolePermission_Insert_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  permission?: Maybe<Permission_Obj_Rel_Insert_Input>;
  permissionName?: Maybe<Permission_Enum>;
  role?: Maybe<Role_Obj_Rel_Insert_Input>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type RolePermission_Max_Fields = {
  __typename?: 'RolePermission_max_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "RolePermission" */
export type RolePermission_Max_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RolePermission_Min_Fields = {
  __typename?: 'RolePermission_min_fields';
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "RolePermission" */
export type RolePermission_Min_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roleId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "RolePermission" */
export type RolePermission_Mutation_Response = {
  __typename?: 'RolePermission_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<RolePermission>;
};

/** input type for inserting object relation for remote table "RolePermission" */
export type RolePermission_Obj_Rel_Insert_Input = {
  data: RolePermission_Insert_Input;
  on_conflict?: Maybe<RolePermission_On_Conflict>;
};

/** on conflict condition type for table "RolePermission" */
export type RolePermission_On_Conflict = {
  constraint: RolePermission_Constraint;
  update_columns: Array<RolePermission_Update_Column>;
  where?: Maybe<RolePermission_Bool_Exp>;
};

/** ordering options when selecting data from "RolePermission" */
export type RolePermission_Order_By = {
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  permission?: Maybe<Permission_Order_By>;
  permissionName?: Maybe<Order_By>;
  role?: Maybe<Role_Order_By>;
  roleId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "RolePermission" */
export type RolePermission_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "RolePermission" */
export enum RolePermission_Select_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  PermissionName = 'permissionName',
  /** column name */
  RoleId = 'roleId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "RolePermission" */
export type RolePermission_Set_Input = {
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  permissionName?: Maybe<Permission_Enum>;
  roleId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "RolePermission" */
export enum RolePermission_Update_Column {
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  PermissionName = 'permissionName',
  /** column name */
  RoleId = 'roleId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** aggregated selection of "Role" */
export type Role_Aggregate = {
  __typename?: 'Role_aggregate';
  aggregate?: Maybe<Role_Aggregate_Fields>;
  nodes: Array<Role>;
};

/** aggregate fields of "Role" */
export type Role_Aggregate_Fields = {
  __typename?: 'Role_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Role_Max_Fields>;
  min?: Maybe<Role_Min_Fields>;
};


/** aggregate fields of "Role" */
export type Role_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Role_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Role" */
export type Role_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Role_Max_Order_By>;
  min?: Maybe<Role_Min_Order_By>;
};

/** input type for inserting array relation for remote table "Role" */
export type Role_Arr_Rel_Insert_Input = {
  data: Array<Role_Insert_Input>;
  on_conflict?: Maybe<Role_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Role". All fields are combined with a logical 'AND'. */
export type Role_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Role_Bool_Exp>>>;
  _not?: Maybe<Role_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Role_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  groupRoles?: Maybe<GroupRole_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  rolePermissions?: Maybe<RolePermission_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Role" */
export enum Role_Constraint {
  /** unique or primary key constraint */
  RoleConferenceNameKey = 'Role_conference_name_key',
  /** unique or primary key constraint */
  RolePkey = 'Role_pkey'
}

/** input type for inserting data into table "Role" */
export type Role_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  groupRoles?: Maybe<GroupRole_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  rolePermissions?: Maybe<RolePermission_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Role_Max_Fields = {
  __typename?: 'Role_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Role" */
export type Role_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Role_Min_Fields = {
  __typename?: 'Role_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Role" */
export type Role_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Role" */
export type Role_Mutation_Response = {
  __typename?: 'Role_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Role>;
};

/** input type for inserting object relation for remote table "Role" */
export type Role_Obj_Rel_Insert_Input = {
  data: Role_Insert_Input;
  on_conflict?: Maybe<Role_On_Conflict>;
};

/** on conflict condition type for table "Role" */
export type Role_On_Conflict = {
  constraint: Role_Constraint;
  update_columns: Array<Role_Update_Column>;
  where?: Maybe<Role_Bool_Exp>;
};

/** ordering options when selecting data from "Role" */
export type Role_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  groupRoles_aggregate?: Maybe<GroupRole_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  rolePermissions_aggregate?: Maybe<RolePermission_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "Role" */
export type Role_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Role" */
export enum Role_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Role" */
export type Role_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "Role" */
export enum Role_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "Room" */
export type Room = {
  __typename?: 'Room';
  capacity?: Maybe<Scalars['Int']>;
  /** An array relationship */
  channelStackCreateJobs: Array<Job_Queues_ChannelStackCreateJob>;
  /** An aggregated array relationship */
  channelStackCreateJobs_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
  /** An object relationship */
  chat?: Maybe<Chat_Chat>;
  chatId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  currentMode: RoomMode;
  currentModeName: RoomMode_Enum;
  /** An array relationship */
  events: Array<Event>;
  /** An aggregated array relationship */
  events_aggregate: Event_Aggregate;
  /** An array relationship */
  executedTransitions: Array<ExecutedTransitions>;
  /** An aggregated array relationship */
  executedTransitions_aggregate: ExecutedTransitions_Aggregate;
  id: Scalars['uuid'];
  /** An object relationship */
  mediaLiveChannel?: Maybe<MediaLiveChannel>;
  name: Scalars['String'];
  /** An object relationship */
  originatingContentGroup?: Maybe<ContentGroup>;
  originatingContentGroupId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  originatingData?: Maybe<OriginatingData>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  originatingEvent?: Maybe<Event>;
  originatingEventId?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  participants: Array<RoomParticipant>;
  /** An aggregated array relationship */
  participants_aggregate: RoomParticipant_Aggregate;
  priority: Scalars['Int'];
  publicVonageSessionId?: Maybe<Scalars['String']>;
  /** An array relationship */
  roomPeople: Array<RoomPerson>;
  /** An aggregated array relationship */
  roomPeople_aggregate: RoomPerson_Aggregate;
  /** An object relationship */
  roomPrivacy: RoomPrivacy;
  roomPrivacyName: RoomPrivacy_Enum;
  /** An array relationship */
  shuffleRooms: Array<Room_ShuffleRoom>;
  /** An aggregated array relationship */
  shuffleRooms_aggregate: Room_ShuffleRoom_Aggregate;
  /** An array relationship */
  transitions: Array<Transitions>;
  /** An aggregated array relationship */
  transitions_aggregate: Transitions_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "Room" */
export type RoomChannelStackCreateJobsArgs = {
  distinct_on?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
  where?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomChannelStackCreateJobs_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
  where?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomEventsArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomEvents_AggregateArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomExecutedTransitionsArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomExecutedTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomParticipantsArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomParticipants_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomRoomPeopleArgs = {
  distinct_on?: Maybe<Array<RoomPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPerson_Order_By>>;
  where?: Maybe<RoomPerson_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomRoomPeople_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPerson_Order_By>>;
  where?: Maybe<RoomPerson_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomShuffleRoomsArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomShuffleRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomTransitionsArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** columns and relationships of "Room" */
export type RoomTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};

/** columns and relationships of "RoomMode" */
export type RoomMode = {
  __typename?: 'RoomMode';
  description: Scalars['String'];
  /** An array relationship */
  events: Array<Event>;
  /** An aggregated array relationship */
  events_aggregate: Event_Aggregate;
  name: Scalars['String'];
  /** An array relationship */
  rooms: Array<Room>;
  /** An aggregated array relationship */
  rooms_aggregate: Room_Aggregate;
};


/** columns and relationships of "RoomMode" */
export type RoomModeEventsArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "RoomMode" */
export type RoomModeEvents_AggregateArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** columns and relationships of "RoomMode" */
export type RoomModeRoomsArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "RoomMode" */
export type RoomModeRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};

/** aggregated selection of "RoomMode" */
export type RoomMode_Aggregate = {
  __typename?: 'RoomMode_aggregate';
  aggregate?: Maybe<RoomMode_Aggregate_Fields>;
  nodes: Array<RoomMode>;
};

/** aggregate fields of "RoomMode" */
export type RoomMode_Aggregate_Fields = {
  __typename?: 'RoomMode_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<RoomMode_Max_Fields>;
  min?: Maybe<RoomMode_Min_Fields>;
};


/** aggregate fields of "RoomMode" */
export type RoomMode_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RoomMode_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "RoomMode" */
export type RoomMode_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<RoomMode_Max_Order_By>;
  min?: Maybe<RoomMode_Min_Order_By>;
};

/** input type for inserting array relation for remote table "RoomMode" */
export type RoomMode_Arr_Rel_Insert_Input = {
  data: Array<RoomMode_Insert_Input>;
  on_conflict?: Maybe<RoomMode_On_Conflict>;
};

/** Boolean expression to filter rows from the table "RoomMode". All fields are combined with a logical 'AND'. */
export type RoomMode_Bool_Exp = {
  _and?: Maybe<Array<Maybe<RoomMode_Bool_Exp>>>;
  _not?: Maybe<RoomMode_Bool_Exp>;
  _or?: Maybe<Array<Maybe<RoomMode_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  events?: Maybe<Event_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  rooms?: Maybe<Room_Bool_Exp>;
};

/** unique or primary key constraints on table "RoomMode" */
export enum RoomMode_Constraint {
  /** unique or primary key constraint */
  RoomModePkey = 'RoomMode_pkey'
}

export enum RoomMode_Enum {
  /** Users may participate in the general video chat. */
  Breakout = 'BREAKOUT',
  /** An exhibition hall. */
  Exhibition = 'EXHIBITION',
  /** An empty room. */
  None = 'NONE',
  /** Pre-recorded content should be played out to attendees. The breakout and Q&A video chats may also be available to relevant users. */
  Prerecorded = 'PRERECORDED',
  /** A live presentation should be delivered in the Q&A video chat. The breakout video chat may also be available to relevant users. */
  Presentation = 'PRESENTATION',
  /** A live Q&A/discussion should be delivered in the Q&A video chat. The breakout video chat may also be available to relevant users. */
  QAndA = 'Q_AND_A',
  /** A shuffle queue. */
  Shuffle = 'SHUFFLE',
  /** An ordinary video from either a VIDEO_URL content element or a video uploaded to Clowdr. */
  VideoPlayer = 'VIDEO_PLAYER',
  /** Event is taking place in a Zoom room. */
  Zoom = 'ZOOM'
}

/** expression to compare columns of type RoomMode_enum. All fields are combined with logical 'AND'. */
export type RoomMode_Enum_Comparison_Exp = {
  _eq?: Maybe<RoomMode_Enum>;
  _in?: Maybe<Array<RoomMode_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<RoomMode_Enum>;
  _nin?: Maybe<Array<RoomMode_Enum>>;
};

/** input type for inserting data into table "RoomMode" */
export type RoomMode_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  events?: Maybe<Event_Arr_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  rooms?: Maybe<Room_Arr_Rel_Insert_Input>;
};

/** aggregate max on columns */
export type RoomMode_Max_Fields = {
  __typename?: 'RoomMode_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "RoomMode" */
export type RoomMode_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RoomMode_Min_Fields = {
  __typename?: 'RoomMode_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "RoomMode" */
export type RoomMode_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "RoomMode" */
export type RoomMode_Mutation_Response = {
  __typename?: 'RoomMode_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<RoomMode>;
};

/** input type for inserting object relation for remote table "RoomMode" */
export type RoomMode_Obj_Rel_Insert_Input = {
  data: RoomMode_Insert_Input;
  on_conflict?: Maybe<RoomMode_On_Conflict>;
};

/** on conflict condition type for table "RoomMode" */
export type RoomMode_On_Conflict = {
  constraint: RoomMode_Constraint;
  update_columns: Array<RoomMode_Update_Column>;
  where?: Maybe<RoomMode_Bool_Exp>;
};

/** ordering options when selecting data from "RoomMode" */
export type RoomMode_Order_By = {
  description?: Maybe<Order_By>;
  events_aggregate?: Maybe<Event_Aggregate_Order_By>;
  name?: Maybe<Order_By>;
  rooms_aggregate?: Maybe<Room_Aggregate_Order_By>;
};

/** primary key columns input for table: "RoomMode" */
export type RoomMode_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "RoomMode" */
export enum RoomMode_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "RoomMode" */
export type RoomMode_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "RoomMode" */
export enum RoomMode_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** columns and relationships of "RoomParticipant" */
export type RoomParticipant = {
  __typename?: 'RoomParticipant';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  room: Room;
  roomId: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
  vonageConnectionId: Scalars['String'];
};

/** aggregated selection of "RoomParticipant" */
export type RoomParticipant_Aggregate = {
  __typename?: 'RoomParticipant_aggregate';
  aggregate?: Maybe<RoomParticipant_Aggregate_Fields>;
  nodes: Array<RoomParticipant>;
};

/** aggregate fields of "RoomParticipant" */
export type RoomParticipant_Aggregate_Fields = {
  __typename?: 'RoomParticipant_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<RoomParticipant_Max_Fields>;
  min?: Maybe<RoomParticipant_Min_Fields>;
};


/** aggregate fields of "RoomParticipant" */
export type RoomParticipant_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RoomParticipant_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "RoomParticipant" */
export type RoomParticipant_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<RoomParticipant_Max_Order_By>;
  min?: Maybe<RoomParticipant_Min_Order_By>;
};

/** input type for inserting array relation for remote table "RoomParticipant" */
export type RoomParticipant_Arr_Rel_Insert_Input = {
  data: Array<RoomParticipant_Insert_Input>;
  on_conflict?: Maybe<RoomParticipant_On_Conflict>;
};

/** Boolean expression to filter rows from the table "RoomParticipant". All fields are combined with a logical 'AND'. */
export type RoomParticipant_Bool_Exp = {
  _and?: Maybe<Array<Maybe<RoomParticipant_Bool_Exp>>>;
  _not?: Maybe<RoomParticipant_Bool_Exp>;
  _or?: Maybe<Array<Maybe<RoomParticipant_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  vonageConnectionId?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "RoomParticipant" */
export enum RoomParticipant_Constraint {
  /** unique or primary key constraint */
  RoomParticipantPkey = 'RoomParticipant_pkey',
  /** unique or primary key constraint */
  RoomParticipantRoomIdAttendeeIdKey = 'RoomParticipant_roomId_attendeeId_key'
}

/** input type for inserting data into table "RoomParticipant" */
export type RoomParticipant_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type RoomParticipant_Max_Fields = {
  __typename?: 'RoomParticipant_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "RoomParticipant" */
export type RoomParticipant_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageConnectionId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RoomParticipant_Min_Fields = {
  __typename?: 'RoomParticipant_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "RoomParticipant" */
export type RoomParticipant_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageConnectionId?: Maybe<Order_By>;
};

/** response of any mutation on the table "RoomParticipant" */
export type RoomParticipant_Mutation_Response = {
  __typename?: 'RoomParticipant_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<RoomParticipant>;
};

/** input type for inserting object relation for remote table "RoomParticipant" */
export type RoomParticipant_Obj_Rel_Insert_Input = {
  data: RoomParticipant_Insert_Input;
  on_conflict?: Maybe<RoomParticipant_On_Conflict>;
};

/** on conflict condition type for table "RoomParticipant" */
export type RoomParticipant_On_Conflict = {
  constraint: RoomParticipant_Constraint;
  update_columns: Array<RoomParticipant_Update_Column>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};

/** ordering options when selecting data from "RoomParticipant" */
export type RoomParticipant_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vonageConnectionId?: Maybe<Order_By>;
};

/** primary key columns input for table: "RoomParticipant" */
export type RoomParticipant_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "RoomParticipant" */
export enum RoomParticipant_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VonageConnectionId = 'vonageConnectionId'
}

/** input type for updating data in table "RoomParticipant" */
export type RoomParticipant_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vonageConnectionId?: Maybe<Scalars['String']>;
};

/** update columns of table "RoomParticipant" */
export enum RoomParticipant_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VonageConnectionId = 'vonageConnectionId'
}

/** columns and relationships of "RoomPerson" */
export type RoomPerson = {
  __typename?: 'RoomPerson';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  room: Room;
  roomId: Scalars['uuid'];
  /** An object relationship */
  roomPersonRole: RoomPersonRole;
  roomPersonRoleName: RoomPersonRole_Enum;
  updatedAt: Scalars['timestamptz'];
};

/** columns and relationships of "RoomPersonRole" */
export type RoomPersonRole = {
  __typename?: 'RoomPersonRole';
  description: Scalars['String'];
  name: Scalars['String'];
};

/** aggregated selection of "RoomPersonRole" */
export type RoomPersonRole_Aggregate = {
  __typename?: 'RoomPersonRole_aggregate';
  aggregate?: Maybe<RoomPersonRole_Aggregate_Fields>;
  nodes: Array<RoomPersonRole>;
};

/** aggregate fields of "RoomPersonRole" */
export type RoomPersonRole_Aggregate_Fields = {
  __typename?: 'RoomPersonRole_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<RoomPersonRole_Max_Fields>;
  min?: Maybe<RoomPersonRole_Min_Fields>;
};


/** aggregate fields of "RoomPersonRole" */
export type RoomPersonRole_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RoomPersonRole_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "RoomPersonRole" */
export type RoomPersonRole_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<RoomPersonRole_Max_Order_By>;
  min?: Maybe<RoomPersonRole_Min_Order_By>;
};

/** input type for inserting array relation for remote table "RoomPersonRole" */
export type RoomPersonRole_Arr_Rel_Insert_Input = {
  data: Array<RoomPersonRole_Insert_Input>;
  on_conflict?: Maybe<RoomPersonRole_On_Conflict>;
};

/** Boolean expression to filter rows from the table "RoomPersonRole". All fields are combined with a logical 'AND'. */
export type RoomPersonRole_Bool_Exp = {
  _and?: Maybe<Array<Maybe<RoomPersonRole_Bool_Exp>>>;
  _not?: Maybe<RoomPersonRole_Bool_Exp>;
  _or?: Maybe<Array<Maybe<RoomPersonRole_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "RoomPersonRole" */
export enum RoomPersonRole_Constraint {
  /** unique or primary key constraint */
  RoomPersonRolePkey = 'RoomPersonRole_pkey'
}

export enum RoomPersonRole_Enum {
  /** User has control over the room. */
  Admin = 'ADMIN',
  /** User can participate in the room. */
  Participant = 'PARTICIPANT'
}

/** expression to compare columns of type RoomPersonRole_enum. All fields are combined with logical 'AND'. */
export type RoomPersonRole_Enum_Comparison_Exp = {
  _eq?: Maybe<RoomPersonRole_Enum>;
  _in?: Maybe<Array<RoomPersonRole_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<RoomPersonRole_Enum>;
  _nin?: Maybe<Array<RoomPersonRole_Enum>>;
};

/** input type for inserting data into table "RoomPersonRole" */
export type RoomPersonRole_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type RoomPersonRole_Max_Fields = {
  __typename?: 'RoomPersonRole_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "RoomPersonRole" */
export type RoomPersonRole_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RoomPersonRole_Min_Fields = {
  __typename?: 'RoomPersonRole_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "RoomPersonRole" */
export type RoomPersonRole_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "RoomPersonRole" */
export type RoomPersonRole_Mutation_Response = {
  __typename?: 'RoomPersonRole_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<RoomPersonRole>;
};

/** input type for inserting object relation for remote table "RoomPersonRole" */
export type RoomPersonRole_Obj_Rel_Insert_Input = {
  data: RoomPersonRole_Insert_Input;
  on_conflict?: Maybe<RoomPersonRole_On_Conflict>;
};

/** on conflict condition type for table "RoomPersonRole" */
export type RoomPersonRole_On_Conflict = {
  constraint: RoomPersonRole_Constraint;
  update_columns: Array<RoomPersonRole_Update_Column>;
  where?: Maybe<RoomPersonRole_Bool_Exp>;
};

/** ordering options when selecting data from "RoomPersonRole" */
export type RoomPersonRole_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "RoomPersonRole" */
export type RoomPersonRole_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "RoomPersonRole" */
export enum RoomPersonRole_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "RoomPersonRole" */
export type RoomPersonRole_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "RoomPersonRole" */
export enum RoomPersonRole_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** aggregated selection of "RoomPerson" */
export type RoomPerson_Aggregate = {
  __typename?: 'RoomPerson_aggregate';
  aggregate?: Maybe<RoomPerson_Aggregate_Fields>;
  nodes: Array<RoomPerson>;
};

/** aggregate fields of "RoomPerson" */
export type RoomPerson_Aggregate_Fields = {
  __typename?: 'RoomPerson_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<RoomPerson_Max_Fields>;
  min?: Maybe<RoomPerson_Min_Fields>;
};


/** aggregate fields of "RoomPerson" */
export type RoomPerson_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RoomPerson_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "RoomPerson" */
export type RoomPerson_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<RoomPerson_Max_Order_By>;
  min?: Maybe<RoomPerson_Min_Order_By>;
};

/** input type for inserting array relation for remote table "RoomPerson" */
export type RoomPerson_Arr_Rel_Insert_Input = {
  data: Array<RoomPerson_Insert_Input>;
  on_conflict?: Maybe<RoomPerson_On_Conflict>;
};

/** Boolean expression to filter rows from the table "RoomPerson". All fields are combined with a logical 'AND'. */
export type RoomPerson_Bool_Exp = {
  _and?: Maybe<Array<Maybe<RoomPerson_Bool_Exp>>>;
  _not?: Maybe<RoomPerson_Bool_Exp>;
  _or?: Maybe<Array<Maybe<RoomPerson_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  roomPersonRole?: Maybe<RoomPersonRole_Bool_Exp>;
  roomPersonRoleName?: Maybe<RoomPersonRole_Enum_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "RoomPerson" */
export enum RoomPerson_Constraint {
  /** unique or primary key constraint */
  RoomPersonAttendeeIdRoomIdKey = 'RoomPerson_attendeeId_roomId_key',
  /** unique or primary key constraint */
  RoomPersonPkey = 'RoomPerson_pkey'
}

/** input type for inserting data into table "RoomPerson" */
export type RoomPerson_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  roomPersonRole?: Maybe<RoomPersonRole_Obj_Rel_Insert_Input>;
  roomPersonRoleName?: Maybe<RoomPersonRole_Enum>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type RoomPerson_Max_Fields = {
  __typename?: 'RoomPerson_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "RoomPerson" */
export type RoomPerson_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RoomPerson_Min_Fields = {
  __typename?: 'RoomPerson_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "RoomPerson" */
export type RoomPerson_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "RoomPerson" */
export type RoomPerson_Mutation_Response = {
  __typename?: 'RoomPerson_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<RoomPerson>;
};

/** input type for inserting object relation for remote table "RoomPerson" */
export type RoomPerson_Obj_Rel_Insert_Input = {
  data: RoomPerson_Insert_Input;
  on_conflict?: Maybe<RoomPerson_On_Conflict>;
};

/** on conflict condition type for table "RoomPerson" */
export type RoomPerson_On_Conflict = {
  constraint: RoomPerson_Constraint;
  update_columns: Array<RoomPerson_Update_Column>;
  where?: Maybe<RoomPerson_Bool_Exp>;
};

/** ordering options when selecting data from "RoomPerson" */
export type RoomPerson_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  roomPersonRole?: Maybe<RoomPersonRole_Order_By>;
  roomPersonRoleName?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "RoomPerson" */
export type RoomPerson_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "RoomPerson" */
export enum RoomPerson_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  RoomPersonRoleName = 'roomPersonRoleName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "RoomPerson" */
export type RoomPerson_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  roomPersonRoleName?: Maybe<RoomPersonRole_Enum>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "RoomPerson" */
export enum RoomPerson_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  RoomPersonRoleName = 'roomPersonRoleName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "RoomPrivacy" */
export type RoomPrivacy = {
  __typename?: 'RoomPrivacy';
  description: Scalars['String'];
  name: Scalars['String'];
};

/** aggregated selection of "RoomPrivacy" */
export type RoomPrivacy_Aggregate = {
  __typename?: 'RoomPrivacy_aggregate';
  aggregate?: Maybe<RoomPrivacy_Aggregate_Fields>;
  nodes: Array<RoomPrivacy>;
};

/** aggregate fields of "RoomPrivacy" */
export type RoomPrivacy_Aggregate_Fields = {
  __typename?: 'RoomPrivacy_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<RoomPrivacy_Max_Fields>;
  min?: Maybe<RoomPrivacy_Min_Fields>;
};


/** aggregate fields of "RoomPrivacy" */
export type RoomPrivacy_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<RoomPrivacy_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "RoomPrivacy" */
export type RoomPrivacy_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<RoomPrivacy_Max_Order_By>;
  min?: Maybe<RoomPrivacy_Min_Order_By>;
};

/** input type for inserting array relation for remote table "RoomPrivacy" */
export type RoomPrivacy_Arr_Rel_Insert_Input = {
  data: Array<RoomPrivacy_Insert_Input>;
  on_conflict?: Maybe<RoomPrivacy_On_Conflict>;
};

/** Boolean expression to filter rows from the table "RoomPrivacy". All fields are combined with a logical 'AND'. */
export type RoomPrivacy_Bool_Exp = {
  _and?: Maybe<Array<Maybe<RoomPrivacy_Bool_Exp>>>;
  _not?: Maybe<RoomPrivacy_Bool_Exp>;
  _or?: Maybe<Array<Maybe<RoomPrivacy_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "RoomPrivacy" */
export enum RoomPrivacy_Constraint {
  /** unique or primary key constraint */
  RoomPrivacyPkey = 'RoomPrivacy_pkey'
}

export enum RoomPrivacy_Enum {
  /** Room is a direct message between two attendees. No new attendees can be added. */
  Dm = 'DM',
  /** Room access is automatically controlled by the system. */
  Managed = 'MANAGED',
  /** Room is only visible to attendees who have been given access. New attendees can be added. */
  Private = 'PRIVATE',
  /** Room is visible to all attendees at the conference. */
  Public = 'PUBLIC'
}

/** expression to compare columns of type RoomPrivacy_enum. All fields are combined with logical 'AND'. */
export type RoomPrivacy_Enum_Comparison_Exp = {
  _eq?: Maybe<RoomPrivacy_Enum>;
  _in?: Maybe<Array<RoomPrivacy_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<RoomPrivacy_Enum>;
  _nin?: Maybe<Array<RoomPrivacy_Enum>>;
};

/** input type for inserting data into table "RoomPrivacy" */
export type RoomPrivacy_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type RoomPrivacy_Max_Fields = {
  __typename?: 'RoomPrivacy_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "RoomPrivacy" */
export type RoomPrivacy_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type RoomPrivacy_Min_Fields = {
  __typename?: 'RoomPrivacy_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "RoomPrivacy" */
export type RoomPrivacy_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "RoomPrivacy" */
export type RoomPrivacy_Mutation_Response = {
  __typename?: 'RoomPrivacy_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<RoomPrivacy>;
};

/** input type for inserting object relation for remote table "RoomPrivacy" */
export type RoomPrivacy_Obj_Rel_Insert_Input = {
  data: RoomPrivacy_Insert_Input;
  on_conflict?: Maybe<RoomPrivacy_On_Conflict>;
};

/** on conflict condition type for table "RoomPrivacy" */
export type RoomPrivacy_On_Conflict = {
  constraint: RoomPrivacy_Constraint;
  update_columns: Array<RoomPrivacy_Update_Column>;
  where?: Maybe<RoomPrivacy_Bool_Exp>;
};

/** ordering options when selecting data from "RoomPrivacy" */
export type RoomPrivacy_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "RoomPrivacy" */
export type RoomPrivacy_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "RoomPrivacy" */
export enum RoomPrivacy_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "RoomPrivacy" */
export type RoomPrivacy_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "RoomPrivacy" */
export enum RoomPrivacy_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** aggregated selection of "Room" */
export type Room_Aggregate = {
  __typename?: 'Room_aggregate';
  aggregate?: Maybe<Room_Aggregate_Fields>;
  nodes: Array<Room>;
};

/** aggregate fields of "Room" */
export type Room_Aggregate_Fields = {
  __typename?: 'Room_aggregate_fields';
  avg?: Maybe<Room_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Room_Max_Fields>;
  min?: Maybe<Room_Min_Fields>;
  stddev?: Maybe<Room_Stddev_Fields>;
  stddev_pop?: Maybe<Room_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Room_Stddev_Samp_Fields>;
  sum?: Maybe<Room_Sum_Fields>;
  var_pop?: Maybe<Room_Var_Pop_Fields>;
  var_samp?: Maybe<Room_Var_Samp_Fields>;
  variance?: Maybe<Room_Variance_Fields>;
};


/** aggregate fields of "Room" */
export type Room_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Room_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Room" */
export type Room_Aggregate_Order_By = {
  avg?: Maybe<Room_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Room_Max_Order_By>;
  min?: Maybe<Room_Min_Order_By>;
  stddev?: Maybe<Room_Stddev_Order_By>;
  stddev_pop?: Maybe<Room_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Room_Stddev_Samp_Order_By>;
  sum?: Maybe<Room_Sum_Order_By>;
  var_pop?: Maybe<Room_Var_Pop_Order_By>;
  var_samp?: Maybe<Room_Var_Samp_Order_By>;
  variance?: Maybe<Room_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Room" */
export type Room_Arr_Rel_Insert_Input = {
  data: Array<Room_Insert_Input>;
  on_conflict?: Maybe<Room_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_Avg_Fields = {
  __typename?: 'Room_avg_fields';
  capacity?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "Room" */
export type Room_Avg_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Room". All fields are combined with a logical 'AND'. */
export type Room_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Room_Bool_Exp>>>;
  _not?: Maybe<Room_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Room_Bool_Exp>>>;
  capacity?: Maybe<Int_Comparison_Exp>;
  channelStackCreateJobs?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
  chat?: Maybe<Chat_Chat_Bool_Exp>;
  chatId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  currentMode?: Maybe<RoomMode_Bool_Exp>;
  currentModeName?: Maybe<RoomMode_Enum_Comparison_Exp>;
  events?: Maybe<Event_Bool_Exp>;
  executedTransitions?: Maybe<ExecutedTransitions_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  mediaLiveChannel?: Maybe<MediaLiveChannel_Bool_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  originatingContentGroup?: Maybe<ContentGroup_Bool_Exp>;
  originatingContentGroupId?: Maybe<Uuid_Comparison_Exp>;
  originatingData?: Maybe<OriginatingData_Bool_Exp>;
  originatingDataId?: Maybe<Uuid_Comparison_Exp>;
  originatingEvent?: Maybe<Event_Bool_Exp>;
  originatingEventId?: Maybe<Uuid_Comparison_Exp>;
  participants?: Maybe<RoomParticipant_Bool_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  publicVonageSessionId?: Maybe<String_Comparison_Exp>;
  roomPeople?: Maybe<RoomPerson_Bool_Exp>;
  roomPrivacy?: Maybe<RoomPrivacy_Bool_Exp>;
  roomPrivacyName?: Maybe<RoomPrivacy_Enum_Comparison_Exp>;
  shuffleRooms?: Maybe<Room_ShuffleRoom_Bool_Exp>;
  transitions?: Maybe<Transitions_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Room" */
export enum Room_Constraint {
  /** unique or primary key constraint */
  RoomConferenceIdNameKey = 'Room_conferenceId_name_key',
  /** unique or primary key constraint */
  RoomOriginatingEventIdKey = 'Room_originatingEventId_key',
  /** unique or primary key constraint */
  RoomPkey = 'Room_pkey'
}

/** input type for incrementing integer column in table "Room" */
export type Room_Inc_Input = {
  capacity?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Room" */
export type Room_Insert_Input = {
  capacity?: Maybe<Scalars['Int']>;
  channelStackCreateJobs?: Maybe<Job_Queues_ChannelStackCreateJob_Arr_Rel_Insert_Input>;
  chat?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  chatId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentMode?: Maybe<RoomMode_Obj_Rel_Insert_Input>;
  currentModeName?: Maybe<RoomMode_Enum>;
  events?: Maybe<Event_Arr_Rel_Insert_Input>;
  executedTransitions?: Maybe<ExecutedTransitions_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  mediaLiveChannel?: Maybe<MediaLiveChannel_Obj_Rel_Insert_Input>;
  name?: Maybe<Scalars['String']>;
  originatingContentGroup?: Maybe<ContentGroup_Obj_Rel_Insert_Input>;
  originatingContentGroupId?: Maybe<Scalars['uuid']>;
  originatingData?: Maybe<OriginatingData_Obj_Rel_Insert_Input>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  originatingEvent?: Maybe<Event_Obj_Rel_Insert_Input>;
  originatingEventId?: Maybe<Scalars['uuid']>;
  participants?: Maybe<RoomParticipant_Arr_Rel_Insert_Input>;
  priority?: Maybe<Scalars['Int']>;
  publicVonageSessionId?: Maybe<Scalars['String']>;
  roomPeople?: Maybe<RoomPerson_Arr_Rel_Insert_Input>;
  roomPrivacy?: Maybe<RoomPrivacy_Obj_Rel_Insert_Input>;
  roomPrivacyName?: Maybe<RoomPrivacy_Enum>;
  shuffleRooms?: Maybe<Room_ShuffleRoom_Arr_Rel_Insert_Input>;
  transitions?: Maybe<Transitions_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Room_Max_Fields = {
  __typename?: 'Room_max_fields';
  capacity?: Maybe<Scalars['Int']>;
  chatId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingContentGroupId?: Maybe<Scalars['uuid']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  originatingEventId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  publicVonageSessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Room" */
export type Room_Max_Order_By = {
  capacity?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingContentGroupId?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  originatingEventId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  publicVonageSessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Room_Min_Fields = {
  __typename?: 'Room_min_fields';
  capacity?: Maybe<Scalars['Int']>;
  chatId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingContentGroupId?: Maybe<Scalars['uuid']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  originatingEventId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  publicVonageSessionId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Room" */
export type Room_Min_Order_By = {
  capacity?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingContentGroupId?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  originatingEventId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  publicVonageSessionId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "Room" */
export type Room_Mutation_Response = {
  __typename?: 'Room_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Room>;
};

/** input type for inserting object relation for remote table "Room" */
export type Room_Obj_Rel_Insert_Input = {
  data: Room_Insert_Input;
  on_conflict?: Maybe<Room_On_Conflict>;
};

/** on conflict condition type for table "Room" */
export type Room_On_Conflict = {
  constraint: Room_Constraint;
  update_columns: Array<Room_Update_Column>;
  where?: Maybe<Room_Bool_Exp>;
};

/** ordering options when selecting data from "Room" */
export type Room_Order_By = {
  capacity?: Maybe<Order_By>;
  channelStackCreateJobs_aggregate?: Maybe<Job_Queues_ChannelStackCreateJob_Aggregate_Order_By>;
  chat?: Maybe<Chat_Chat_Order_By>;
  chatId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  currentMode?: Maybe<RoomMode_Order_By>;
  currentModeName?: Maybe<Order_By>;
  events_aggregate?: Maybe<Event_Aggregate_Order_By>;
  executedTransitions_aggregate?: Maybe<ExecutedTransitions_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  mediaLiveChannel?: Maybe<MediaLiveChannel_Order_By>;
  name?: Maybe<Order_By>;
  originatingContentGroup?: Maybe<ContentGroup_Order_By>;
  originatingContentGroupId?: Maybe<Order_By>;
  originatingData?: Maybe<OriginatingData_Order_By>;
  originatingDataId?: Maybe<Order_By>;
  originatingEvent?: Maybe<Event_Order_By>;
  originatingEventId?: Maybe<Order_By>;
  participants_aggregate?: Maybe<RoomParticipant_Aggregate_Order_By>;
  priority?: Maybe<Order_By>;
  publicVonageSessionId?: Maybe<Order_By>;
  roomPeople_aggregate?: Maybe<RoomPerson_Aggregate_Order_By>;
  roomPrivacy?: Maybe<RoomPrivacy_Order_By>;
  roomPrivacyName?: Maybe<Order_By>;
  shuffleRooms_aggregate?: Maybe<Room_ShuffleRoom_Aggregate_Order_By>;
  transitions_aggregate?: Maybe<Transitions_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "Room" */
export type Room_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Room" */
export enum Room_Select_Column {
  /** column name */
  Capacity = 'capacity',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentModeName = 'currentModeName',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingContentGroupId = 'originatingContentGroupId',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  OriginatingEventId = 'originatingEventId',
  /** column name */
  Priority = 'priority',
  /** column name */
  PublicVonageSessionId = 'publicVonageSessionId',
  /** column name */
  RoomPrivacyName = 'roomPrivacyName',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "Room" */
export type Room_Set_Input = {
  capacity?: Maybe<Scalars['Int']>;
  chatId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  currentModeName?: Maybe<RoomMode_Enum>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingContentGroupId?: Maybe<Scalars['uuid']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  originatingEventId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  publicVonageSessionId?: Maybe<Scalars['String']>;
  roomPrivacyName?: Maybe<RoomPrivacy_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Room_Stddev_Fields = {
  __typename?: 'Room_stddev_fields';
  capacity?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "Room" */
export type Room_Stddev_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_Stddev_Pop_Fields = {
  __typename?: 'Room_stddev_pop_fields';
  capacity?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "Room" */
export type Room_Stddev_Pop_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_Stddev_Samp_Fields = {
  __typename?: 'Room_stddev_samp_fields';
  capacity?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "Room" */
export type Room_Stddev_Samp_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_Sum_Fields = {
  __typename?: 'Room_sum_fields';
  capacity?: Maybe<Scalars['Int']>;
  priority?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "Room" */
export type Room_Sum_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** update columns of table "Room" */
export enum Room_Update_Column {
  /** column name */
  Capacity = 'capacity',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  CurrentModeName = 'currentModeName',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingContentGroupId = 'originatingContentGroupId',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  OriginatingEventId = 'originatingEventId',
  /** column name */
  Priority = 'priority',
  /** column name */
  PublicVonageSessionId = 'publicVonageSessionId',
  /** column name */
  RoomPrivacyName = 'roomPrivacyName',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Room_Var_Pop_Fields = {
  __typename?: 'Room_var_pop_fields';
  capacity?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "Room" */
export type Room_Var_Pop_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_Var_Samp_Fields = {
  __typename?: 'Room_var_samp_fields';
  capacity?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "Room" */
export type Room_Var_Samp_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_Variance_Fields = {
  __typename?: 'Room_variance_fields';
  capacity?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "Room" */
export type Room_Variance_Order_By = {
  capacity?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
};

export type SampleInput = {
  password: Scalars['String'];
  username: Scalars['String'];
};

export type SampleOutput = {
  __typename?: 'SampleOutput';
  accessToken: Scalars['String'];
};

export type StopEventBroadcastOutput = {
  __typename?: 'StopEventBroadcastOutput';
  broadcastsStopped: Scalars['Int'];
};

/** expression to compare columns of type String. All fields are combined with logical 'AND'. */
export type String_Comparison_Exp = {
  _eq?: Maybe<Scalars['String']>;
  _gt?: Maybe<Scalars['String']>;
  _gte?: Maybe<Scalars['String']>;
  _ilike?: Maybe<Scalars['String']>;
  _in?: Maybe<Array<Scalars['String']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _like?: Maybe<Scalars['String']>;
  _lt?: Maybe<Scalars['String']>;
  _lte?: Maybe<Scalars['String']>;
  _neq?: Maybe<Scalars['String']>;
  _nilike?: Maybe<Scalars['String']>;
  _nin?: Maybe<Array<Scalars['String']>>;
  _nlike?: Maybe<Scalars['String']>;
  _nsimilar?: Maybe<Scalars['String']>;
  _similar?: Maybe<Scalars['String']>;
};

export type SubmitContentItemInput = {
  contentItemData: Scalars['jsonb'];
};

export type SubmitContentItemOutput = {
  __typename?: 'SubmitContentItemOutput';
  message: Scalars['String'];
  success: Scalars['Boolean'];
};

export type SubmitGoogleOAuthCodeOutput = {
  __typename?: 'SubmitGoogleOAuthCodeOutput';
  message?: Maybe<Scalars['String']>;
  success: Scalars['Boolean'];
};

export type SubmitGoogleOAuthTokenOutput = {
  __typename?: 'SubmitGoogleOAuthTokenOutput';
  message?: Maybe<Scalars['String']>;
  success: Scalars['Boolean'];
};

export type SubmitUpdatedSubtitlesInput = {
  accessToken: Scalars['String'];
  contentItemId: Scalars['String'];
  subtitleText: Scalars['String'];
};

export type SubmitUpdatedSubtitlesOutput = {
  __typename?: 'SubmitUpdatedSubtitlesOutput';
  message: Scalars['String'];
  success: Scalars['Boolean'];
};

/** columns and relationships of "Tag" */
export type Tag = {
  __typename?: 'Tag';
  colour: Scalars['String'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An array relationship */
  contentGroupTags: Array<ContentGroupTag>;
  /** An aggregated array relationship */
  contentGroupTags_aggregate: ContentGroupTag_Aggregate;
  createdAt: Scalars['timestamptz'];
  /** An array relationship */
  eventTags: Array<EventTag>;
  /** An aggregated array relationship */
  eventTags_aggregate: EventTag_Aggregate;
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An object relationship */
  originatingData?: Maybe<OriginatingData>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  priority: Scalars['Int'];
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "Tag" */
export type TagContentGroupTagsArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** columns and relationships of "Tag" */
export type TagContentGroupTags_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** columns and relationships of "Tag" */
export type TagEventTagsArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};


/** columns and relationships of "Tag" */
export type TagEventTags_AggregateArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};

/** aggregated selection of "Tag" */
export type Tag_Aggregate = {
  __typename?: 'Tag_aggregate';
  aggregate?: Maybe<Tag_Aggregate_Fields>;
  nodes: Array<Tag>;
};

/** aggregate fields of "Tag" */
export type Tag_Aggregate_Fields = {
  __typename?: 'Tag_aggregate_fields';
  avg?: Maybe<Tag_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Tag_Max_Fields>;
  min?: Maybe<Tag_Min_Fields>;
  stddev?: Maybe<Tag_Stddev_Fields>;
  stddev_pop?: Maybe<Tag_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Tag_Stddev_Samp_Fields>;
  sum?: Maybe<Tag_Sum_Fields>;
  var_pop?: Maybe<Tag_Var_Pop_Fields>;
  var_samp?: Maybe<Tag_Var_Samp_Fields>;
  variance?: Maybe<Tag_Variance_Fields>;
};


/** aggregate fields of "Tag" */
export type Tag_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Tag_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Tag" */
export type Tag_Aggregate_Order_By = {
  avg?: Maybe<Tag_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Tag_Max_Order_By>;
  min?: Maybe<Tag_Min_Order_By>;
  stddev?: Maybe<Tag_Stddev_Order_By>;
  stddev_pop?: Maybe<Tag_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Tag_Stddev_Samp_Order_By>;
  sum?: Maybe<Tag_Sum_Order_By>;
  var_pop?: Maybe<Tag_Var_Pop_Order_By>;
  var_samp?: Maybe<Tag_Var_Samp_Order_By>;
  variance?: Maybe<Tag_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Tag" */
export type Tag_Arr_Rel_Insert_Input = {
  data: Array<Tag_Insert_Input>;
  on_conflict?: Maybe<Tag_On_Conflict>;
};

/** aggregate avg on columns */
export type Tag_Avg_Fields = {
  __typename?: 'Tag_avg_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "Tag" */
export type Tag_Avg_Order_By = {
  priority?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Tag". All fields are combined with a logical 'AND'. */
export type Tag_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Tag_Bool_Exp>>>;
  _not?: Maybe<Tag_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Tag_Bool_Exp>>>;
  colour?: Maybe<String_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroupTags?: Maybe<ContentGroupTag_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  eventTags?: Maybe<EventTag_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  originatingData?: Maybe<OriginatingData_Bool_Exp>;
  originatingDataId?: Maybe<Uuid_Comparison_Exp>;
  priority?: Maybe<Int_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Tag" */
export enum Tag_Constraint {
  /** unique or primary key constraint */
  TagPkey = 'Tag_pkey'
}

/** input type for incrementing integer column in table "Tag" */
export type Tag_Inc_Input = {
  priority?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Tag" */
export type Tag_Insert_Input = {
  colour?: Maybe<Scalars['String']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroupTags?: Maybe<ContentGroupTag_Arr_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventTags?: Maybe<EventTag_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingData?: Maybe<OriginatingData_Obj_Rel_Insert_Input>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Tag_Max_Fields = {
  __typename?: 'Tag_max_fields';
  colour?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Tag" */
export type Tag_Max_Order_By = {
  colour?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Tag_Min_Fields = {
  __typename?: 'Tag_min_fields';
  colour?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Tag" */
export type Tag_Min_Order_By = {
  colour?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingDataId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Tag" */
export type Tag_Mutation_Response = {
  __typename?: 'Tag_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Tag>;
};

/** input type for inserting object relation for remote table "Tag" */
export type Tag_Obj_Rel_Insert_Input = {
  data: Tag_Insert_Input;
  on_conflict?: Maybe<Tag_On_Conflict>;
};

/** on conflict condition type for table "Tag" */
export type Tag_On_Conflict = {
  constraint: Tag_Constraint;
  update_columns: Array<Tag_Update_Column>;
  where?: Maybe<Tag_Bool_Exp>;
};

/** ordering options when selecting data from "Tag" */
export type Tag_Order_By = {
  colour?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroupTags_aggregate?: Maybe<ContentGroupTag_Aggregate_Order_By>;
  createdAt?: Maybe<Order_By>;
  eventTags_aggregate?: Maybe<EventTag_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  originatingData?: Maybe<OriginatingData_Order_By>;
  originatingDataId?: Maybe<Order_By>;
  priority?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "Tag" */
export type Tag_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Tag" */
export enum Tag_Select_Column {
  /** column name */
  Colour = 'colour',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  Priority = 'priority',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Tag" */
export type Tag_Set_Input = {
  colour?: Maybe<Scalars['String']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  originatingDataId?: Maybe<Scalars['uuid']>;
  priority?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Tag_Stddev_Fields = {
  __typename?: 'Tag_stddev_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "Tag" */
export type Tag_Stddev_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Tag_Stddev_Pop_Fields = {
  __typename?: 'Tag_stddev_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "Tag" */
export type Tag_Stddev_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Tag_Stddev_Samp_Fields = {
  __typename?: 'Tag_stddev_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "Tag" */
export type Tag_Stddev_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Tag_Sum_Fields = {
  __typename?: 'Tag_sum_fields';
  priority?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "Tag" */
export type Tag_Sum_Order_By = {
  priority?: Maybe<Order_By>;
};

/** update columns of table "Tag" */
export enum Tag_Update_Column {
  /** column name */
  Colour = 'colour',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  OriginatingDataId = 'originatingDataId',
  /** column name */
  Priority = 'priority',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** aggregate var_pop on columns */
export type Tag_Var_Pop_Fields = {
  __typename?: 'Tag_var_pop_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "Tag" */
export type Tag_Var_Pop_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Tag_Var_Samp_Fields = {
  __typename?: 'Tag_var_samp_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "Tag" */
export type Tag_Var_Samp_Order_By = {
  priority?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Tag_Variance_Fields = {
  __typename?: 'Tag_variance_fields';
  priority?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "Tag" */
export type Tag_Variance_Order_By = {
  priority?: Maybe<Order_By>;
};

/** columns and relationships of "TranscriptionJob" */
export type TranscriptionJob = {
  __typename?: 'TranscriptionJob';
  awsTranscribeJobName: Scalars['String'];
  contentItemId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  languageCode: Scalars['String'];
  transcriptionS3Url: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  videoS3Url: Scalars['String'];
};

/** aggregated selection of "TranscriptionJob" */
export type TranscriptionJob_Aggregate = {
  __typename?: 'TranscriptionJob_aggregate';
  aggregate?: Maybe<TranscriptionJob_Aggregate_Fields>;
  nodes: Array<TranscriptionJob>;
};

/** aggregate fields of "TranscriptionJob" */
export type TranscriptionJob_Aggregate_Fields = {
  __typename?: 'TranscriptionJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<TranscriptionJob_Max_Fields>;
  min?: Maybe<TranscriptionJob_Min_Fields>;
};


/** aggregate fields of "TranscriptionJob" */
export type TranscriptionJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<TranscriptionJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "TranscriptionJob" */
export type TranscriptionJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<TranscriptionJob_Max_Order_By>;
  min?: Maybe<TranscriptionJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "TranscriptionJob" */
export type TranscriptionJob_Arr_Rel_Insert_Input = {
  data: Array<TranscriptionJob_Insert_Input>;
  on_conflict?: Maybe<TranscriptionJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "TranscriptionJob". All fields are combined with a logical 'AND'. */
export type TranscriptionJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<TranscriptionJob_Bool_Exp>>>;
  _not?: Maybe<TranscriptionJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<TranscriptionJob_Bool_Exp>>>;
  awsTranscribeJobName?: Maybe<String_Comparison_Exp>;
  contentItemId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  languageCode?: Maybe<String_Comparison_Exp>;
  transcriptionS3Url?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  videoS3Url?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "TranscriptionJob" */
export enum TranscriptionJob_Constraint {
  /** unique or primary key constraint */
  TranscriptionJobAwsTranscribeJobNameKey = 'TranscriptionJob_awsTranscribeJobName_key',
  /** unique or primary key constraint */
  TranscriptionJobPkey = 'TranscriptionJob_pkey'
}

/** input type for inserting data into table "TranscriptionJob" */
export type TranscriptionJob_Insert_Input = {
  awsTranscribeJobName?: Maybe<Scalars['String']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  languageCode?: Maybe<Scalars['String']>;
  transcriptionS3Url?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoS3Url?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type TranscriptionJob_Max_Fields = {
  __typename?: 'TranscriptionJob_max_fields';
  awsTranscribeJobName?: Maybe<Scalars['String']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  languageCode?: Maybe<Scalars['String']>;
  transcriptionS3Url?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoS3Url?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "TranscriptionJob" */
export type TranscriptionJob_Max_Order_By = {
  awsTranscribeJobName?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  languageCode?: Maybe<Order_By>;
  transcriptionS3Url?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  videoS3Url?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type TranscriptionJob_Min_Fields = {
  __typename?: 'TranscriptionJob_min_fields';
  awsTranscribeJobName?: Maybe<Scalars['String']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  languageCode?: Maybe<Scalars['String']>;
  transcriptionS3Url?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoS3Url?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "TranscriptionJob" */
export type TranscriptionJob_Min_Order_By = {
  awsTranscribeJobName?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  languageCode?: Maybe<Order_By>;
  transcriptionS3Url?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  videoS3Url?: Maybe<Order_By>;
};

/** response of any mutation on the table "TranscriptionJob" */
export type TranscriptionJob_Mutation_Response = {
  __typename?: 'TranscriptionJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<TranscriptionJob>;
};

/** input type for inserting object relation for remote table "TranscriptionJob" */
export type TranscriptionJob_Obj_Rel_Insert_Input = {
  data: TranscriptionJob_Insert_Input;
  on_conflict?: Maybe<TranscriptionJob_On_Conflict>;
};

/** on conflict condition type for table "TranscriptionJob" */
export type TranscriptionJob_On_Conflict = {
  constraint: TranscriptionJob_Constraint;
  update_columns: Array<TranscriptionJob_Update_Column>;
  where?: Maybe<TranscriptionJob_Bool_Exp>;
};

/** ordering options when selecting data from "TranscriptionJob" */
export type TranscriptionJob_Order_By = {
  awsTranscribeJobName?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  languageCode?: Maybe<Order_By>;
  transcriptionS3Url?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  videoS3Url?: Maybe<Order_By>;
};

/** primary key columns input for table: "TranscriptionJob" */
export type TranscriptionJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "TranscriptionJob" */
export enum TranscriptionJob_Select_Column {
  /** column name */
  AwsTranscribeJobName = 'awsTranscribeJobName',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageCode = 'languageCode',
  /** column name */
  TranscriptionS3Url = 'transcriptionS3Url',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VideoS3Url = 'videoS3Url'
}

/** input type for updating data in table "TranscriptionJob" */
export type TranscriptionJob_Set_Input = {
  awsTranscribeJobName?: Maybe<Scalars['String']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  languageCode?: Maybe<Scalars['String']>;
  transcriptionS3Url?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoS3Url?: Maybe<Scalars['String']>;
};

/** update columns of table "TranscriptionJob" */
export enum TranscriptionJob_Update_Column {
  /** column name */
  AwsTranscribeJobName = 'awsTranscribeJobName',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  LanguageCode = 'languageCode',
  /** column name */
  TranscriptionS3Url = 'transcriptionS3Url',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VideoS3Url = 'videoS3Url'
}

/** columns and relationships of "Transitions" */
export type Transitions = {
  __typename?: 'Transitions';
  broadcastContentId: Scalars['uuid'];
  /** An object relationship */
  broadcastContentItem: BroadcastContentItem;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  fallbackBroadcastContentId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  fallbackBroadcastContentItem?: Maybe<BroadcastContentItem>;
  id: Scalars['uuid'];
  /** An object relationship */
  room: Room;
  roomId: Scalars['uuid'];
  time: Scalars['timestamptz'];
  updatedAt: Scalars['timestamptz'];
};

/** aggregated selection of "Transitions" */
export type Transitions_Aggregate = {
  __typename?: 'Transitions_aggregate';
  aggregate?: Maybe<Transitions_Aggregate_Fields>;
  nodes: Array<Transitions>;
};

/** aggregate fields of "Transitions" */
export type Transitions_Aggregate_Fields = {
  __typename?: 'Transitions_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Transitions_Max_Fields>;
  min?: Maybe<Transitions_Min_Fields>;
};


/** aggregate fields of "Transitions" */
export type Transitions_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Transitions_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Transitions" */
export type Transitions_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Transitions_Max_Order_By>;
  min?: Maybe<Transitions_Min_Order_By>;
};

/** input type for inserting array relation for remote table "Transitions" */
export type Transitions_Arr_Rel_Insert_Input = {
  data: Array<Transitions_Insert_Input>;
  on_conflict?: Maybe<Transitions_On_Conflict>;
};

/** Boolean expression to filter rows from the table "Transitions". All fields are combined with a logical 'AND'. */
export type Transitions_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Transitions_Bool_Exp>>>;
  _not?: Maybe<Transitions_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Transitions_Bool_Exp>>>;
  broadcastContentId?: Maybe<Uuid_Comparison_Exp>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Bool_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  fallbackBroadcastContentId?: Maybe<Uuid_Comparison_Exp>;
  fallbackBroadcastContentItem?: Maybe<BroadcastContentItem_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  time?: Maybe<Timestamptz_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Transitions" */
export enum Transitions_Constraint {
  /** unique or primary key constraint */
  TransitionsPkey = 'Transitions_pkey'
}

/** input type for inserting data into table "Transitions" */
export type Transitions_Insert_Input = {
  broadcastContentId?: Maybe<Scalars['uuid']>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Obj_Rel_Insert_Input>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  fallbackBroadcastContentId?: Maybe<Scalars['uuid']>;
  fallbackBroadcastContentItem?: Maybe<BroadcastContentItem_Obj_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Transitions_Max_Fields = {
  __typename?: 'Transitions_max_fields';
  broadcastContentId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  fallbackBroadcastContentId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Transitions" */
export type Transitions_Max_Order_By = {
  broadcastContentId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  fallbackBroadcastContentId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  time?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Transitions_Min_Fields = {
  __typename?: 'Transitions_min_fields';
  broadcastContentId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  fallbackBroadcastContentId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Transitions" */
export type Transitions_Min_Order_By = {
  broadcastContentId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  fallbackBroadcastContentId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  time?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Transitions" */
export type Transitions_Mutation_Response = {
  __typename?: 'Transitions_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Transitions>;
};

/** input type for inserting object relation for remote table "Transitions" */
export type Transitions_Obj_Rel_Insert_Input = {
  data: Transitions_Insert_Input;
  on_conflict?: Maybe<Transitions_On_Conflict>;
};

/** on conflict condition type for table "Transitions" */
export type Transitions_On_Conflict = {
  constraint: Transitions_Constraint;
  update_columns: Array<Transitions_Update_Column>;
  where?: Maybe<Transitions_Bool_Exp>;
};

/** ordering options when selecting data from "Transitions" */
export type Transitions_Order_By = {
  broadcastContentId?: Maybe<Order_By>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  fallbackBroadcastContentId?: Maybe<Order_By>;
  fallbackBroadcastContentItem?: Maybe<BroadcastContentItem_Order_By>;
  id?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  time?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "Transitions" */
export type Transitions_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Transitions" */
export enum Transitions_Select_Column {
  /** column name */
  BroadcastContentId = 'broadcastContentId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  FallbackBroadcastContentId = 'fallbackBroadcastContentId',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  Time = 'time',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Transitions" */
export type Transitions_Set_Input = {
  broadcastContentId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  fallbackBroadcastContentId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  roomId?: Maybe<Scalars['uuid']>;
  time?: Maybe<Scalars['timestamptz']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "Transitions" */
export enum Transitions_Update_Column {
  /** column name */
  BroadcastContentId = 'broadcastContentId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  EventId = 'eventId',
  /** column name */
  FallbackBroadcastContentId = 'fallbackBroadcastContentId',
  /** column name */
  Id = 'id',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  Time = 'time',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type UpdateProfilePhotoResponse = {
  __typename?: 'UpdateProfilePhotoResponse';
  ok: Scalars['Boolean'];
  photoURL_350x350?: Maybe<Scalars['String']>;
  photoURL_50x50?: Maybe<Scalars['String']>;
};

/** columns and relationships of "Uploader" */
export type Uploader = {
  __typename?: 'Uploader';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  email: Scalars['String'];
  emailsSentCount: Scalars['Int'];
  id: Scalars['uuid'];
  name: Scalars['String'];
  /** An object relationship */
  requiredContentItem: RequiredContentItem;
  requiredContentItemId: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
};

export type UploaderSendSubmissionRequestResult = {
  __typename?: 'UploaderSendSubmissionRequestResult';
  sent: Scalars['Boolean'];
  uploaderId: Scalars['uuid'];
};

/** aggregated selection of "Uploader" */
export type Uploader_Aggregate = {
  __typename?: 'Uploader_aggregate';
  aggregate?: Maybe<Uploader_Aggregate_Fields>;
  nodes: Array<Uploader>;
};

/** aggregate fields of "Uploader" */
export type Uploader_Aggregate_Fields = {
  __typename?: 'Uploader_aggregate_fields';
  avg?: Maybe<Uploader_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Uploader_Max_Fields>;
  min?: Maybe<Uploader_Min_Fields>;
  stddev?: Maybe<Uploader_Stddev_Fields>;
  stddev_pop?: Maybe<Uploader_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Uploader_Stddev_Samp_Fields>;
  sum?: Maybe<Uploader_Sum_Fields>;
  var_pop?: Maybe<Uploader_Var_Pop_Fields>;
  var_samp?: Maybe<Uploader_Var_Samp_Fields>;
  variance?: Maybe<Uploader_Variance_Fields>;
};


/** aggregate fields of "Uploader" */
export type Uploader_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Uploader_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "Uploader" */
export type Uploader_Aggregate_Order_By = {
  avg?: Maybe<Uploader_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Uploader_Max_Order_By>;
  min?: Maybe<Uploader_Min_Order_By>;
  stddev?: Maybe<Uploader_Stddev_Order_By>;
  stddev_pop?: Maybe<Uploader_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Uploader_Stddev_Samp_Order_By>;
  sum?: Maybe<Uploader_Sum_Order_By>;
  var_pop?: Maybe<Uploader_Var_Pop_Order_By>;
  var_samp?: Maybe<Uploader_Var_Samp_Order_By>;
  variance?: Maybe<Uploader_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "Uploader" */
export type Uploader_Arr_Rel_Insert_Input = {
  data: Array<Uploader_Insert_Input>;
  on_conflict?: Maybe<Uploader_On_Conflict>;
};

/** aggregate avg on columns */
export type Uploader_Avg_Fields = {
  __typename?: 'Uploader_avg_fields';
  emailsSentCount?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "Uploader" */
export type Uploader_Avg_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "Uploader". All fields are combined with a logical 'AND'. */
export type Uploader_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Uploader_Bool_Exp>>>;
  _not?: Maybe<Uploader_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Uploader_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  emailsSentCount?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  requiredContentItem?: Maybe<RequiredContentItem_Bool_Exp>;
  requiredContentItemId?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "Uploader" */
export enum Uploader_Constraint {
  /** unique or primary key constraint */
  UploaderEmailRequiredContentItemIdKey = 'Uploader_email_requiredContentItemId_key',
  /** unique or primary key constraint */
  UploaderPkey = 'Uploader_pkey'
}

/** input type for incrementing integer column in table "Uploader" */
export type Uploader_Inc_Input = {
  emailsSentCount?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "Uploader" */
export type Uploader_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  emailsSentCount?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  requiredContentItem?: Maybe<RequiredContentItem_Obj_Rel_Insert_Input>;
  requiredContentItemId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Uploader_Max_Fields = {
  __typename?: 'Uploader_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  emailsSentCount?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  requiredContentItemId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "Uploader" */
export type Uploader_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  emailsSentCount?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  requiredContentItemId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Uploader_Min_Fields = {
  __typename?: 'Uploader_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  emailsSentCount?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  requiredContentItemId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "Uploader" */
export type Uploader_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  emailsSentCount?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  requiredContentItemId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "Uploader" */
export type Uploader_Mutation_Response = {
  __typename?: 'Uploader_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Uploader>;
};

/** input type for inserting object relation for remote table "Uploader" */
export type Uploader_Obj_Rel_Insert_Input = {
  data: Uploader_Insert_Input;
  on_conflict?: Maybe<Uploader_On_Conflict>;
};

/** on conflict condition type for table "Uploader" */
export type Uploader_On_Conflict = {
  constraint: Uploader_Constraint;
  update_columns: Array<Uploader_Update_Column>;
  where?: Maybe<Uploader_Bool_Exp>;
};

/** ordering options when selecting data from "Uploader" */
export type Uploader_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  emailsSentCount?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  requiredContentItem?: Maybe<RequiredContentItem_Order_By>;
  requiredContentItemId?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "Uploader" */
export type Uploader_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "Uploader" */
export enum Uploader_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Email = 'email',
  /** column name */
  EmailsSentCount = 'emailsSentCount',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RequiredContentItemId = 'requiredContentItemId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "Uploader" */
export type Uploader_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  emailsSentCount?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['uuid']>;
  name?: Maybe<Scalars['String']>;
  requiredContentItemId?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Uploader_Stddev_Fields = {
  __typename?: 'Uploader_stddev_fields';
  emailsSentCount?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "Uploader" */
export type Uploader_Stddev_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Uploader_Stddev_Pop_Fields = {
  __typename?: 'Uploader_stddev_pop_fields';
  emailsSentCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "Uploader" */
export type Uploader_Stddev_Pop_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Uploader_Stddev_Samp_Fields = {
  __typename?: 'Uploader_stddev_samp_fields';
  emailsSentCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "Uploader" */
export type Uploader_Stddev_Samp_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Uploader_Sum_Fields = {
  __typename?: 'Uploader_sum_fields';
  emailsSentCount?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "Uploader" */
export type Uploader_Sum_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** update columns of table "Uploader" */
export enum Uploader_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Email = 'email',
  /** column name */
  EmailsSentCount = 'emailsSentCount',
  /** column name */
  Id = 'id',
  /** column name */
  Name = 'name',
  /** column name */
  RequiredContentItemId = 'requiredContentItemId',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** aggregate var_pop on columns */
export type Uploader_Var_Pop_Fields = {
  __typename?: 'Uploader_var_pop_fields';
  emailsSentCount?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "Uploader" */
export type Uploader_Var_Pop_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Uploader_Var_Samp_Fields = {
  __typename?: 'Uploader_var_samp_fields';
  emailsSentCount?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "Uploader" */
export type Uploader_Var_Samp_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Uploader_Variance_Fields = {
  __typename?: 'Uploader_variance_fields';
  emailsSentCount?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "Uploader" */
export type Uploader_Variance_Order_By = {
  emailsSentCount?: Maybe<Order_By>;
};

/** columns and relationships of "User" */
export type User = {
  __typename?: 'User';
  acceptedPrivacyPolicyAt?: Maybe<Scalars['timestamptz']>;
  acceptedTermsAt?: Maybe<Scalars['timestamptz']>;
  /** An array relationship */
  attendees: Array<Attendee>;
  /** An aggregated array relationship */
  attendees_aggregate: Attendee_Aggregate;
  /** An array relationship */
  conferenceDemoCodes: Array<ConferenceDemoCode>;
  /** An aggregated array relationship */
  conferenceDemoCodes_aggregate: ConferenceDemoCode_Aggregate;
  /** An array relationship */
  conferencesCreated: Array<Conference>;
  /** An aggregated array relationship */
  conferencesCreated_aggregate: Conference_Aggregate;
  createdAt: Scalars['timestamptz'];
  email?: Maybe<Scalars['String']>;
  /** An array relationship */
  emails: Array<Email>;
  /** An aggregated array relationship */
  emails_aggregate: Email_Aggregate;
  firstName: Scalars['String'];
  id: Scalars['String'];
  /** An array relationship */
  invitationsPendingConfirmation: Array<Invitation>;
  /** An aggregated array relationship */
  invitationsPendingConfirmation_aggregate: Invitation_Aggregate;
  lastLoggedInAt?: Maybe<Scalars['timestamptz']>;
  lastName: Scalars['String'];
  /** An object relationship */
  onlineStatus?: Maybe<OnlineStatus>;
  /** An array relationship */
  pushNotificationSubscriptions: Array<PushNotificationSubscription>;
  /** An aggregated array relationship */
  pushNotificationSubscriptions_aggregate: PushNotificationSubscription_Aggregate;
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "User" */
export type UserAttendeesArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserAttendees_AggregateArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserConferenceDemoCodesArgs = {
  distinct_on?: Maybe<Array<ConferenceDemoCode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceDemoCode_Order_By>>;
  where?: Maybe<ConferenceDemoCode_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserConferenceDemoCodes_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferenceDemoCode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceDemoCode_Order_By>>;
  where?: Maybe<ConferenceDemoCode_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserConferencesCreatedArgs = {
  distinct_on?: Maybe<Array<Conference_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conference_Order_By>>;
  where?: Maybe<Conference_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserConferencesCreated_AggregateArgs = {
  distinct_on?: Maybe<Array<Conference_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conference_Order_By>>;
  where?: Maybe<Conference_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserEmailsArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserEmails_AggregateArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserInvitationsPendingConfirmationArgs = {
  distinct_on?: Maybe<Array<Invitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invitation_Order_By>>;
  where?: Maybe<Invitation_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserInvitationsPendingConfirmation_AggregateArgs = {
  distinct_on?: Maybe<Array<Invitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invitation_Order_By>>;
  where?: Maybe<Invitation_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserPushNotificationSubscriptionsArgs = {
  distinct_on?: Maybe<Array<PushNotificationSubscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<PushNotificationSubscription_Order_By>>;
  where?: Maybe<PushNotificationSubscription_Bool_Exp>;
};


/** columns and relationships of "User" */
export type UserPushNotificationSubscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<PushNotificationSubscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<PushNotificationSubscription_Order_By>>;
  where?: Maybe<PushNotificationSubscription_Bool_Exp>;
};

/** aggregated selection of "User" */
export type User_Aggregate = {
  __typename?: 'User_aggregate';
  aggregate?: Maybe<User_Aggregate_Fields>;
  nodes: Array<User>;
};

/** aggregate fields of "User" */
export type User_Aggregate_Fields = {
  __typename?: 'User_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<User_Max_Fields>;
  min?: Maybe<User_Min_Fields>;
};


/** aggregate fields of "User" */
export type User_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<User_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "User" */
export type User_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<User_Max_Order_By>;
  min?: Maybe<User_Min_Order_By>;
};

/** input type for inserting array relation for remote table "User" */
export type User_Arr_Rel_Insert_Input = {
  data: Array<User_Insert_Input>;
  on_conflict?: Maybe<User_On_Conflict>;
};

/** Boolean expression to filter rows from the table "User". All fields are combined with a logical 'AND'. */
export type User_Bool_Exp = {
  _and?: Maybe<Array<Maybe<User_Bool_Exp>>>;
  _not?: Maybe<User_Bool_Exp>;
  _or?: Maybe<Array<Maybe<User_Bool_Exp>>>;
  acceptedPrivacyPolicyAt?: Maybe<Timestamptz_Comparison_Exp>;
  acceptedTermsAt?: Maybe<Timestamptz_Comparison_Exp>;
  attendees?: Maybe<Attendee_Bool_Exp>;
  conferenceDemoCodes?: Maybe<ConferenceDemoCode_Bool_Exp>;
  conferencesCreated?: Maybe<Conference_Bool_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  email?: Maybe<String_Comparison_Exp>;
  emails?: Maybe<Email_Bool_Exp>;
  firstName?: Maybe<String_Comparison_Exp>;
  id?: Maybe<String_Comparison_Exp>;
  invitationsPendingConfirmation?: Maybe<Invitation_Bool_Exp>;
  lastLoggedInAt?: Maybe<Timestamptz_Comparison_Exp>;
  lastName?: Maybe<String_Comparison_Exp>;
  onlineStatus?: Maybe<OnlineStatus_Bool_Exp>;
  pushNotificationSubscriptions?: Maybe<PushNotificationSubscription_Bool_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "User" */
export enum User_Constraint {
  /** unique or primary key constraint */
  UserEmailKey = 'user_email_key',
  /** unique or primary key constraint */
  UserPkey = 'user_pkey'
}

/** input type for inserting data into table "User" */
export type User_Insert_Input = {
  acceptedPrivacyPolicyAt?: Maybe<Scalars['timestamptz']>;
  acceptedTermsAt?: Maybe<Scalars['timestamptz']>;
  attendees?: Maybe<Attendee_Arr_Rel_Insert_Input>;
  conferenceDemoCodes?: Maybe<ConferenceDemoCode_Arr_Rel_Insert_Input>;
  conferencesCreated?: Maybe<Conference_Arr_Rel_Insert_Input>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  emails?: Maybe<Email_Arr_Rel_Insert_Input>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  invitationsPendingConfirmation?: Maybe<Invitation_Arr_Rel_Insert_Input>;
  lastLoggedInAt?: Maybe<Scalars['timestamptz']>;
  lastName?: Maybe<Scalars['String']>;
  onlineStatus?: Maybe<OnlineStatus_Obj_Rel_Insert_Input>;
  pushNotificationSubscriptions?: Maybe<PushNotificationSubscription_Arr_Rel_Insert_Input>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type User_Max_Fields = {
  __typename?: 'User_max_fields';
  acceptedPrivacyPolicyAt?: Maybe<Scalars['timestamptz']>;
  acceptedTermsAt?: Maybe<Scalars['timestamptz']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  lastLoggedInAt?: Maybe<Scalars['timestamptz']>;
  lastName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "User" */
export type User_Max_Order_By = {
  acceptedPrivacyPolicyAt?: Maybe<Order_By>;
  acceptedTermsAt?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  firstName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastLoggedInAt?: Maybe<Order_By>;
  lastName?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type User_Min_Fields = {
  __typename?: 'User_min_fields';
  acceptedPrivacyPolicyAt?: Maybe<Scalars['timestamptz']>;
  acceptedTermsAt?: Maybe<Scalars['timestamptz']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  lastLoggedInAt?: Maybe<Scalars['timestamptz']>;
  lastName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "User" */
export type User_Min_Order_By = {
  acceptedPrivacyPolicyAt?: Maybe<Order_By>;
  acceptedTermsAt?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  firstName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  lastLoggedInAt?: Maybe<Order_By>;
  lastName?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "User" */
export type User_Mutation_Response = {
  __typename?: 'User_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<User>;
};

/** input type for inserting object relation for remote table "User" */
export type User_Obj_Rel_Insert_Input = {
  data: User_Insert_Input;
  on_conflict?: Maybe<User_On_Conflict>;
};

/** on conflict condition type for table "User" */
export type User_On_Conflict = {
  constraint: User_Constraint;
  update_columns: Array<User_Update_Column>;
  where?: Maybe<User_Bool_Exp>;
};

/** ordering options when selecting data from "User" */
export type User_Order_By = {
  acceptedPrivacyPolicyAt?: Maybe<Order_By>;
  acceptedTermsAt?: Maybe<Order_By>;
  attendees_aggregate?: Maybe<Attendee_Aggregate_Order_By>;
  conferenceDemoCodes_aggregate?: Maybe<ConferenceDemoCode_Aggregate_Order_By>;
  conferencesCreated_aggregate?: Maybe<Conference_Aggregate_Order_By>;
  createdAt?: Maybe<Order_By>;
  email?: Maybe<Order_By>;
  emails_aggregate?: Maybe<Email_Aggregate_Order_By>;
  firstName?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  invitationsPendingConfirmation_aggregate?: Maybe<Invitation_Aggregate_Order_By>;
  lastLoggedInAt?: Maybe<Order_By>;
  lastName?: Maybe<Order_By>;
  onlineStatus?: Maybe<OnlineStatus_Order_By>;
  pushNotificationSubscriptions_aggregate?: Maybe<PushNotificationSubscription_Aggregate_Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "User" */
export type User_Pk_Columns_Input = {
  id: Scalars['String'];
};

/** select columns of table "User" */
export enum User_Select_Column {
  /** column name */
  AcceptedPrivacyPolicyAt = 'acceptedPrivacyPolicyAt',
  /** column name */
  AcceptedTermsAt = 'acceptedTermsAt',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'firstName',
  /** column name */
  Id = 'id',
  /** column name */
  LastLoggedInAt = 'lastLoggedInAt',
  /** column name */
  LastName = 'lastName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "User" */
export type User_Set_Input = {
  acceptedPrivacyPolicyAt?: Maybe<Scalars['timestamptz']>;
  acceptedTermsAt?: Maybe<Scalars['timestamptz']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  email?: Maybe<Scalars['String']>;
  firstName?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  lastLoggedInAt?: Maybe<Scalars['timestamptz']>;
  lastName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "User" */
export enum User_Update_Column {
  /** column name */
  AcceptedPrivacyPolicyAt = 'acceptedPrivacyPolicyAt',
  /** column name */
  AcceptedTermsAt = 'acceptedTermsAt',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Email = 'email',
  /** column name */
  FirstName = 'firstName',
  /** column name */
  Id = 'id',
  /** column name */
  LastLoggedInAt = 'lastLoggedInAt',
  /** column name */
  LastName = 'lastName',
  /** column name */
  UpdatedAt = 'updatedAt'
}

export type VapidPublicKeyOutput = {
  __typename?: 'VAPIDPublicKeyOutput';
  key: Scalars['String'];
};

/** columns and relationships of "VideoRenderJob" */
export type VideoRenderJob = {
  __typename?: 'VideoRenderJob';
  /** An object relationship */
  broadcastContentItem: BroadcastContentItem;
  broadcastContentItemId: Scalars['uuid'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  conferencePrepareJob: ConferencePrepareJob;
  conferencePrepareJobId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  data: Scalars['jsonb'];
  id: Scalars['uuid'];
  /** An object relationship */
  jobStatus: JobStatus;
  jobStatusName: JobStatus_Enum;
  message?: Maybe<Scalars['String']>;
  retriesCount: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "VideoRenderJob" */
export type VideoRenderJobDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "VideoRenderJob" */
export type VideoRenderJob_Aggregate = {
  __typename?: 'VideoRenderJob_aggregate';
  aggregate?: Maybe<VideoRenderJob_Aggregate_Fields>;
  nodes: Array<VideoRenderJob>;
};

/** aggregate fields of "VideoRenderJob" */
export type VideoRenderJob_Aggregate_Fields = {
  __typename?: 'VideoRenderJob_aggregate_fields';
  avg?: Maybe<VideoRenderJob_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<VideoRenderJob_Max_Fields>;
  min?: Maybe<VideoRenderJob_Min_Fields>;
  stddev?: Maybe<VideoRenderJob_Stddev_Fields>;
  stddev_pop?: Maybe<VideoRenderJob_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<VideoRenderJob_Stddev_Samp_Fields>;
  sum?: Maybe<VideoRenderJob_Sum_Fields>;
  var_pop?: Maybe<VideoRenderJob_Var_Pop_Fields>;
  var_samp?: Maybe<VideoRenderJob_Var_Samp_Fields>;
  variance?: Maybe<VideoRenderJob_Variance_Fields>;
};


/** aggregate fields of "VideoRenderJob" */
export type VideoRenderJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<VideoRenderJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "VideoRenderJob" */
export type VideoRenderJob_Aggregate_Order_By = {
  avg?: Maybe<VideoRenderJob_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<VideoRenderJob_Max_Order_By>;
  min?: Maybe<VideoRenderJob_Min_Order_By>;
  stddev?: Maybe<VideoRenderJob_Stddev_Order_By>;
  stddev_pop?: Maybe<VideoRenderJob_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<VideoRenderJob_Stddev_Samp_Order_By>;
  sum?: Maybe<VideoRenderJob_Sum_Order_By>;
  var_pop?: Maybe<VideoRenderJob_Var_Pop_Order_By>;
  var_samp?: Maybe<VideoRenderJob_Var_Samp_Order_By>;
  variance?: Maybe<VideoRenderJob_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type VideoRenderJob_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "VideoRenderJob" */
export type VideoRenderJob_Arr_Rel_Insert_Input = {
  data: Array<VideoRenderJob_Insert_Input>;
  on_conflict?: Maybe<VideoRenderJob_On_Conflict>;
};

/** aggregate avg on columns */
export type VideoRenderJob_Avg_Fields = {
  __typename?: 'VideoRenderJob_avg_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Avg_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "VideoRenderJob". All fields are combined with a logical 'AND'. */
export type VideoRenderJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<VideoRenderJob_Bool_Exp>>>;
  _not?: Maybe<VideoRenderJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<VideoRenderJob_Bool_Exp>>>;
  broadcastContentItem?: Maybe<BroadcastContentItem_Bool_Exp>;
  broadcastContentItemId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  conferencePrepareJob?: Maybe<ConferencePrepareJob_Bool_Exp>;
  conferencePrepareJobId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  jobStatus?: Maybe<JobStatus_Bool_Exp>;
  jobStatusName?: Maybe<JobStatus_Enum_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  retriesCount?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "VideoRenderJob" */
export enum VideoRenderJob_Constraint {
  /** unique or primary key constraint */
  VideoRenderJobPkey = 'VideoRenderJob_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type VideoRenderJob_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type VideoRenderJob_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type VideoRenderJob_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "VideoRenderJob" */
export type VideoRenderJob_Inc_Input = {
  retriesCount?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "VideoRenderJob" */
export type VideoRenderJob_Insert_Input = {
  broadcastContentItem?: Maybe<BroadcastContentItem_Obj_Rel_Insert_Input>;
  broadcastContentItemId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  conferencePrepareJob?: Maybe<ConferencePrepareJob_Obj_Rel_Insert_Input>;
  conferencePrepareJobId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatus?: Maybe<JobStatus_Obj_Rel_Insert_Input>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type VideoRenderJob_Max_Fields = {
  __typename?: 'VideoRenderJob_max_fields';
  broadcastContentItemId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  conferencePrepareJobId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Max_Order_By = {
  broadcastContentItemId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  conferencePrepareJobId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type VideoRenderJob_Min_Fields = {
  __typename?: 'VideoRenderJob_min_fields';
  broadcastContentItemId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  conferencePrepareJobId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Min_Order_By = {
  broadcastContentItemId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  conferencePrepareJobId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "VideoRenderJob" */
export type VideoRenderJob_Mutation_Response = {
  __typename?: 'VideoRenderJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<VideoRenderJob>;
};

/** input type for inserting object relation for remote table "VideoRenderJob" */
export type VideoRenderJob_Obj_Rel_Insert_Input = {
  data: VideoRenderJob_Insert_Input;
  on_conflict?: Maybe<VideoRenderJob_On_Conflict>;
};

/** on conflict condition type for table "VideoRenderJob" */
export type VideoRenderJob_On_Conflict = {
  constraint: VideoRenderJob_Constraint;
  update_columns: Array<VideoRenderJob_Update_Column>;
  where?: Maybe<VideoRenderJob_Bool_Exp>;
};

/** ordering options when selecting data from "VideoRenderJob" */
export type VideoRenderJob_Order_By = {
  broadcastContentItem?: Maybe<BroadcastContentItem_Order_By>;
  broadcastContentItemId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  conferencePrepareJob?: Maybe<ConferencePrepareJob_Order_By>;
  conferencePrepareJobId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatus?: Maybe<JobStatus_Order_By>;
  jobStatusName?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "VideoRenderJob" */
export type VideoRenderJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type VideoRenderJob_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "VideoRenderJob" */
export enum VideoRenderJob_Select_Column {
  /** column name */
  BroadcastContentItemId = 'broadcastContentItemId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ConferencePrepareJobId = 'conferencePrepareJobId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  RetriesCount = 'retriesCount',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "VideoRenderJob" */
export type VideoRenderJob_Set_Input = {
  broadcastContentItemId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  conferencePrepareJobId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type VideoRenderJob_Stddev_Fields = {
  __typename?: 'VideoRenderJob_stddev_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Stddev_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type VideoRenderJob_Stddev_Pop_Fields = {
  __typename?: 'VideoRenderJob_stddev_pop_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Stddev_Pop_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type VideoRenderJob_Stddev_Samp_Fields = {
  __typename?: 'VideoRenderJob_stddev_samp_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Stddev_Samp_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type VideoRenderJob_Sum_Fields = {
  __typename?: 'VideoRenderJob_sum_fields';
  retriesCount?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Sum_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** update columns of table "VideoRenderJob" */
export enum VideoRenderJob_Update_Column {
  /** column name */
  BroadcastContentItemId = 'broadcastContentItemId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ConferencePrepareJobId = 'conferencePrepareJobId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  RetriesCount = 'retriesCount',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type VideoRenderJob_Var_Pop_Fields = {
  __typename?: 'VideoRenderJob_var_pop_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Var_Pop_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type VideoRenderJob_Var_Samp_Fields = {
  __typename?: 'VideoRenderJob_var_samp_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Var_Samp_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type VideoRenderJob_Variance_Fields = {
  __typename?: 'VideoRenderJob_variance_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "VideoRenderJob" */
export type VideoRenderJob_Variance_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** columns and relationships of "YouTubeUpload" */
export type YouTubeUpload = {
  __typename?: 'YouTubeUpload';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentItem?: Maybe<ContentItem>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  updatedAt: Scalars['timestamptz'];
  uploadYouTubeVideoJobId?: Maybe<Scalars['uuid']>;
  videoId: Scalars['String'];
  videoPrivacyStatus: Scalars['String'];
  videoStatus: Scalars['String'];
  videoTitle: Scalars['String'];
};

/** aggregated selection of "YouTubeUpload" */
export type YouTubeUpload_Aggregate = {
  __typename?: 'YouTubeUpload_aggregate';
  aggregate?: Maybe<YouTubeUpload_Aggregate_Fields>;
  nodes: Array<YouTubeUpload>;
};

/** aggregate fields of "YouTubeUpload" */
export type YouTubeUpload_Aggregate_Fields = {
  __typename?: 'YouTubeUpload_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<YouTubeUpload_Max_Fields>;
  min?: Maybe<YouTubeUpload_Min_Fields>;
};


/** aggregate fields of "YouTubeUpload" */
export type YouTubeUpload_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<YouTubeUpload_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "YouTubeUpload" */
export type YouTubeUpload_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<YouTubeUpload_Max_Order_By>;
  min?: Maybe<YouTubeUpload_Min_Order_By>;
};

/** input type for inserting array relation for remote table "YouTubeUpload" */
export type YouTubeUpload_Arr_Rel_Insert_Input = {
  data: Array<YouTubeUpload_Insert_Input>;
  on_conflict?: Maybe<YouTubeUpload_On_Conflict>;
};

/** Boolean expression to filter rows from the table "YouTubeUpload". All fields are combined with a logical 'AND'. */
export type YouTubeUpload_Bool_Exp = {
  _and?: Maybe<Array<Maybe<YouTubeUpload_Bool_Exp>>>;
  _not?: Maybe<YouTubeUpload_Bool_Exp>;
  _or?: Maybe<Array<Maybe<YouTubeUpload_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentItem?: Maybe<ContentItem_Bool_Exp>;
  contentItemId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  uploadYouTubeVideoJobId?: Maybe<Uuid_Comparison_Exp>;
  videoId?: Maybe<String_Comparison_Exp>;
  videoPrivacyStatus?: Maybe<String_Comparison_Exp>;
  videoStatus?: Maybe<String_Comparison_Exp>;
  videoTitle?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "YouTubeUpload" */
export enum YouTubeUpload_Constraint {
  /** unique or primary key constraint */
  YouTubeUploadPkey = 'YouTubeUpload_pkey',
  /** unique or primary key constraint */
  YouTubeUploadVideoIdKey = 'YouTubeUpload_videoId_key'
}

/** input type for inserting data into table "YouTubeUpload" */
export type YouTubeUpload_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItem?: Maybe<ContentItem_Obj_Rel_Insert_Input>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploadYouTubeVideoJobId?: Maybe<Scalars['uuid']>;
  videoId?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type YouTubeUpload_Max_Fields = {
  __typename?: 'YouTubeUpload_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploadYouTubeVideoJobId?: Maybe<Scalars['uuid']>;
  videoId?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "YouTubeUpload" */
export type YouTubeUpload_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  uploadYouTubeVideoJobId?: Maybe<Order_By>;
  videoId?: Maybe<Order_By>;
  videoPrivacyStatus?: Maybe<Order_By>;
  videoStatus?: Maybe<Order_By>;
  videoTitle?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type YouTubeUpload_Min_Fields = {
  __typename?: 'YouTubeUpload_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploadYouTubeVideoJobId?: Maybe<Scalars['uuid']>;
  videoId?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "YouTubeUpload" */
export type YouTubeUpload_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  uploadYouTubeVideoJobId?: Maybe<Order_By>;
  videoId?: Maybe<Order_By>;
  videoPrivacyStatus?: Maybe<Order_By>;
  videoStatus?: Maybe<Order_By>;
  videoTitle?: Maybe<Order_By>;
};

/** response of any mutation on the table "YouTubeUpload" */
export type YouTubeUpload_Mutation_Response = {
  __typename?: 'YouTubeUpload_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<YouTubeUpload>;
};

/** input type for inserting object relation for remote table "YouTubeUpload" */
export type YouTubeUpload_Obj_Rel_Insert_Input = {
  data: YouTubeUpload_Insert_Input;
  on_conflict?: Maybe<YouTubeUpload_On_Conflict>;
};

/** on conflict condition type for table "YouTubeUpload" */
export type YouTubeUpload_On_Conflict = {
  constraint: YouTubeUpload_Constraint;
  update_columns: Array<YouTubeUpload_Update_Column>;
  where?: Maybe<YouTubeUpload_Bool_Exp>;
};

/** ordering options when selecting data from "YouTubeUpload" */
export type YouTubeUpload_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentItem?: Maybe<ContentItem_Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  uploadYouTubeVideoJobId?: Maybe<Order_By>;
  videoId?: Maybe<Order_By>;
  videoPrivacyStatus?: Maybe<Order_By>;
  videoStatus?: Maybe<Order_By>;
  videoTitle?: Maybe<Order_By>;
};

/** primary key columns input for table: "YouTubeUpload" */
export type YouTubeUpload_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "YouTubeUpload" */
export enum YouTubeUpload_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UploadYouTubeVideoJobId = 'uploadYouTubeVideoJobId',
  /** column name */
  VideoId = 'videoId',
  /** column name */
  VideoPrivacyStatus = 'videoPrivacyStatus',
  /** column name */
  VideoStatus = 'videoStatus',
  /** column name */
  VideoTitle = 'videoTitle'
}

/** input type for updating data in table "YouTubeUpload" */
export type YouTubeUpload_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  uploadYouTubeVideoJobId?: Maybe<Scalars['uuid']>;
  videoId?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** update columns of table "YouTubeUpload" */
export enum YouTubeUpload_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  UploadYouTubeVideoJobId = 'uploadYouTubeVideoJobId',
  /** column name */
  VideoId = 'videoId',
  /** column name */
  VideoPrivacyStatus = 'videoPrivacyStatus',
  /** column name */
  VideoStatus = 'videoStatus',
  /** column name */
  VideoTitle = 'videoTitle'
}

/** columns and relationships of "analytics.AppStats" */
export type Analytics_AppStats = {
  __typename?: 'analytics_AppStats';
  created_at: Scalars['timestamptz'];
  id: Scalars['Int'];
  pages?: Maybe<Scalars['jsonb']>;
  total_unique_tabs: Scalars['Int'];
  total_unique_user_ids: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "analytics.AppStats" */
export type Analytics_AppStatsPagesArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate = {
  __typename?: 'analytics_AppStats_aggregate';
  aggregate?: Maybe<Analytics_AppStats_Aggregate_Fields>;
  nodes: Array<Analytics_AppStats>;
};

/** aggregate fields of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate_Fields = {
  __typename?: 'analytics_AppStats_aggregate_fields';
  avg?: Maybe<Analytics_AppStats_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Analytics_AppStats_Max_Fields>;
  min?: Maybe<Analytics_AppStats_Min_Fields>;
  stddev?: Maybe<Analytics_AppStats_Stddev_Fields>;
  stddev_pop?: Maybe<Analytics_AppStats_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Analytics_AppStats_Stddev_Samp_Fields>;
  sum?: Maybe<Analytics_AppStats_Sum_Fields>;
  var_pop?: Maybe<Analytics_AppStats_Var_Pop_Fields>;
  var_samp?: Maybe<Analytics_AppStats_Var_Samp_Fields>;
  variance?: Maybe<Analytics_AppStats_Variance_Fields>;
};


/** aggregate fields of "analytics.AppStats" */
export type Analytics_AppStats_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Analytics_AppStats_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "analytics.AppStats" */
export type Analytics_AppStats_Aggregate_Order_By = {
  avg?: Maybe<Analytics_AppStats_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Analytics_AppStats_Max_Order_By>;
  min?: Maybe<Analytics_AppStats_Min_Order_By>;
  stddev?: Maybe<Analytics_AppStats_Stddev_Order_By>;
  stddev_pop?: Maybe<Analytics_AppStats_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Analytics_AppStats_Stddev_Samp_Order_By>;
  sum?: Maybe<Analytics_AppStats_Sum_Order_By>;
  var_pop?: Maybe<Analytics_AppStats_Var_Pop_Order_By>;
  var_samp?: Maybe<Analytics_AppStats_Var_Samp_Order_By>;
  variance?: Maybe<Analytics_AppStats_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Analytics_AppStats_Append_Input = {
  pages?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "analytics.AppStats" */
export type Analytics_AppStats_Arr_Rel_Insert_Input = {
  data: Array<Analytics_AppStats_Insert_Input>;
  on_conflict?: Maybe<Analytics_AppStats_On_Conflict>;
};

/** aggregate avg on columns */
export type Analytics_AppStats_Avg_Fields = {
  __typename?: 'analytics_AppStats_avg_fields';
  id?: Maybe<Scalars['Float']>;
  total_unique_tabs?: Maybe<Scalars['Float']>;
  total_unique_user_ids?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Avg_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "analytics.AppStats". All fields are combined with a logical 'AND'. */
export type Analytics_AppStats_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Analytics_AppStats_Bool_Exp>>>;
  _not?: Maybe<Analytics_AppStats_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Analytics_AppStats_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  pages?: Maybe<Jsonb_Comparison_Exp>;
  total_unique_tabs?: Maybe<Int_Comparison_Exp>;
  total_unique_user_ids?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "analytics.AppStats" */
export enum Analytics_AppStats_Constraint {
  /** unique or primary key constraint */
  AppStatsPkey = 'AppStats_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Analytics_AppStats_Delete_At_Path_Input = {
  pages?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Analytics_AppStats_Delete_Elem_Input = {
  pages?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Analytics_AppStats_Delete_Key_Input = {
  pages?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "analytics.AppStats" */
export type Analytics_AppStats_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
  total_unique_tabs?: Maybe<Scalars['Int']>;
  total_unique_user_ids?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "analytics.AppStats" */
export type Analytics_AppStats_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  pages?: Maybe<Scalars['jsonb']>;
  total_unique_tabs?: Maybe<Scalars['Int']>;
  total_unique_user_ids?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Analytics_AppStats_Max_Fields = {
  __typename?: 'analytics_AppStats_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  total_unique_tabs?: Maybe<Scalars['Int']>;
  total_unique_user_ids?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Analytics_AppStats_Min_Fields = {
  __typename?: 'analytics_AppStats_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  total_unique_tabs?: Maybe<Scalars['Int']>;
  total_unique_user_ids?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "analytics.AppStats" */
export type Analytics_AppStats_Mutation_Response = {
  __typename?: 'analytics_AppStats_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Analytics_AppStats>;
};

/** input type for inserting object relation for remote table "analytics.AppStats" */
export type Analytics_AppStats_Obj_Rel_Insert_Input = {
  data: Analytics_AppStats_Insert_Input;
  on_conflict?: Maybe<Analytics_AppStats_On_Conflict>;
};

/** on conflict condition type for table "analytics.AppStats" */
export type Analytics_AppStats_On_Conflict = {
  constraint: Analytics_AppStats_Constraint;
  update_columns: Array<Analytics_AppStats_Update_Column>;
  where?: Maybe<Analytics_AppStats_Bool_Exp>;
};

/** ordering options when selecting data from "analytics.AppStats" */
export type Analytics_AppStats_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  pages?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "analytics.AppStats" */
export type Analytics_AppStats_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Analytics_AppStats_Prepend_Input = {
  pages?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "analytics.AppStats" */
export enum Analytics_AppStats_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Pages = 'pages',
  /** column name */
  TotalUniqueTabs = 'total_unique_tabs',
  /** column name */
  TotalUniqueUserIds = 'total_unique_user_ids',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "analytics.AppStats" */
export type Analytics_AppStats_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['Int']>;
  pages?: Maybe<Scalars['jsonb']>;
  total_unique_tabs?: Maybe<Scalars['Int']>;
  total_unique_user_ids?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Analytics_AppStats_Stddev_Fields = {
  __typename?: 'analytics_AppStats_stddev_fields';
  id?: Maybe<Scalars['Float']>;
  total_unique_tabs?: Maybe<Scalars['Float']>;
  total_unique_user_ids?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Stddev_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Analytics_AppStats_Stddev_Pop_Fields = {
  __typename?: 'analytics_AppStats_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
  total_unique_tabs?: Maybe<Scalars['Float']>;
  total_unique_user_ids?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Analytics_AppStats_Stddev_Samp_Fields = {
  __typename?: 'analytics_AppStats_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
  total_unique_tabs?: Maybe<Scalars['Float']>;
  total_unique_user_ids?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Analytics_AppStats_Sum_Fields = {
  __typename?: 'analytics_AppStats_sum_fields';
  id?: Maybe<Scalars['Int']>;
  total_unique_tabs?: Maybe<Scalars['Int']>;
  total_unique_user_ids?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Sum_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};

/** update columns of table "analytics.AppStats" */
export enum Analytics_AppStats_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  Pages = 'pages',
  /** column name */
  TotalUniqueTabs = 'total_unique_tabs',
  /** column name */
  TotalUniqueUserIds = 'total_unique_user_ids',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Analytics_AppStats_Var_Pop_Fields = {
  __typename?: 'analytics_AppStats_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
  total_unique_tabs?: Maybe<Scalars['Float']>;
  total_unique_user_ids?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Analytics_AppStats_Var_Samp_Fields = {
  __typename?: 'analytics_AppStats_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
  total_unique_tabs?: Maybe<Scalars['Float']>;
  total_unique_user_ids?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Analytics_AppStats_Variance_Fields = {
  __typename?: 'analytics_AppStats_variance_fields';
  id?: Maybe<Scalars['Float']>;
  total_unique_tabs?: Maybe<Scalars['Float']>;
  total_unique_user_ids?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "analytics.AppStats" */
export type Analytics_AppStats_Variance_Order_By = {
  id?: Maybe<Order_By>;
  total_unique_tabs?: Maybe<Order_By>;
  total_unique_user_ids?: Maybe<Order_By>;
};


/** expression to compare columns of type bigint. All fields are combined with logical 'AND'. */
export type Bigint_Comparison_Exp = {
  _eq?: Maybe<Scalars['bigint']>;
  _gt?: Maybe<Scalars['bigint']>;
  _gte?: Maybe<Scalars['bigint']>;
  _in?: Maybe<Array<Scalars['bigint']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['bigint']>;
  _lte?: Maybe<Scalars['bigint']>;
  _neq?: Maybe<Scalars['bigint']>;
  _nin?: Maybe<Array<Scalars['bigint']>>;
};

/** columns and relationships of "chat.Chat" */
export type Chat_Chat = {
  __typename?: 'chat_Chat';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An array relationship */
  contentGroup: Array<ContentGroup>;
  /** An aggregated array relationship */
  contentGroup_aggregate: ContentGroup_Aggregate;
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  duplicateTo?: Maybe<Chat_Chat>;
  duplicateToId?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  duplicatesFrom: Array<Chat_Chat>;
  /** An aggregated array relationship */
  duplicatesFrom_aggregate: Chat_Chat_Aggregate;
  enableAutoPin: Scalars['Boolean'];
  enableAutoSubscribe: Scalars['Boolean'];
  enableMandatoryPin: Scalars['Boolean'];
  enableMandatorySubscribe: Scalars['Boolean'];
  /** An array relationship */
  flags: Array<Chat_Flag>;
  /** An aggregated array relationship */
  flags_aggregate: Chat_Flag_Aggregate;
  id: Scalars['uuid'];
  /** An array relationship */
  messages: Array<Chat_Message>;
  /** An aggregated array relationship */
  messages_aggregate: Chat_Message_Aggregate;
  /** An array relationship */
  pins: Array<Chat_Pin>;
  /** An aggregated array relationship */
  pins_aggregate: Chat_Pin_Aggregate;
  /** An array relationship */
  readUpToIndices: Array<Chat_ReadUpToIndex>;
  /** An aggregated array relationship */
  readUpToIndices_aggregate: Chat_ReadUpToIndex_Aggregate;
  remoteServiceId?: Maybe<Scalars['String']>;
  restrictToAdmins: Scalars['Boolean'];
  /** An array relationship */
  room: Array<Room>;
  /** An aggregated array relationship */
  room_aggregate: Room_Aggregate;
  /** An array relationship */
  subscriptions: Array<Chat_Subscription>;
  /** An aggregated array relationship */
  subscriptions_aggregate: Chat_Subscription_Aggregate;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatContentGroupArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatContentGroup_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatDuplicatesFromArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatDuplicatesFrom_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatFlagsArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatFlags_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatMessagesArgs = {
  distinct_on?: Maybe<Array<Chat_Message_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Message_Order_By>>;
  where?: Maybe<Chat_Message_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatMessages_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Message_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Message_Order_By>>;
  where?: Maybe<Chat_Message_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatPinsArgs = {
  distinct_on?: Maybe<Array<Chat_Pin_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Pin_Order_By>>;
  where?: Maybe<Chat_Pin_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatPins_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Pin_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Pin_Order_By>>;
  where?: Maybe<Chat_Pin_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatReadUpToIndicesArgs = {
  distinct_on?: Maybe<Array<Chat_ReadUpToIndex_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReadUpToIndex_Order_By>>;
  where?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatReadUpToIndices_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_ReadUpToIndex_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReadUpToIndex_Order_By>>;
  where?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatRoomArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatRoom_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatSubscriptionsArgs = {
  distinct_on?: Maybe<Array<Chat_Subscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Subscription_Order_By>>;
  where?: Maybe<Chat_Subscription_Bool_Exp>;
};


/** columns and relationships of "chat.Chat" */
export type Chat_ChatSubscriptions_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Subscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Subscription_Order_By>>;
  where?: Maybe<Chat_Subscription_Bool_Exp>;
};

/** aggregated selection of "chat.Chat" */
export type Chat_Chat_Aggregate = {
  __typename?: 'chat_Chat_aggregate';
  aggregate?: Maybe<Chat_Chat_Aggregate_Fields>;
  nodes: Array<Chat_Chat>;
};

/** aggregate fields of "chat.Chat" */
export type Chat_Chat_Aggregate_Fields = {
  __typename?: 'chat_Chat_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_Chat_Max_Fields>;
  min?: Maybe<Chat_Chat_Min_Fields>;
};


/** aggregate fields of "chat.Chat" */
export type Chat_Chat_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_Chat_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.Chat" */
export type Chat_Chat_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_Chat_Max_Order_By>;
  min?: Maybe<Chat_Chat_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Chat" */
export type Chat_Chat_Arr_Rel_Insert_Input = {
  data: Array<Chat_Chat_Insert_Input>;
  on_conflict?: Maybe<Chat_Chat_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Chat". All fields are combined with a logical 'AND'. */
export type Chat_Chat_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_Chat_Bool_Exp>>>;
  _not?: Maybe<Chat_Chat_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_Chat_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentGroup?: Maybe<ContentGroup_Bool_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  duplicateTo?: Maybe<Chat_Chat_Bool_Exp>;
  duplicateToId?: Maybe<Uuid_Comparison_Exp>;
  duplicatesFrom?: Maybe<Chat_Chat_Bool_Exp>;
  enableAutoPin?: Maybe<Boolean_Comparison_Exp>;
  enableAutoSubscribe?: Maybe<Boolean_Comparison_Exp>;
  enableMandatoryPin?: Maybe<Boolean_Comparison_Exp>;
  enableMandatorySubscribe?: Maybe<Boolean_Comparison_Exp>;
  flags?: Maybe<Chat_Flag_Bool_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  messages?: Maybe<Chat_Message_Bool_Exp>;
  pins?: Maybe<Chat_Pin_Bool_Exp>;
  readUpToIndices?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
  remoteServiceId?: Maybe<String_Comparison_Exp>;
  restrictToAdmins?: Maybe<Boolean_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  subscriptions?: Maybe<Chat_Subscription_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Chat" */
export enum Chat_Chat_Constraint {
  /** unique or primary key constraint */
  ChatPkey = 'Chat_pkey'
}

/** input type for inserting data into table "chat.Chat" */
export type Chat_Chat_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentGroup?: Maybe<ContentGroup_Arr_Rel_Insert_Input>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicateTo?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  duplicateToId?: Maybe<Scalars['uuid']>;
  duplicatesFrom?: Maybe<Chat_Chat_Arr_Rel_Insert_Input>;
  enableAutoPin?: Maybe<Scalars['Boolean']>;
  enableAutoSubscribe?: Maybe<Scalars['Boolean']>;
  enableMandatoryPin?: Maybe<Scalars['Boolean']>;
  enableMandatorySubscribe?: Maybe<Scalars['Boolean']>;
  flags?: Maybe<Chat_Flag_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['uuid']>;
  messages?: Maybe<Chat_Message_Arr_Rel_Insert_Input>;
  pins?: Maybe<Chat_Pin_Arr_Rel_Insert_Input>;
  readUpToIndices?: Maybe<Chat_ReadUpToIndex_Arr_Rel_Insert_Input>;
  remoteServiceId?: Maybe<Scalars['String']>;
  restrictToAdmins?: Maybe<Scalars['Boolean']>;
  room?: Maybe<Room_Arr_Rel_Insert_Input>;
  subscriptions?: Maybe<Chat_Subscription_Arr_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Chat_Chat_Max_Fields = {
  __typename?: 'chat_Chat_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicateToId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  remoteServiceId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chat.Chat" */
export type Chat_Chat_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  duplicateToId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  remoteServiceId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Chat_Min_Fields = {
  __typename?: 'chat_Chat_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicateToId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  remoteServiceId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chat.Chat" */
export type Chat_Chat_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  duplicateToId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  remoteServiceId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.Chat" */
export type Chat_Chat_Mutation_Response = {
  __typename?: 'chat_Chat_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_Chat>;
};

/** input type for inserting object relation for remote table "chat.Chat" */
export type Chat_Chat_Obj_Rel_Insert_Input = {
  data: Chat_Chat_Insert_Input;
  on_conflict?: Maybe<Chat_Chat_On_Conflict>;
};

/** on conflict condition type for table "chat.Chat" */
export type Chat_Chat_On_Conflict = {
  constraint: Chat_Chat_Constraint;
  update_columns: Array<Chat_Chat_Update_Column>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};

/** ordering options when selecting data from "chat.Chat" */
export type Chat_Chat_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentGroup_aggregate?: Maybe<ContentGroup_Aggregate_Order_By>;
  created_at?: Maybe<Order_By>;
  duplicateTo?: Maybe<Chat_Chat_Order_By>;
  duplicateToId?: Maybe<Order_By>;
  duplicatesFrom_aggregate?: Maybe<Chat_Chat_Aggregate_Order_By>;
  enableAutoPin?: Maybe<Order_By>;
  enableAutoSubscribe?: Maybe<Order_By>;
  enableMandatoryPin?: Maybe<Order_By>;
  enableMandatorySubscribe?: Maybe<Order_By>;
  flags_aggregate?: Maybe<Chat_Flag_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  messages_aggregate?: Maybe<Chat_Message_Aggregate_Order_By>;
  pins_aggregate?: Maybe<Chat_Pin_Aggregate_Order_By>;
  readUpToIndices_aggregate?: Maybe<Chat_ReadUpToIndex_Aggregate_Order_By>;
  remoteServiceId?: Maybe<Order_By>;
  restrictToAdmins?: Maybe<Order_By>;
  room_aggregate?: Maybe<Room_Aggregate_Order_By>;
  subscriptions_aggregate?: Maybe<Chat_Subscription_Aggregate_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.Chat" */
export type Chat_Chat_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "chat.Chat" */
export enum Chat_Chat_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DuplicateToId = 'duplicateToId',
  /** column name */
  EnableAutoPin = 'enableAutoPin',
  /** column name */
  EnableAutoSubscribe = 'enableAutoSubscribe',
  /** column name */
  EnableMandatoryPin = 'enableMandatoryPin',
  /** column name */
  EnableMandatorySubscribe = 'enableMandatorySubscribe',
  /** column name */
  Id = 'id',
  /** column name */
  RemoteServiceId = 'remoteServiceId',
  /** column name */
  RestrictToAdmins = 'restrictToAdmins',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "chat.Chat" */
export type Chat_Chat_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicateToId?: Maybe<Scalars['uuid']>;
  enableAutoPin?: Maybe<Scalars['Boolean']>;
  enableAutoSubscribe?: Maybe<Scalars['Boolean']>;
  enableMandatoryPin?: Maybe<Scalars['Boolean']>;
  enableMandatorySubscribe?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['uuid']>;
  remoteServiceId?: Maybe<Scalars['String']>;
  restrictToAdmins?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "chat.Chat" */
export enum Chat_Chat_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DuplicateToId = 'duplicateToId',
  /** column name */
  EnableAutoPin = 'enableAutoPin',
  /** column name */
  EnableAutoSubscribe = 'enableAutoSubscribe',
  /** column name */
  EnableMandatoryPin = 'enableMandatoryPin',
  /** column name */
  EnableMandatorySubscribe = 'enableMandatorySubscribe',
  /** column name */
  Id = 'id',
  /** column name */
  RemoteServiceId = 'remoteServiceId',
  /** column name */
  RestrictToAdmins = 'restrictToAdmins',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "chat.Flag" */
export type Chat_Flag = {
  __typename?: 'chat_Flag';
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  discussionChat?: Maybe<Chat_Chat>;
  discussionChatId?: Maybe<Scalars['uuid']>;
  /** An object relationship */
  flaggedBy?: Maybe<Attendee>;
  flaggedById?: Maybe<Scalars['uuid']>;
  id: Scalars['Int'];
  /** An object relationship */
  message: Chat_Message;
  messageSId: Scalars['uuid'];
  notes?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  resolved_at?: Maybe<Scalars['timestamptz']>;
  type: Chat_FlagType_Enum;
  updated_at: Scalars['timestamptz'];
};

/** columns and relationships of "chat.FlagType" */
export type Chat_FlagType = {
  __typename?: 'chat_FlagType';
  description: Scalars['String'];
  name: Scalars['String'];
};

/** aggregated selection of "chat.FlagType" */
export type Chat_FlagType_Aggregate = {
  __typename?: 'chat_FlagType_aggregate';
  aggregate?: Maybe<Chat_FlagType_Aggregate_Fields>;
  nodes: Array<Chat_FlagType>;
};

/** aggregate fields of "chat.FlagType" */
export type Chat_FlagType_Aggregate_Fields = {
  __typename?: 'chat_FlagType_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_FlagType_Max_Fields>;
  min?: Maybe<Chat_FlagType_Min_Fields>;
};


/** aggregate fields of "chat.FlagType" */
export type Chat_FlagType_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_FlagType_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.FlagType" */
export type Chat_FlagType_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_FlagType_Max_Order_By>;
  min?: Maybe<Chat_FlagType_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.FlagType" */
export type Chat_FlagType_Arr_Rel_Insert_Input = {
  data: Array<Chat_FlagType_Insert_Input>;
  on_conflict?: Maybe<Chat_FlagType_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.FlagType". All fields are combined with a logical 'AND'. */
export type Chat_FlagType_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_FlagType_Bool_Exp>>>;
  _not?: Maybe<Chat_FlagType_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_FlagType_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.FlagType" */
export enum Chat_FlagType_Constraint {
  /** unique or primary key constraint */
  FlagTypePkey = 'FlagType_pkey'
}

export enum Chat_FlagType_Enum {
  /** It's abusive or harmful. */
  Abusive = 'Abusive',
  /** It contains false information and is intended to mislead readers. */
  Disinformation = 'Disinformation',
  /** It gives the wrong idea or impression. */
  Misleading = 'Misleading',
  /** It expresses intentions of self-harm or suicide. */
  RiskToLife = 'Risk_To_Life',
  /** It's spam, suspicious or annoying. */
  Spam = 'Spam'
}

/** expression to compare columns of type chat_FlagType_enum. All fields are combined with logical 'AND'. */
export type Chat_FlagType_Enum_Comparison_Exp = {
  _eq?: Maybe<Chat_FlagType_Enum>;
  _in?: Maybe<Array<Chat_FlagType_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Chat_FlagType_Enum>;
  _nin?: Maybe<Array<Chat_FlagType_Enum>>;
};

/** input type for inserting data into table "chat.FlagType" */
export type Chat_FlagType_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Chat_FlagType_Max_Fields = {
  __typename?: 'chat_FlagType_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "chat.FlagType" */
export type Chat_FlagType_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_FlagType_Min_Fields = {
  __typename?: 'chat_FlagType_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "chat.FlagType" */
export type Chat_FlagType_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.FlagType" */
export type Chat_FlagType_Mutation_Response = {
  __typename?: 'chat_FlagType_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_FlagType>;
};

/** input type for inserting object relation for remote table "chat.FlagType" */
export type Chat_FlagType_Obj_Rel_Insert_Input = {
  data: Chat_FlagType_Insert_Input;
  on_conflict?: Maybe<Chat_FlagType_On_Conflict>;
};

/** on conflict condition type for table "chat.FlagType" */
export type Chat_FlagType_On_Conflict = {
  constraint: Chat_FlagType_Constraint;
  update_columns: Array<Chat_FlagType_Update_Column>;
  where?: Maybe<Chat_FlagType_Bool_Exp>;
};

/** ordering options when selecting data from "chat.FlagType" */
export type Chat_FlagType_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.FlagType" */
export type Chat_FlagType_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "chat.FlagType" */
export enum Chat_FlagType_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "chat.FlagType" */
export type Chat_FlagType_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "chat.FlagType" */
export enum Chat_FlagType_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** aggregated selection of "chat.Flag" */
export type Chat_Flag_Aggregate = {
  __typename?: 'chat_Flag_aggregate';
  aggregate?: Maybe<Chat_Flag_Aggregate_Fields>;
  nodes: Array<Chat_Flag>;
};

/** aggregate fields of "chat.Flag" */
export type Chat_Flag_Aggregate_Fields = {
  __typename?: 'chat_Flag_aggregate_fields';
  avg?: Maybe<Chat_Flag_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_Flag_Max_Fields>;
  min?: Maybe<Chat_Flag_Min_Fields>;
  stddev?: Maybe<Chat_Flag_Stddev_Fields>;
  stddev_pop?: Maybe<Chat_Flag_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Chat_Flag_Stddev_Samp_Fields>;
  sum?: Maybe<Chat_Flag_Sum_Fields>;
  var_pop?: Maybe<Chat_Flag_Var_Pop_Fields>;
  var_samp?: Maybe<Chat_Flag_Var_Samp_Fields>;
  variance?: Maybe<Chat_Flag_Variance_Fields>;
};


/** aggregate fields of "chat.Flag" */
export type Chat_Flag_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_Flag_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.Flag" */
export type Chat_Flag_Aggregate_Order_By = {
  avg?: Maybe<Chat_Flag_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_Flag_Max_Order_By>;
  min?: Maybe<Chat_Flag_Min_Order_By>;
  stddev?: Maybe<Chat_Flag_Stddev_Order_By>;
  stddev_pop?: Maybe<Chat_Flag_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Chat_Flag_Stddev_Samp_Order_By>;
  sum?: Maybe<Chat_Flag_Sum_Order_By>;
  var_pop?: Maybe<Chat_Flag_Var_Pop_Order_By>;
  var_samp?: Maybe<Chat_Flag_Var_Samp_Order_By>;
  variance?: Maybe<Chat_Flag_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Flag" */
export type Chat_Flag_Arr_Rel_Insert_Input = {
  data: Array<Chat_Flag_Insert_Input>;
  on_conflict?: Maybe<Chat_Flag_On_Conflict>;
};

/** aggregate avg on columns */
export type Chat_Flag_Avg_Fields = {
  __typename?: 'chat_Flag_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "chat.Flag" */
export type Chat_Flag_Avg_Order_By = {
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chat.Flag". All fields are combined with a logical 'AND'. */
export type Chat_Flag_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_Flag_Bool_Exp>>>;
  _not?: Maybe<Chat_Flag_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_Flag_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  discussionChat?: Maybe<Chat_Chat_Bool_Exp>;
  discussionChatId?: Maybe<Uuid_Comparison_Exp>;
  flaggedBy?: Maybe<Attendee_Bool_Exp>;
  flaggedById?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  message?: Maybe<Chat_Message_Bool_Exp>;
  messageSId?: Maybe<Uuid_Comparison_Exp>;
  notes?: Maybe<String_Comparison_Exp>;
  resolution?: Maybe<String_Comparison_Exp>;
  resolved_at?: Maybe<Timestamptz_Comparison_Exp>;
  type?: Maybe<Chat_FlagType_Enum_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Flag" */
export enum Chat_Flag_Constraint {
  /** unique or primary key constraint */
  FlagMessageSIdFlaggedByIdTypeKey = 'Flag_messageSId_flaggedById_type_key',
  /** unique or primary key constraint */
  FlagPkey = 'Flag_pkey'
}

/** input type for incrementing integer column in table "chat.Flag" */
export type Chat_Flag_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "chat.Flag" */
export type Chat_Flag_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  discussionChat?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  discussionChatId?: Maybe<Scalars['uuid']>;
  flaggedBy?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  flaggedById?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  message?: Maybe<Chat_Message_Obj_Rel_Insert_Input>;
  messageSId?: Maybe<Scalars['uuid']>;
  notes?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  resolved_at?: Maybe<Scalars['timestamptz']>;
  type?: Maybe<Chat_FlagType_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Chat_Flag_Max_Fields = {
  __typename?: 'chat_Flag_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  discussionChatId?: Maybe<Scalars['uuid']>;
  flaggedById?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  messageSId?: Maybe<Scalars['uuid']>;
  notes?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  resolved_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chat.Flag" */
export type Chat_Flag_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  discussionChatId?: Maybe<Order_By>;
  flaggedById?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  messageSId?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  resolution?: Maybe<Order_By>;
  resolved_at?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Flag_Min_Fields = {
  __typename?: 'chat_Flag_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  discussionChatId?: Maybe<Scalars['uuid']>;
  flaggedById?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  messageSId?: Maybe<Scalars['uuid']>;
  notes?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  resolved_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chat.Flag" */
export type Chat_Flag_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  discussionChatId?: Maybe<Order_By>;
  flaggedById?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  messageSId?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  resolution?: Maybe<Order_By>;
  resolved_at?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.Flag" */
export type Chat_Flag_Mutation_Response = {
  __typename?: 'chat_Flag_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_Flag>;
};

/** input type for inserting object relation for remote table "chat.Flag" */
export type Chat_Flag_Obj_Rel_Insert_Input = {
  data: Chat_Flag_Insert_Input;
  on_conflict?: Maybe<Chat_Flag_On_Conflict>;
};

/** on conflict condition type for table "chat.Flag" */
export type Chat_Flag_On_Conflict = {
  constraint: Chat_Flag_Constraint;
  update_columns: Array<Chat_Flag_Update_Column>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};

/** ordering options when selecting data from "chat.Flag" */
export type Chat_Flag_Order_By = {
  created_at?: Maybe<Order_By>;
  discussionChat?: Maybe<Chat_Chat_Order_By>;
  discussionChatId?: Maybe<Order_By>;
  flaggedBy?: Maybe<Attendee_Order_By>;
  flaggedById?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Chat_Message_Order_By>;
  messageSId?: Maybe<Order_By>;
  notes?: Maybe<Order_By>;
  resolution?: Maybe<Order_By>;
  resolved_at?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.Flag" */
export type Chat_Flag_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** select columns of table "chat.Flag" */
export enum Chat_Flag_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscussionChatId = 'discussionChatId',
  /** column name */
  FlaggedById = 'flaggedById',
  /** column name */
  Id = 'id',
  /** column name */
  MessageSId = 'messageSId',
  /** column name */
  Notes = 'notes',
  /** column name */
  Resolution = 'resolution',
  /** column name */
  ResolvedAt = 'resolved_at',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "chat.Flag" */
export type Chat_Flag_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  discussionChatId?: Maybe<Scalars['uuid']>;
  flaggedById?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  messageSId?: Maybe<Scalars['uuid']>;
  notes?: Maybe<Scalars['String']>;
  resolution?: Maybe<Scalars['String']>;
  resolved_at?: Maybe<Scalars['timestamptz']>;
  type?: Maybe<Chat_FlagType_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Chat_Flag_Stddev_Fields = {
  __typename?: 'chat_Flag_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chat_Flag_Stddev_Pop_Fields = {
  __typename?: 'chat_Flag_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chat_Flag_Stddev_Samp_Fields = {
  __typename?: 'chat_Flag_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "chat.Flag" */
export type Chat_Flag_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Chat_Flag_Sum_Fields = {
  __typename?: 'chat_Flag_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "chat.Flag" */
export type Chat_Flag_Sum_Order_By = {
  id?: Maybe<Order_By>;
};

/** update columns of table "chat.Flag" */
export enum Chat_Flag_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DiscussionChatId = 'discussionChatId',
  /** column name */
  FlaggedById = 'flaggedById',
  /** column name */
  Id = 'id',
  /** column name */
  MessageSId = 'messageSId',
  /** column name */
  Notes = 'notes',
  /** column name */
  Resolution = 'resolution',
  /** column name */
  ResolvedAt = 'resolved_at',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Chat_Flag_Var_Pop_Fields = {
  __typename?: 'chat_Flag_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "chat.Flag" */
export type Chat_Flag_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chat_Flag_Var_Samp_Fields = {
  __typename?: 'chat_Flag_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "chat.Flag" */
export type Chat_Flag_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Chat_Flag_Variance_Fields = {
  __typename?: 'chat_Flag_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "chat.Flag" */
export type Chat_Flag_Variance_Order_By = {
  id?: Maybe<Order_By>;
};

/**
 * Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers.
 *
 *
 * columns and relationships of "chat.Message"
 */
export type Chat_Message = {
  __typename?: 'chat_Message';
  /** An object relationship */
  chat: Chat_Chat;
  chatId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  data: Scalars['jsonb'];
  /** An object relationship */
  duplicateIncoming?: Maybe<Chat_Message>;
  /** An object relationship */
  duplicateOutgoing?: Maybe<Chat_Message>;
  duplicatedMessageSId?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  flags: Array<Chat_Flag>;
  /** An aggregated array relationship */
  flags_aggregate: Chat_Flag_Aggregate;
  id: Scalars['Int'];
  isPinned: Scalars['Boolean'];
  message: Scalars['String'];
  /** An array relationship */
  reactions: Array<Chat_Reaction>;
  /** An aggregated array relationship */
  reactions_aggregate: Chat_Reaction_Aggregate;
  sId: Scalars['uuid'];
  /** An object relationship */
  sender?: Maybe<Attendee>;
  senderId?: Maybe<Scalars['uuid']>;
  systemId?: Maybe<Scalars['String']>;
  type: Chat_MessageType_Enum;
  updated_at: Scalars['timestamptz'];
};


/**
 * Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers.
 *
 *
 * columns and relationships of "chat.Message"
 */
export type Chat_MessageDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/**
 * Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers.
 *
 *
 * columns and relationships of "chat.Message"
 */
export type Chat_MessageFlagsArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/**
 * Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers.
 *
 *
 * columns and relationships of "chat.Message"
 */
export type Chat_MessageFlags_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/**
 * Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers.
 *
 *
 * columns and relationships of "chat.Message"
 */
export type Chat_MessageReactionsArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};


/**
 * Chat messages. The systemId field is unique and can be used to prevent duplicate inserts of things like event start/end markers.
 *
 *
 * columns and relationships of "chat.Message"
 */
export type Chat_MessageReactions_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.MessageType" */
export type Chat_MessageType = {
  __typename?: 'chat_MessageType';
  name: Scalars['String'];
};

/** aggregated selection of "chat.MessageType" */
export type Chat_MessageType_Aggregate = {
  __typename?: 'chat_MessageType_aggregate';
  aggregate?: Maybe<Chat_MessageType_Aggregate_Fields>;
  nodes: Array<Chat_MessageType>;
};

/** aggregate fields of "chat.MessageType" */
export type Chat_MessageType_Aggregate_Fields = {
  __typename?: 'chat_MessageType_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_MessageType_Max_Fields>;
  min?: Maybe<Chat_MessageType_Min_Fields>;
};


/** aggregate fields of "chat.MessageType" */
export type Chat_MessageType_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_MessageType_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.MessageType" */
export type Chat_MessageType_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_MessageType_Max_Order_By>;
  min?: Maybe<Chat_MessageType_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.MessageType" */
export type Chat_MessageType_Arr_Rel_Insert_Input = {
  data: Array<Chat_MessageType_Insert_Input>;
  on_conflict?: Maybe<Chat_MessageType_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.MessageType". All fields are combined with a logical 'AND'. */
export type Chat_MessageType_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_MessageType_Bool_Exp>>>;
  _not?: Maybe<Chat_MessageType_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_MessageType_Bool_Exp>>>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.MessageType" */
export enum Chat_MessageType_Constraint {
  /** unique or primary key constraint */
  MessageTypePkey = 'MessageType_pkey'
}

export enum Chat_MessageType_Enum {
  Answer = 'ANSWER',
  DuplicationMarker = 'DUPLICATION_MARKER',
  Emote = 'EMOTE',
  Message = 'MESSAGE',
  Poll = 'POLL',
  PollResults = 'POLL_RESULTS',
  Question = 'QUESTION'
}

/** expression to compare columns of type chat_MessageType_enum. All fields are combined with logical 'AND'. */
export type Chat_MessageType_Enum_Comparison_Exp = {
  _eq?: Maybe<Chat_MessageType_Enum>;
  _in?: Maybe<Array<Chat_MessageType_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Chat_MessageType_Enum>;
  _nin?: Maybe<Array<Chat_MessageType_Enum>>;
};

/** input type for inserting data into table "chat.MessageType" */
export type Chat_MessageType_Insert_Input = {
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Chat_MessageType_Max_Fields = {
  __typename?: 'chat_MessageType_max_fields';
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "chat.MessageType" */
export type Chat_MessageType_Max_Order_By = {
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_MessageType_Min_Fields = {
  __typename?: 'chat_MessageType_min_fields';
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "chat.MessageType" */
export type Chat_MessageType_Min_Order_By = {
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.MessageType" */
export type Chat_MessageType_Mutation_Response = {
  __typename?: 'chat_MessageType_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_MessageType>;
};

/** input type for inserting object relation for remote table "chat.MessageType" */
export type Chat_MessageType_Obj_Rel_Insert_Input = {
  data: Chat_MessageType_Insert_Input;
  on_conflict?: Maybe<Chat_MessageType_On_Conflict>;
};

/** on conflict condition type for table "chat.MessageType" */
export type Chat_MessageType_On_Conflict = {
  constraint: Chat_MessageType_Constraint;
  update_columns: Array<Chat_MessageType_Update_Column>;
  where?: Maybe<Chat_MessageType_Bool_Exp>;
};

/** ordering options when selecting data from "chat.MessageType" */
export type Chat_MessageType_Order_By = {
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.MessageType" */
export type Chat_MessageType_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "chat.MessageType" */
export enum Chat_MessageType_Select_Column {
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "chat.MessageType" */
export type Chat_MessageType_Set_Input = {
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "chat.MessageType" */
export enum Chat_MessageType_Update_Column {
  /** column name */
  Name = 'name'
}

/** aggregated selection of "chat.Message" */
export type Chat_Message_Aggregate = {
  __typename?: 'chat_Message_aggregate';
  aggregate?: Maybe<Chat_Message_Aggregate_Fields>;
  nodes: Array<Chat_Message>;
};

/** aggregate fields of "chat.Message" */
export type Chat_Message_Aggregate_Fields = {
  __typename?: 'chat_Message_aggregate_fields';
  avg?: Maybe<Chat_Message_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_Message_Max_Fields>;
  min?: Maybe<Chat_Message_Min_Fields>;
  stddev?: Maybe<Chat_Message_Stddev_Fields>;
  stddev_pop?: Maybe<Chat_Message_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Chat_Message_Stddev_Samp_Fields>;
  sum?: Maybe<Chat_Message_Sum_Fields>;
  var_pop?: Maybe<Chat_Message_Var_Pop_Fields>;
  var_samp?: Maybe<Chat_Message_Var_Samp_Fields>;
  variance?: Maybe<Chat_Message_Variance_Fields>;
};


/** aggregate fields of "chat.Message" */
export type Chat_Message_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_Message_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.Message" */
export type Chat_Message_Aggregate_Order_By = {
  avg?: Maybe<Chat_Message_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_Message_Max_Order_By>;
  min?: Maybe<Chat_Message_Min_Order_By>;
  stddev?: Maybe<Chat_Message_Stddev_Order_By>;
  stddev_pop?: Maybe<Chat_Message_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Chat_Message_Stddev_Samp_Order_By>;
  sum?: Maybe<Chat_Message_Sum_Order_By>;
  var_pop?: Maybe<Chat_Message_Var_Pop_Order_By>;
  var_samp?: Maybe<Chat_Message_Var_Samp_Order_By>;
  variance?: Maybe<Chat_Message_Variance_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Chat_Message_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "chat.Message" */
export type Chat_Message_Arr_Rel_Insert_Input = {
  data: Array<Chat_Message_Insert_Input>;
  on_conflict?: Maybe<Chat_Message_On_Conflict>;
};

/** aggregate avg on columns */
export type Chat_Message_Avg_Fields = {
  __typename?: 'chat_Message_avg_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "chat.Message" */
export type Chat_Message_Avg_Order_By = {
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chat.Message". All fields are combined with a logical 'AND'. */
export type Chat_Message_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_Message_Bool_Exp>>>;
  _not?: Maybe<Chat_Message_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_Message_Bool_Exp>>>;
  chat?: Maybe<Chat_Chat_Bool_Exp>;
  chatId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  duplicateIncoming?: Maybe<Chat_Message_Bool_Exp>;
  duplicateOutgoing?: Maybe<Chat_Message_Bool_Exp>;
  duplicatedMessageSId?: Maybe<Uuid_Comparison_Exp>;
  flags?: Maybe<Chat_Flag_Bool_Exp>;
  id?: Maybe<Int_Comparison_Exp>;
  isPinned?: Maybe<Boolean_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  reactions?: Maybe<Chat_Reaction_Bool_Exp>;
  sId?: Maybe<Uuid_Comparison_Exp>;
  sender?: Maybe<Attendee_Bool_Exp>;
  senderId?: Maybe<Uuid_Comparison_Exp>;
  systemId?: Maybe<String_Comparison_Exp>;
  type?: Maybe<Chat_MessageType_Enum_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Message" */
export enum Chat_Message_Constraint {
  /** unique or primary key constraint */
  MessageDuplicatedMessageSIdKey = 'Message_duplicatedMessageSId_key',
  /** unique or primary key constraint */
  MessagePkey = 'Message_pkey',
  /** unique or primary key constraint */
  MessageSIdChatIdKey = 'Message_sId_chatId_key',
  /** unique or primary key constraint */
  MessageSIdKey = 'Message_sId_key',
  /** unique or primary key constraint */
  MessageSystemIdKey = 'Message_systemId_key'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Chat_Message_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Chat_Message_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Chat_Message_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for incrementing integer column in table "chat.Message" */
export type Chat_Message_Inc_Input = {
  id?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "chat.Message" */
export type Chat_Message_Insert_Input = {
  chat?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  duplicateIncoming?: Maybe<Chat_Message_Obj_Rel_Insert_Input>;
  duplicateOutgoing?: Maybe<Chat_Message_Obj_Rel_Insert_Input>;
  duplicatedMessageSId?: Maybe<Scalars['uuid']>;
  flags?: Maybe<Chat_Flag_Arr_Rel_Insert_Input>;
  id?: Maybe<Scalars['Int']>;
  isPinned?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  reactions?: Maybe<Chat_Reaction_Arr_Rel_Insert_Input>;
  sId?: Maybe<Scalars['uuid']>;
  sender?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  senderId?: Maybe<Scalars['uuid']>;
  systemId?: Maybe<Scalars['String']>;
  type?: Maybe<Chat_MessageType_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Chat_Message_Max_Fields = {
  __typename?: 'chat_Message_max_fields';
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicatedMessageSId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  message?: Maybe<Scalars['String']>;
  sId?: Maybe<Scalars['uuid']>;
  senderId?: Maybe<Scalars['uuid']>;
  systemId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chat.Message" */
export type Chat_Message_Max_Order_By = {
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  duplicatedMessageSId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  sId?: Maybe<Order_By>;
  senderId?: Maybe<Order_By>;
  systemId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Message_Min_Fields = {
  __typename?: 'chat_Message_min_fields';
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicatedMessageSId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  message?: Maybe<Scalars['String']>;
  sId?: Maybe<Scalars['uuid']>;
  senderId?: Maybe<Scalars['uuid']>;
  systemId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chat.Message" */
export type Chat_Message_Min_Order_By = {
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  duplicatedMessageSId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  sId?: Maybe<Order_By>;
  senderId?: Maybe<Order_By>;
  systemId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.Message" */
export type Chat_Message_Mutation_Response = {
  __typename?: 'chat_Message_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_Message>;
};

/** input type for inserting object relation for remote table "chat.Message" */
export type Chat_Message_Obj_Rel_Insert_Input = {
  data: Chat_Message_Insert_Input;
  on_conflict?: Maybe<Chat_Message_On_Conflict>;
};

/** on conflict condition type for table "chat.Message" */
export type Chat_Message_On_Conflict = {
  constraint: Chat_Message_Constraint;
  update_columns: Array<Chat_Message_Update_Column>;
  where?: Maybe<Chat_Message_Bool_Exp>;
};

/** ordering options when selecting data from "chat.Message" */
export type Chat_Message_Order_By = {
  chat?: Maybe<Chat_Chat_Order_By>;
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  duplicateIncoming?: Maybe<Chat_Message_Order_By>;
  duplicateOutgoing?: Maybe<Chat_Message_Order_By>;
  duplicatedMessageSId?: Maybe<Order_By>;
  flags_aggregate?: Maybe<Chat_Flag_Aggregate_Order_By>;
  id?: Maybe<Order_By>;
  isPinned?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  reactions_aggregate?: Maybe<Chat_Reaction_Aggregate_Order_By>;
  sId?: Maybe<Order_By>;
  sender?: Maybe<Attendee_Order_By>;
  senderId?: Maybe<Order_By>;
  systemId?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.Message" */
export type Chat_Message_Pk_Columns_Input = {
  id: Scalars['Int'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Chat_Message_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "chat.Message" */
export enum Chat_Message_Select_Column {
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DuplicatedMessageSId = 'duplicatedMessageSId',
  /** column name */
  Id = 'id',
  /** column name */
  IsPinned = 'isPinned',
  /** column name */
  Message = 'message',
  /** column name */
  SId = 'sId',
  /** column name */
  SenderId = 'senderId',
  /** column name */
  SystemId = 'systemId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "chat.Message" */
export type Chat_Message_Set_Input = {
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  duplicatedMessageSId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['Int']>;
  isPinned?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  sId?: Maybe<Scalars['uuid']>;
  senderId?: Maybe<Scalars['uuid']>;
  systemId?: Maybe<Scalars['String']>;
  type?: Maybe<Chat_MessageType_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Chat_Message_Stddev_Fields = {
  __typename?: 'chat_Message_stddev_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chat_Message_Stddev_Pop_Fields = {
  __typename?: 'chat_Message_stddev_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chat_Message_Stddev_Samp_Fields = {
  __typename?: 'chat_Message_stddev_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "chat.Message" */
export type Chat_Message_Stddev_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Chat_Message_Sum_Fields = {
  __typename?: 'chat_Message_sum_fields';
  id?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "chat.Message" */
export type Chat_Message_Sum_Order_By = {
  id?: Maybe<Order_By>;
};

/** update columns of table "chat.Message" */
export enum Chat_Message_Update_Column {
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DuplicatedMessageSId = 'duplicatedMessageSId',
  /** column name */
  Id = 'id',
  /** column name */
  IsPinned = 'isPinned',
  /** column name */
  Message = 'message',
  /** column name */
  SId = 'sId',
  /** column name */
  SenderId = 'senderId',
  /** column name */
  SystemId = 'systemId',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Chat_Message_Var_Pop_Fields = {
  __typename?: 'chat_Message_var_pop_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "chat.Message" */
export type Chat_Message_Var_Pop_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chat_Message_Var_Samp_Fields = {
  __typename?: 'chat_Message_var_samp_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "chat.Message" */
export type Chat_Message_Var_Samp_Order_By = {
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Chat_Message_Variance_Fields = {
  __typename?: 'chat_Message_variance_fields';
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "chat.Message" */
export type Chat_Message_Variance_Order_By = {
  id?: Maybe<Order_By>;
};

/**
 * Pin a chat to the sidebar.
 *
 *
 * columns and relationships of "chat.Pin"
 */
export type Chat_Pin = {
  __typename?: 'chat_Pin';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  /** An object relationship */
  chat: Chat_Chat;
  chatId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  wasManuallyPinned: Scalars['Boolean'];
};

/** aggregated selection of "chat.Pin" */
export type Chat_Pin_Aggregate = {
  __typename?: 'chat_Pin_aggregate';
  aggregate?: Maybe<Chat_Pin_Aggregate_Fields>;
  nodes: Array<Chat_Pin>;
};

/** aggregate fields of "chat.Pin" */
export type Chat_Pin_Aggregate_Fields = {
  __typename?: 'chat_Pin_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_Pin_Max_Fields>;
  min?: Maybe<Chat_Pin_Min_Fields>;
};


/** aggregate fields of "chat.Pin" */
export type Chat_Pin_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_Pin_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.Pin" */
export type Chat_Pin_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_Pin_Max_Order_By>;
  min?: Maybe<Chat_Pin_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Pin" */
export type Chat_Pin_Arr_Rel_Insert_Input = {
  data: Array<Chat_Pin_Insert_Input>;
  on_conflict?: Maybe<Chat_Pin_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Pin". All fields are combined with a logical 'AND'. */
export type Chat_Pin_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_Pin_Bool_Exp>>>;
  _not?: Maybe<Chat_Pin_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_Pin_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  chat?: Maybe<Chat_Chat_Bool_Exp>;
  chatId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  wasManuallyPinned?: Maybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Pin" */
export enum Chat_Pin_Constraint {
  /** unique or primary key constraint */
  ChatPinPkey = 'ChatPin_pkey'
}

/** input type for inserting data into table "chat.Pin" */
export type Chat_Pin_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  chat?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  wasManuallyPinned?: Maybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type Chat_Pin_Max_Fields = {
  __typename?: 'chat_Pin_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chat.Pin" */
export type Chat_Pin_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Pin_Min_Fields = {
  __typename?: 'chat_Pin_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chat.Pin" */
export type Chat_Pin_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.Pin" */
export type Chat_Pin_Mutation_Response = {
  __typename?: 'chat_Pin_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_Pin>;
};

/** input type for inserting object relation for remote table "chat.Pin" */
export type Chat_Pin_Obj_Rel_Insert_Input = {
  data: Chat_Pin_Insert_Input;
  on_conflict?: Maybe<Chat_Pin_On_Conflict>;
};

/** on conflict condition type for table "chat.Pin" */
export type Chat_Pin_On_Conflict = {
  constraint: Chat_Pin_Constraint;
  update_columns: Array<Chat_Pin_Update_Column>;
  where?: Maybe<Chat_Pin_Bool_Exp>;
};

/** ordering options when selecting data from "chat.Pin" */
export type Chat_Pin_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  chat?: Maybe<Chat_Chat_Order_By>;
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  wasManuallyPinned?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.Pin" */
export type Chat_Pin_Pk_Columns_Input = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};

/** select columns of table "chat.Pin" */
export enum Chat_Pin_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  WasManuallyPinned = 'wasManuallyPinned'
}

/** input type for updating data in table "chat.Pin" */
export type Chat_Pin_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  wasManuallyPinned?: Maybe<Scalars['Boolean']>;
};

/** update columns of table "chat.Pin" */
export enum Chat_Pin_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  WasManuallyPinned = 'wasManuallyPinned'
}

/** columns and relationships of "chat.Reaction" */
export type Chat_Reaction = {
  __typename?: 'chat_Reaction';
  chatId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  data: Scalars['jsonb'];
  /** An object relationship */
  duplicate?: Maybe<Chat_Reaction>;
  duplicateSId?: Maybe<Scalars['uuid']>;
  /** An array relationship */
  duplicates: Array<Chat_Reaction>;
  /** An aggregated array relationship */
  duplicates_aggregate: Chat_Reaction_Aggregate;
  /** An object relationship */
  message: Chat_Message;
  messageSId: Scalars['uuid'];
  sId: Scalars['uuid'];
  /** An object relationship */
  sender: Attendee;
  senderId: Scalars['uuid'];
  symbol: Scalars['String'];
  type: Chat_ReactionType_Enum;
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDataArgs = {
  path?: Maybe<Scalars['String']>;
};


/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDuplicatesArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};


/** columns and relationships of "chat.Reaction" */
export type Chat_ReactionDuplicates_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};

/** columns and relationships of "chat.ReactionType" */
export type Chat_ReactionType = {
  __typename?: 'chat_ReactionType';
  description: Scalars['String'];
  name: Scalars['String'];
};

/** aggregated selection of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate = {
  __typename?: 'chat_ReactionType_aggregate';
  aggregate?: Maybe<Chat_ReactionType_Aggregate_Fields>;
  nodes: Array<Chat_ReactionType>;
};

/** aggregate fields of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate_Fields = {
  __typename?: 'chat_ReactionType_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_ReactionType_Max_Fields>;
  min?: Maybe<Chat_ReactionType_Min_Fields>;
};


/** aggregate fields of "chat.ReactionType" */
export type Chat_ReactionType_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_ReactionType_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.ReactionType" */
export type Chat_ReactionType_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_ReactionType_Max_Order_By>;
  min?: Maybe<Chat_ReactionType_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.ReactionType" */
export type Chat_ReactionType_Arr_Rel_Insert_Input = {
  data: Array<Chat_ReactionType_Insert_Input>;
  on_conflict?: Maybe<Chat_ReactionType_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.ReactionType". All fields are combined with a logical 'AND'. */
export type Chat_ReactionType_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_ReactionType_Bool_Exp>>>;
  _not?: Maybe<Chat_ReactionType_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_ReactionType_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.ReactionType" */
export enum Chat_ReactionType_Constraint {
  /** unique or primary key constraint */
  ReactionTypePkey = 'ReactionType_pkey'
}

export enum Chat_ReactionType_Enum {
  /** Link to a message that answers the question. */
  Answer = 'ANSWER',
  /** A plain emoji reaction */
  Emoji = 'EMOJI',
  /** A vote in a poll */
  PollChoice = 'POLL_CHOICE',
  /** Stop accepting new responses to the poll */
  PollClosed = 'POLL_CLOSED',
  /** Make the poll results visible */
  PollComplete = 'POLL_COMPLETE'
}

/** expression to compare columns of type chat_ReactionType_enum. All fields are combined with logical 'AND'. */
export type Chat_ReactionType_Enum_Comparison_Exp = {
  _eq?: Maybe<Chat_ReactionType_Enum>;
  _in?: Maybe<Array<Chat_ReactionType_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Chat_ReactionType_Enum>;
  _nin?: Maybe<Array<Chat_ReactionType_Enum>>;
};

/** input type for inserting data into table "chat.ReactionType" */
export type Chat_ReactionType_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Chat_ReactionType_Max_Fields = {
  __typename?: 'chat_ReactionType_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "chat.ReactionType" */
export type Chat_ReactionType_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_ReactionType_Min_Fields = {
  __typename?: 'chat_ReactionType_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "chat.ReactionType" */
export type Chat_ReactionType_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.ReactionType" */
export type Chat_ReactionType_Mutation_Response = {
  __typename?: 'chat_ReactionType_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_ReactionType>;
};

/** input type for inserting object relation for remote table "chat.ReactionType" */
export type Chat_ReactionType_Obj_Rel_Insert_Input = {
  data: Chat_ReactionType_Insert_Input;
  on_conflict?: Maybe<Chat_ReactionType_On_Conflict>;
};

/** on conflict condition type for table "chat.ReactionType" */
export type Chat_ReactionType_On_Conflict = {
  constraint: Chat_ReactionType_Constraint;
  update_columns: Array<Chat_ReactionType_Update_Column>;
  where?: Maybe<Chat_ReactionType_Bool_Exp>;
};

/** ordering options when selecting data from "chat.ReactionType" */
export type Chat_ReactionType_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.ReactionType" */
export type Chat_ReactionType_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "chat.ReactionType" */
export enum Chat_ReactionType_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "chat.ReactionType" */
export type Chat_ReactionType_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "chat.ReactionType" */
export enum Chat_ReactionType_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** aggregated selection of "chat.Reaction" */
export type Chat_Reaction_Aggregate = {
  __typename?: 'chat_Reaction_aggregate';
  aggregate?: Maybe<Chat_Reaction_Aggregate_Fields>;
  nodes: Array<Chat_Reaction>;
};

/** aggregate fields of "chat.Reaction" */
export type Chat_Reaction_Aggregate_Fields = {
  __typename?: 'chat_Reaction_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_Reaction_Max_Fields>;
  min?: Maybe<Chat_Reaction_Min_Fields>;
};


/** aggregate fields of "chat.Reaction" */
export type Chat_Reaction_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_Reaction_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.Reaction" */
export type Chat_Reaction_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_Reaction_Max_Order_By>;
  min?: Maybe<Chat_Reaction_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Chat_Reaction_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "chat.Reaction" */
export type Chat_Reaction_Arr_Rel_Insert_Input = {
  data: Array<Chat_Reaction_Insert_Input>;
  on_conflict?: Maybe<Chat_Reaction_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Reaction". All fields are combined with a logical 'AND'. */
export type Chat_Reaction_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_Reaction_Bool_Exp>>>;
  _not?: Maybe<Chat_Reaction_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_Reaction_Bool_Exp>>>;
  chatId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  duplicate?: Maybe<Chat_Reaction_Bool_Exp>;
  duplicateSId?: Maybe<Uuid_Comparison_Exp>;
  duplicates?: Maybe<Chat_Reaction_Bool_Exp>;
  message?: Maybe<Chat_Message_Bool_Exp>;
  messageSId?: Maybe<Uuid_Comparison_Exp>;
  sId?: Maybe<Uuid_Comparison_Exp>;
  sender?: Maybe<Attendee_Bool_Exp>;
  senderId?: Maybe<Uuid_Comparison_Exp>;
  symbol?: Maybe<String_Comparison_Exp>;
  type?: Maybe<Chat_ReactionType_Enum_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Reaction" */
export enum Chat_Reaction_Constraint {
  /** unique or primary key constraint */
  ReactionPkey = 'Reaction_pkey',
  /** unique or primary key constraint */
  ReactionSIdKey = 'Reaction_sId_key'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Chat_Reaction_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Chat_Reaction_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Chat_Reaction_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "chat.Reaction" */
export type Chat_Reaction_Insert_Input = {
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  duplicate?: Maybe<Chat_Reaction_Obj_Rel_Insert_Input>;
  duplicateSId?: Maybe<Scalars['uuid']>;
  duplicates?: Maybe<Chat_Reaction_Arr_Rel_Insert_Input>;
  message?: Maybe<Chat_Message_Obj_Rel_Insert_Input>;
  messageSId?: Maybe<Scalars['uuid']>;
  sId?: Maybe<Scalars['uuid']>;
  sender?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  senderId?: Maybe<Scalars['uuid']>;
  symbol?: Maybe<Scalars['String']>;
  type?: Maybe<Chat_ReactionType_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Chat_Reaction_Max_Fields = {
  __typename?: 'chat_Reaction_max_fields';
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicateSId?: Maybe<Scalars['uuid']>;
  messageSId?: Maybe<Scalars['uuid']>;
  sId?: Maybe<Scalars['uuid']>;
  senderId?: Maybe<Scalars['uuid']>;
  symbol?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chat.Reaction" */
export type Chat_Reaction_Max_Order_By = {
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  duplicateSId?: Maybe<Order_By>;
  messageSId?: Maybe<Order_By>;
  sId?: Maybe<Order_By>;
  senderId?: Maybe<Order_By>;
  symbol?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Reaction_Min_Fields = {
  __typename?: 'chat_Reaction_min_fields';
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  duplicateSId?: Maybe<Scalars['uuid']>;
  messageSId?: Maybe<Scalars['uuid']>;
  sId?: Maybe<Scalars['uuid']>;
  senderId?: Maybe<Scalars['uuid']>;
  symbol?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chat.Reaction" */
export type Chat_Reaction_Min_Order_By = {
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  duplicateSId?: Maybe<Order_By>;
  messageSId?: Maybe<Order_By>;
  sId?: Maybe<Order_By>;
  senderId?: Maybe<Order_By>;
  symbol?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.Reaction" */
export type Chat_Reaction_Mutation_Response = {
  __typename?: 'chat_Reaction_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_Reaction>;
};

/** input type for inserting object relation for remote table "chat.Reaction" */
export type Chat_Reaction_Obj_Rel_Insert_Input = {
  data: Chat_Reaction_Insert_Input;
  on_conflict?: Maybe<Chat_Reaction_On_Conflict>;
};

/** on conflict condition type for table "chat.Reaction" */
export type Chat_Reaction_On_Conflict = {
  constraint: Chat_Reaction_Constraint;
  update_columns: Array<Chat_Reaction_Update_Column>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};

/** ordering options when selecting data from "chat.Reaction" */
export type Chat_Reaction_Order_By = {
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  duplicate?: Maybe<Chat_Reaction_Order_By>;
  duplicateSId?: Maybe<Order_By>;
  duplicates_aggregate?: Maybe<Chat_Reaction_Aggregate_Order_By>;
  message?: Maybe<Chat_Message_Order_By>;
  messageSId?: Maybe<Order_By>;
  sId?: Maybe<Order_By>;
  sender?: Maybe<Attendee_Order_By>;
  senderId?: Maybe<Order_By>;
  symbol?: Maybe<Order_By>;
  type?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.Reaction" */
export type Chat_Reaction_Pk_Columns_Input = {
  sId: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Chat_Reaction_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "chat.Reaction" */
export enum Chat_Reaction_Select_Column {
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DuplicateSId = 'duplicateSId',
  /** column name */
  MessageSId = 'messageSId',
  /** column name */
  SId = 'sId',
  /** column name */
  SenderId = 'senderId',
  /** column name */
  Symbol = 'symbol',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "chat.Reaction" */
export type Chat_Reaction_Set_Input = {
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  duplicateSId?: Maybe<Scalars['uuid']>;
  messageSId?: Maybe<Scalars['uuid']>;
  sId?: Maybe<Scalars['uuid']>;
  senderId?: Maybe<Scalars['uuid']>;
  symbol?: Maybe<Scalars['String']>;
  type?: Maybe<Chat_ReactionType_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "chat.Reaction" */
export enum Chat_Reaction_Update_Column {
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  DuplicateSId = 'duplicateSId',
  /** column name */
  MessageSId = 'messageSId',
  /** column name */
  SId = 'sId',
  /** column name */
  SenderId = 'senderId',
  /** column name */
  Symbol = 'symbol',
  /** column name */
  Type = 'type',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex = {
  __typename?: 'chat_ReadUpToIndex';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  /** An object relationship */
  chat: Chat_Chat;
  chatId: Scalars['uuid'];
  messageId: Scalars['Int'];
  notifiedUpToMessageId: Scalars['Int'];
  /** A computed field, executes function "chat.unnotifiedCount" */
  unnotifiedCount?: Maybe<Scalars['Int']>;
  /** A computed field, executes function "chat.unreadCount" */
  unreadCount?: Maybe<Scalars['Int']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate = {
  __typename?: 'chat_ReadUpToIndex_aggregate';
  aggregate?: Maybe<Chat_ReadUpToIndex_Aggregate_Fields>;
  nodes: Array<Chat_ReadUpToIndex>;
};

/** aggregate fields of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_Fields = {
  __typename?: 'chat_ReadUpToIndex_aggregate_fields';
  avg?: Maybe<Chat_ReadUpToIndex_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_ReadUpToIndex_Max_Fields>;
  min?: Maybe<Chat_ReadUpToIndex_Min_Fields>;
  stddev?: Maybe<Chat_ReadUpToIndex_Stddev_Fields>;
  stddev_pop?: Maybe<Chat_ReadUpToIndex_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Chat_ReadUpToIndex_Stddev_Samp_Fields>;
  sum?: Maybe<Chat_ReadUpToIndex_Sum_Fields>;
  var_pop?: Maybe<Chat_ReadUpToIndex_Var_Pop_Fields>;
  var_samp?: Maybe<Chat_ReadUpToIndex_Var_Samp_Fields>;
  variance?: Maybe<Chat_ReadUpToIndex_Variance_Fields>;
};


/** aggregate fields of "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_ReadUpToIndex_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Aggregate_Order_By = {
  avg?: Maybe<Chat_ReadUpToIndex_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_ReadUpToIndex_Max_Order_By>;
  min?: Maybe<Chat_ReadUpToIndex_Min_Order_By>;
  stddev?: Maybe<Chat_ReadUpToIndex_Stddev_Order_By>;
  stddev_pop?: Maybe<Chat_ReadUpToIndex_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Chat_ReadUpToIndex_Stddev_Samp_Order_By>;
  sum?: Maybe<Chat_ReadUpToIndex_Sum_Order_By>;
  var_pop?: Maybe<Chat_ReadUpToIndex_Var_Pop_Order_By>;
  var_samp?: Maybe<Chat_ReadUpToIndex_Var_Samp_Order_By>;
  variance?: Maybe<Chat_ReadUpToIndex_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Arr_Rel_Insert_Input = {
  data: Array<Chat_ReadUpToIndex_Insert_Input>;
  on_conflict?: Maybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** aggregate avg on columns */
export type Chat_ReadUpToIndex_Avg_Fields = {
  __typename?: 'chat_ReadUpToIndex_avg_fields';
  messageId?: Maybe<Scalars['Float']>;
  notifiedUpToMessageId?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Avg_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "chat.ReadUpToIndex". All fields are combined with a logical 'AND'. */
export type Chat_ReadUpToIndex_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_ReadUpToIndex_Bool_Exp>>>;
  _not?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_ReadUpToIndex_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  chat?: Maybe<Chat_Chat_Bool_Exp>;
  chatId?: Maybe<Uuid_Comparison_Exp>;
  messageId?: Maybe<Int_Comparison_Exp>;
  notifiedUpToMessageId?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Constraint {
  /** unique or primary key constraint */
  ReadUpToIndexPkey = 'ReadUpToIndex_pkey'
}

/** input type for incrementing integer column in table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Inc_Input = {
  messageId?: Maybe<Scalars['Int']>;
  notifiedUpToMessageId?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  chat?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  chatId?: Maybe<Scalars['uuid']>;
  messageId?: Maybe<Scalars['Int']>;
  notifiedUpToMessageId?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Chat_ReadUpToIndex_Max_Fields = {
  __typename?: 'chat_ReadUpToIndex_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  messageId?: Maybe<Scalars['Int']>;
  notifiedUpToMessageId?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_ReadUpToIndex_Min_Fields = {
  __typename?: 'chat_ReadUpToIndex_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  messageId?: Maybe<Scalars['Int']>;
  notifiedUpToMessageId?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Mutation_Response = {
  __typename?: 'chat_ReadUpToIndex_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_ReadUpToIndex>;
};

/** input type for inserting object relation for remote table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Obj_Rel_Insert_Input = {
  data: Chat_ReadUpToIndex_Insert_Input;
  on_conflict?: Maybe<Chat_ReadUpToIndex_On_Conflict>;
};

/** on conflict condition type for table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_On_Conflict = {
  constraint: Chat_ReadUpToIndex_Constraint;
  update_columns: Array<Chat_ReadUpToIndex_Update_Column>;
  where?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
};

/** ordering options when selecting data from "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  chat?: Maybe<Chat_Chat_Order_By>;
  chatId?: Maybe<Order_By>;
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Pk_Columns_Input = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};

/** select columns of table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  MessageId = 'messageId',
  /** column name */
  NotifiedUpToMessageId = 'notifiedUpToMessageId',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  messageId?: Maybe<Scalars['Int']>;
  notifiedUpToMessageId?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Chat_ReadUpToIndex_Stddev_Fields = {
  __typename?: 'chat_ReadUpToIndex_stddev_fields';
  messageId?: Maybe<Scalars['Float']>;
  notifiedUpToMessageId?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Stddev_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Chat_ReadUpToIndex_Stddev_Pop_Fields = {
  __typename?: 'chat_ReadUpToIndex_stddev_pop_fields';
  messageId?: Maybe<Scalars['Float']>;
  notifiedUpToMessageId?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Stddev_Pop_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Chat_ReadUpToIndex_Stddev_Samp_Fields = {
  __typename?: 'chat_ReadUpToIndex_stddev_samp_fields';
  messageId?: Maybe<Scalars['Float']>;
  notifiedUpToMessageId?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Stddev_Samp_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Chat_ReadUpToIndex_Sum_Fields = {
  __typename?: 'chat_ReadUpToIndex_sum_fields';
  messageId?: Maybe<Scalars['Int']>;
  notifiedUpToMessageId?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Sum_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/** update columns of table "chat.ReadUpToIndex" */
export enum Chat_ReadUpToIndex_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  MessageId = 'messageId',
  /** column name */
  NotifiedUpToMessageId = 'notifiedUpToMessageId',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Chat_ReadUpToIndex_Var_Pop_Fields = {
  __typename?: 'chat_ReadUpToIndex_var_pop_fields';
  messageId?: Maybe<Scalars['Float']>;
  notifiedUpToMessageId?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Var_Pop_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Chat_ReadUpToIndex_Var_Samp_Fields = {
  __typename?: 'chat_ReadUpToIndex_var_samp_fields';
  messageId?: Maybe<Scalars['Float']>;
  notifiedUpToMessageId?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Var_Samp_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Chat_ReadUpToIndex_Variance_Fields = {
  __typename?: 'chat_ReadUpToIndex_variance_fields';
  messageId?: Maybe<Scalars['Float']>;
  notifiedUpToMessageId?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "chat.ReadUpToIndex" */
export type Chat_ReadUpToIndex_Variance_Order_By = {
  messageId?: Maybe<Order_By>;
  notifiedUpToMessageId?: Maybe<Order_By>;
};

/**
 * Subscribe to chat notifications.
 *
 *
 * columns and relationships of "chat.Subscription"
 */
export type Chat_Subscription = {
  __typename?: 'chat_Subscription';
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  /** An object relationship */
  chat: Chat_Chat;
  chatId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  wasManuallySubscribed: Scalars['Boolean'];
};

/** aggregated selection of "chat.Subscription" */
export type Chat_Subscription_Aggregate = {
  __typename?: 'chat_Subscription_aggregate';
  aggregate?: Maybe<Chat_Subscription_Aggregate_Fields>;
  nodes: Array<Chat_Subscription>;
};

/** aggregate fields of "chat.Subscription" */
export type Chat_Subscription_Aggregate_Fields = {
  __typename?: 'chat_Subscription_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Chat_Subscription_Max_Fields>;
  min?: Maybe<Chat_Subscription_Min_Fields>;
};


/** aggregate fields of "chat.Subscription" */
export type Chat_Subscription_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Chat_Subscription_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "chat.Subscription" */
export type Chat_Subscription_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Chat_Subscription_Max_Order_By>;
  min?: Maybe<Chat_Subscription_Min_Order_By>;
};

/** input type for inserting array relation for remote table "chat.Subscription" */
export type Chat_Subscription_Arr_Rel_Insert_Input = {
  data: Array<Chat_Subscription_Insert_Input>;
  on_conflict?: Maybe<Chat_Subscription_On_Conflict>;
};

/** Boolean expression to filter rows from the table "chat.Subscription". All fields are combined with a logical 'AND'. */
export type Chat_Subscription_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Chat_Subscription_Bool_Exp>>>;
  _not?: Maybe<Chat_Subscription_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Chat_Subscription_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  chat?: Maybe<Chat_Chat_Bool_Exp>;
  chatId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  wasManuallySubscribed?: Maybe<Boolean_Comparison_Exp>;
};

/** unique or primary key constraints on table "chat.Subscription" */
export enum Chat_Subscription_Constraint {
  /** unique or primary key constraint */
  SubscriptionPkey = 'Subscription_pkey'
}

/** input type for inserting data into table "chat.Subscription" */
export type Chat_Subscription_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  chat?: Maybe<Chat_Chat_Obj_Rel_Insert_Input>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  wasManuallySubscribed?: Maybe<Scalars['Boolean']>;
};

/** aggregate max on columns */
export type Chat_Subscription_Max_Fields = {
  __typename?: 'chat_Subscription_max_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "chat.Subscription" */
export type Chat_Subscription_Max_Order_By = {
  attendeeId?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Chat_Subscription_Min_Fields = {
  __typename?: 'chat_Subscription_min_fields';
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "chat.Subscription" */
export type Chat_Subscription_Min_Order_By = {
  attendeeId?: Maybe<Order_By>;
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "chat.Subscription" */
export type Chat_Subscription_Mutation_Response = {
  __typename?: 'chat_Subscription_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Chat_Subscription>;
};

/** input type for inserting object relation for remote table "chat.Subscription" */
export type Chat_Subscription_Obj_Rel_Insert_Input = {
  data: Chat_Subscription_Insert_Input;
  on_conflict?: Maybe<Chat_Subscription_On_Conflict>;
};

/** on conflict condition type for table "chat.Subscription" */
export type Chat_Subscription_On_Conflict = {
  constraint: Chat_Subscription_Constraint;
  update_columns: Array<Chat_Subscription_Update_Column>;
  where?: Maybe<Chat_Subscription_Bool_Exp>;
};

/** ordering options when selecting data from "chat.Subscription" */
export type Chat_Subscription_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  chat?: Maybe<Chat_Chat_Order_By>;
  chatId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  wasManuallySubscribed?: Maybe<Order_By>;
};

/** primary key columns input for table: "chat.Subscription" */
export type Chat_Subscription_Pk_Columns_Input = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};

/** select columns of table "chat.Subscription" */
export enum Chat_Subscription_Select_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  WasManuallySubscribed = 'wasManuallySubscribed'
}

/** input type for updating data in table "chat.Subscription" */
export type Chat_Subscription_Set_Input = {
  attendeeId?: Maybe<Scalars['uuid']>;
  chatId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  wasManuallySubscribed?: Maybe<Scalars['Boolean']>;
};

/** update columns of table "chat.Subscription" */
export enum Chat_Subscription_Update_Column {
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  ChatId = 'chatId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  WasManuallySubscribed = 'wasManuallySubscribed'
}

/** columns and relationships of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob = {
  __typename?: 'job_queues_ChannelStackCreateJob';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  jobStatus: JobStatus;
  jobStatusName: JobStatus_Enum;
  message?: Maybe<Scalars['String']>;
  /** An object relationship */
  room: Room;
  roomId: Scalars['uuid'];
  stackLogicalResourceId: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate = {
  __typename?: 'job_queues_ChannelStackCreateJob_aggregate';
  aggregate?: Maybe<Job_Queues_ChannelStackCreateJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_ChannelStackCreateJob>;
};

/** aggregate fields of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_Fields = {
  __typename?: 'job_queues_ChannelStackCreateJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_ChannelStackCreateJob_Max_Fields>;
  min?: Maybe<Job_Queues_ChannelStackCreateJob_Min_Fields>;
};


/** aggregate fields of "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_ChannelStackCreateJob_Max_Order_By>;
  min?: Maybe<Job_Queues_ChannelStackCreateJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_ChannelStackCreateJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.ChannelStackCreateJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_ChannelStackCreateJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  jobStatus?: Maybe<JobStatus_Bool_Exp>;
  jobStatusName?: Maybe<JobStatus_Enum_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  stackLogicalResourceId?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Constraint {
  /** unique or primary key constraint */
  ChannelStackCreateJobPkey = 'ChannelStackCreateJob_pkey',
  /** unique or primary key constraint */
  ChannelStackCreateJobStackLogicalResourceIdKey = 'ChannelStackCreateJob_stackLogicalResourceId_key'
}

/** input type for inserting data into table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatus?: Maybe<JobStatus_Obj_Rel_Insert_Input>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  stackLogicalResourceId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Job_Queues_ChannelStackCreateJob_Max_Fields = {
  __typename?: 'job_queues_ChannelStackCreateJob_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  roomId?: Maybe<Scalars['uuid']>;
  stackLogicalResourceId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  stackLogicalResourceId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_ChannelStackCreateJob_Min_Fields = {
  __typename?: 'job_queues_ChannelStackCreateJob_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  roomId?: Maybe<Scalars['uuid']>;
  stackLogicalResourceId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  stackLogicalResourceId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Mutation_Response = {
  __typename?: 'job_queues_ChannelStackCreateJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_ChannelStackCreateJob>;
};

/** input type for inserting object relation for remote table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_ChannelStackCreateJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_On_Conflict = {
  constraint: Job_Queues_ChannelStackCreateJob_Constraint;
  update_columns: Array<Job_Queues_ChannelStackCreateJob_Update_Column>;
  where?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatus?: Maybe<JobStatus_Order_By>;
  jobStatusName?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  stackLogicalResourceId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  StackLogicalResourceId = 'stackLogicalResourceId',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "job_queues.ChannelStackCreateJob" */
export type Job_Queues_ChannelStackCreateJob_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  roomId?: Maybe<Scalars['uuid']>;
  stackLogicalResourceId?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "job_queues.ChannelStackCreateJob" */
export enum Job_Queues_ChannelStackCreateJob_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  StackLogicalResourceId = 'stackLogicalResourceId',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob = {
  __typename?: 'job_queues_CombineVideosJob';
  /** An object relationship */
  attendee?: Maybe<Attendee>;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdByAttendeeId?: Maybe<Scalars['uuid']>;
  created_at: Scalars['timestamptz'];
  data: Scalars['jsonb'];
  id: Scalars['uuid'];
  /** An object relationship */
  jobStatus: JobStatus;
  jobStatusName: JobStatus_Enum;
  mediaConvertJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  outputName: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJobDataArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate = {
  __typename?: 'job_queues_CombineVideosJob_aggregate';
  aggregate?: Maybe<Job_Queues_CombineVideosJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_CombineVideosJob>;
};

/** aggregate fields of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate_Fields = {
  __typename?: 'job_queues_CombineVideosJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_CombineVideosJob_Max_Fields>;
  min?: Maybe<Job_Queues_CombineVideosJob_Min_Fields>;
};


/** aggregate fields of "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_CombineVideosJob_Max_Order_By>;
  min?: Maybe<Job_Queues_CombineVideosJob_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CombineVideosJob_Append_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_CombineVideosJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_CombineVideosJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.CombineVideosJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_CombineVideosJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_CombineVideosJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_CombineVideosJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_CombineVideosJob_Bool_Exp>>>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdByAttendeeId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  data?: Maybe<Jsonb_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  jobStatus?: Maybe<JobStatus_Bool_Exp>;
  jobStatusName?: Maybe<JobStatus_Enum_Comparison_Exp>;
  mediaConvertJobId?: Maybe<String_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  outputName?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Constraint {
  /** unique or primary key constraint */
  CombineVideosJobPkey = 'CombineVideosJob_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_CombineVideosJob_Delete_At_Path_Input = {
  data?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_CombineVideosJob_Delete_Elem_Input = {
  data?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_CombineVideosJob_Delete_Key_Input = {
  data?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Insert_Input = {
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdByAttendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatus?: Maybe<JobStatus_Obj_Rel_Insert_Input>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  mediaConvertJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  outputName?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Job_Queues_CombineVideosJob_Max_Fields = {
  __typename?: 'job_queues_CombineVideosJob_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdByAttendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  mediaConvertJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  outputName?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdByAttendeeId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  mediaConvertJobId?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  outputName?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_CombineVideosJob_Min_Fields = {
  __typename?: 'job_queues_CombineVideosJob_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdByAttendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  mediaConvertJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  outputName?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdByAttendeeId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  mediaConvertJobId?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  outputName?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Mutation_Response = {
  __typename?: 'job_queues_CombineVideosJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_CombineVideosJob>;
};

/** input type for inserting object relation for remote table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_CombineVideosJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_CombineVideosJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_On_Conflict = {
  constraint: Job_Queues_CombineVideosJob_Constraint;
  update_columns: Array<Job_Queues_CombineVideosJob_Update_Column>;
  where?: Maybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Order_By = {
  attendee?: Maybe<Attendee_Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdByAttendeeId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  data?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatus?: Maybe<JobStatus_Order_By>;
  jobStatusName?: Maybe<Order_By>;
  mediaConvertJobId?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  outputName?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CombineVideosJob_Prepend_Input = {
  data?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedByAttendeeId = 'createdByAttendeeId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  MediaConvertJobId = 'mediaConvertJobId',
  /** column name */
  Message = 'message',
  /** column name */
  OutputName = 'outputName',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "job_queues.CombineVideosJob" */
export type Job_Queues_CombineVideosJob_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  createdByAttendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  data?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  mediaConvertJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  outputName?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "job_queues.CombineVideosJob" */
export enum Job_Queues_CombineVideosJob_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedByAttendeeId = 'createdByAttendeeId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Data = 'data',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  MediaConvertJobId = 'mediaConvertJobId',
  /** column name */
  Message = 'message',
  /** column name */
  OutputName = 'outputName',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob = {
  __typename?: 'job_queues_CustomEmailJob';
  attendeeIds: Scalars['jsonb'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  htmlBody: Scalars['String'];
  id: Scalars['uuid'];
  processed: Scalars['Boolean'];
  subject: Scalars['String'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJobAttendeeIdsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate = {
  __typename?: 'job_queues_CustomEmailJob_aggregate';
  aggregate?: Maybe<Job_Queues_CustomEmailJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_CustomEmailJob>;
};

/** aggregate fields of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate_Fields = {
  __typename?: 'job_queues_CustomEmailJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_CustomEmailJob_Max_Fields>;
  min?: Maybe<Job_Queues_CustomEmailJob_Min_Fields>;
};


/** aggregate fields of "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_CustomEmailJob_Max_Order_By>;
  min?: Maybe<Job_Queues_CustomEmailJob_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CustomEmailJob_Append_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_CustomEmailJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_CustomEmailJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.CustomEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_CustomEmailJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_CustomEmailJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_CustomEmailJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_CustomEmailJob_Bool_Exp>>>;
  attendeeIds?: Maybe<Jsonb_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  htmlBody?: Maybe<String_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  processed?: Maybe<Boolean_Comparison_Exp>;
  subject?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Constraint {
  /** unique or primary key constraint */
  CustomEmailJobPkey = 'CustomEmailJob_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_CustomEmailJob_Delete_At_Path_Input = {
  attendeeIds?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_CustomEmailJob_Delete_Elem_Input = {
  attendeeIds?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_CustomEmailJob_Delete_Key_Input = {
  attendeeIds?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Insert_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  htmlBody?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  processed?: Maybe<Scalars['Boolean']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Job_Queues_CustomEmailJob_Max_Fields = {
  __typename?: 'job_queues_CustomEmailJob_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  htmlBody?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  htmlBody?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_CustomEmailJob_Min_Fields = {
  __typename?: 'job_queues_CustomEmailJob_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  htmlBody?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  htmlBody?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Mutation_Response = {
  __typename?: 'job_queues_CustomEmailJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_CustomEmailJob>;
};

/** input type for inserting object relation for remote table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_CustomEmailJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_CustomEmailJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_On_Conflict = {
  constraint: Job_Queues_CustomEmailJob_Constraint;
  update_columns: Array<Job_Queues_CustomEmailJob_Update_Column>;
  where?: Maybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Order_By = {
  attendeeIds?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  htmlBody?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  processed?: Maybe<Order_By>;
  subject?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_CustomEmailJob_Prepend_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Select_Column {
  /** column name */
  AttendeeIds = 'attendeeIds',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  HtmlBody = 'htmlBody',
  /** column name */
  Id = 'id',
  /** column name */
  Processed = 'processed',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "job_queues.CustomEmailJob" */
export type Job_Queues_CustomEmailJob_Set_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  htmlBody?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['uuid']>;
  processed?: Maybe<Scalars['Boolean']>;
  subject?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "job_queues.CustomEmailJob" */
export enum Job_Queues_CustomEmailJob_Update_Column {
  /** column name */
  AttendeeIds = 'attendeeIds',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  HtmlBody = 'htmlBody',
  /** column name */
  Id = 'id',
  /** column name */
  Processed = 'processed',
  /** column name */
  Subject = 'subject',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob = {
  __typename?: 'job_queues_InvitationEmailJob';
  attendeeIds: Scalars['jsonb'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  processed: Scalars['Boolean'];
  sendRepeat: Scalars['Boolean'];
  updatedAt: Scalars['timestamptz'];
};


/** columns and relationships of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJobAttendeeIdsArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate = {
  __typename?: 'job_queues_InvitationEmailJob_aggregate';
  aggregate?: Maybe<Job_Queues_InvitationEmailJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_InvitationEmailJob>;
};

/** aggregate fields of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate_Fields = {
  __typename?: 'job_queues_InvitationEmailJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_InvitationEmailJob_Max_Fields>;
  min?: Maybe<Job_Queues_InvitationEmailJob_Min_Fields>;
};


/** aggregate fields of "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_InvitationEmailJob_Max_Order_By>;
  min?: Maybe<Job_Queues_InvitationEmailJob_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_InvitationEmailJob_Append_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_InvitationEmailJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.InvitationEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_InvitationEmailJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>>>;
  attendeeIds?: Maybe<Jsonb_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  processed?: Maybe<Boolean_Comparison_Exp>;
  sendRepeat?: Maybe<Boolean_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Constraint {
  /** unique or primary key constraint */
  InvitationEmailJobsPkey = 'InvitationEmailJobs_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_InvitationEmailJob_Delete_At_Path_Input = {
  attendeeIds?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_InvitationEmailJob_Delete_Elem_Input = {
  attendeeIds?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_InvitationEmailJob_Delete_Key_Input = {
  attendeeIds?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Insert_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  processed?: Maybe<Scalars['Boolean']>;
  sendRepeat?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Job_Queues_InvitationEmailJob_Max_Fields = {
  __typename?: 'job_queues_InvitationEmailJob_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_InvitationEmailJob_Min_Fields = {
  __typename?: 'job_queues_InvitationEmailJob_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Mutation_Response = {
  __typename?: 'job_queues_InvitationEmailJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_InvitationEmailJob>;
};

/** input type for inserting object relation for remote table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_InvitationEmailJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_On_Conflict = {
  constraint: Job_Queues_InvitationEmailJob_Constraint;
  update_columns: Array<Job_Queues_InvitationEmailJob_Update_Column>;
  where?: Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Order_By = {
  attendeeIds?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  processed?: Maybe<Order_By>;
  sendRepeat?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_InvitationEmailJob_Prepend_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Select_Column {
  /** column name */
  AttendeeIds = 'attendeeIds',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Processed = 'processed',
  /** column name */
  SendRepeat = 'sendRepeat',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** input type for updating data in table "job_queues.InvitationEmailJob" */
export type Job_Queues_InvitationEmailJob_Set_Input = {
  attendeeIds?: Maybe<Scalars['jsonb']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  processed?: Maybe<Scalars['Boolean']>;
  sendRepeat?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "job_queues.InvitationEmailJob" */
export enum Job_Queues_InvitationEmailJob_Update_Column {
  /** column name */
  AttendeeIds = 'attendeeIds',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  Processed = 'processed',
  /** column name */
  SendRepeat = 'sendRepeat',
  /** column name */
  UpdatedAt = 'updatedAt'
}

/** columns and relationships of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob = {
  __typename?: 'job_queues_MediaPackageHarvestJob';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  /** An object relationship */
  event: Event;
  eventId: Scalars['uuid'];
  id: Scalars['uuid'];
  /** An object relationship */
  jobStatus: JobStatus;
  jobStatusName: JobStatus_Enum;
  mediaPackageHarvestJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate = {
  __typename?: 'job_queues_MediaPackageHarvestJob_aggregate';
  aggregate?: Maybe<Job_Queues_MediaPackageHarvestJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_MediaPackageHarvestJob>;
};

/** aggregate fields of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate_Fields = {
  __typename?: 'job_queues_MediaPackageHarvestJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_MediaPackageHarvestJob_Max_Fields>;
  min?: Maybe<Job_Queues_MediaPackageHarvestJob_Min_Fields>;
};


/** aggregate fields of "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_MediaPackageHarvestJob_Max_Order_By>;
  min?: Maybe<Job_Queues_MediaPackageHarvestJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_MediaPackageHarvestJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.MediaPackageHarvestJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_MediaPackageHarvestJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  event?: Maybe<Event_Bool_Exp>;
  eventId?: Maybe<Uuid_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  jobStatus?: Maybe<JobStatus_Bool_Exp>;
  jobStatusName?: Maybe<JobStatus_Enum_Comparison_Exp>;
  mediaPackageHarvestJobId?: Maybe<String_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Constraint {
  /** unique or primary key constraint */
  MediaPackageHarvestJobMediaPackageHarvestJobIdKey = 'MediaPackageHarvestJob_mediaPackageHarvestJobId_key',
  /** unique or primary key constraint */
  MediaPackageHarvestJobPkey = 'MediaPackageHarvestJob_pkey'
}

/** input type for inserting data into table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  event?: Maybe<Event_Obj_Rel_Insert_Input>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatus?: Maybe<JobStatus_Obj_Rel_Insert_Input>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  mediaPackageHarvestJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Job_Queues_MediaPackageHarvestJob_Max_Fields = {
  __typename?: 'job_queues_MediaPackageHarvestJob_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  mediaPackageHarvestJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  mediaPackageHarvestJobId?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_MediaPackageHarvestJob_Min_Fields = {
  __typename?: 'job_queues_MediaPackageHarvestJob_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  mediaPackageHarvestJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  mediaPackageHarvestJobId?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Mutation_Response = {
  __typename?: 'job_queues_MediaPackageHarvestJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_MediaPackageHarvestJob>;
};

/** input type for inserting object relation for remote table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_MediaPackageHarvestJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_On_Conflict = {
  constraint: Job_Queues_MediaPackageHarvestJob_Constraint;
  update_columns: Array<Job_Queues_MediaPackageHarvestJob_Update_Column>;
  where?: Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  event?: Maybe<Event_Order_By>;
  eventId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatus?: Maybe<JobStatus_Order_By>;
  jobStatusName?: Maybe<Order_By>;
  mediaPackageHarvestJobId?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  MediaPackageHarvestJobId = 'mediaPackageHarvestJobId',
  /** column name */
  Message = 'message',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "job_queues.MediaPackageHarvestJob" */
export type Job_Queues_MediaPackageHarvestJob_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  eventId?: Maybe<Scalars['uuid']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  mediaPackageHarvestJobId?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** update columns of table "job_queues.MediaPackageHarvestJob" */
export enum Job_Queues_MediaPackageHarvestJob_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EventId = 'eventId',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  MediaPackageHarvestJobId = 'mediaPackageHarvestJobId',
  /** column name */
  Message = 'message',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** columns and relationships of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob = {
  __typename?: 'job_queues_PublishVideoJob';
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentItem: ContentItem;
  contentItemId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  jobStatusName: Scalars['String'];
  updatedAt: Scalars['timestamptz'];
  vimeoVideoUrl?: Maybe<Scalars['String']>;
};

/** aggregated selection of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate = {
  __typename?: 'job_queues_PublishVideoJob_aggregate';
  aggregate?: Maybe<Job_Queues_PublishVideoJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_PublishVideoJob>;
};

/** aggregate fields of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate_Fields = {
  __typename?: 'job_queues_PublishVideoJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_PublishVideoJob_Max_Fields>;
  min?: Maybe<Job_Queues_PublishVideoJob_Min_Fields>;
};


/** aggregate fields of "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_PublishVideoJob_Max_Order_By>;
  min?: Maybe<Job_Queues_PublishVideoJob_Min_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_PublishVideoJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_PublishVideoJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.PublishVideoJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_PublishVideoJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_PublishVideoJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_PublishVideoJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_PublishVideoJob_Bool_Exp>>>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentItem?: Maybe<ContentItem_Bool_Exp>;
  contentItemId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  jobStatusName?: Maybe<String_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  vimeoVideoUrl?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Constraint {
  /** unique or primary key constraint */
  PublishVideoJobPkey = 'PublishVideoJob_pkey'
}

/** input type for inserting data into table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Insert_Input = {
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItem?: Maybe<ContentItem_Obj_Rel_Insert_Input>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vimeoVideoUrl?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Job_Queues_PublishVideoJob_Max_Fields = {
  __typename?: 'job_queues_PublishVideoJob_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vimeoVideoUrl?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatusName?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vimeoVideoUrl?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_PublishVideoJob_Min_Fields = {
  __typename?: 'job_queues_PublishVideoJob_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vimeoVideoUrl?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatusName?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vimeoVideoUrl?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Mutation_Response = {
  __typename?: 'job_queues_PublishVideoJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_PublishVideoJob>;
};

/** input type for inserting object relation for remote table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_PublishVideoJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_PublishVideoJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_On_Conflict = {
  constraint: Job_Queues_PublishVideoJob_Constraint;
  update_columns: Array<Job_Queues_PublishVideoJob_Update_Column>;
  where?: Maybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Order_By = {
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentItem?: Maybe<ContentItem_Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatusName?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  vimeoVideoUrl?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Select_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VimeoVideoUrl = 'vimeoVideoUrl'
}

/** input type for updating data in table "job_queues.PublishVideoJob" */
export type Job_Queues_PublishVideoJob_Set_Input = {
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  vimeoVideoUrl?: Maybe<Scalars['String']>;
};

/** update columns of table "job_queues.PublishVideoJob" */
export enum Job_Queues_PublishVideoJob_Update_Column {
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VimeoVideoUrl = 'vimeoVideoUrl'
}

/** columns and relationships of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob = {
  __typename?: 'job_queues_SubmissionRequestEmailJob';
  created_at: Scalars['timestamptz'];
  emailTemplate?: Maybe<Scalars['jsonb']>;
  id: Scalars['uuid'];
  processed: Scalars['Boolean'];
  updated_at: Scalars['timestamptz'];
  /** An object relationship */
  uploader: Uploader;
  uploaderId: Scalars['uuid'];
};


/** columns and relationships of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJobEmailTemplateArgs = {
  path?: Maybe<Scalars['String']>;
};

/** aggregated selection of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate = {
  __typename?: 'job_queues_SubmissionRequestEmailJob_aggregate';
  aggregate?: Maybe<Job_Queues_SubmissionRequestEmailJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_SubmissionRequestEmailJob>;
};

/** aggregate fields of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate_Fields = {
  __typename?: 'job_queues_SubmissionRequestEmailJob_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_SubmissionRequestEmailJob_Max_Fields>;
  min?: Maybe<Job_Queues_SubmissionRequestEmailJob_Min_Fields>;
};


/** aggregate fields of "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_SubmissionRequestEmailJob_Max_Order_By>;
  min?: Maybe<Job_Queues_SubmissionRequestEmailJob_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_SubmissionRequestEmailJob_Append_Input = {
  emailTemplate?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_SubmissionRequestEmailJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};

/** Boolean expression to filter rows from the table "job_queues.SubmissionRequestEmailJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_SubmissionRequestEmailJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  emailTemplate?: Maybe<Jsonb_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  processed?: Maybe<Boolean_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  uploader?: Maybe<Uploader_Bool_Exp>;
  uploaderId?: Maybe<Uuid_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Constraint {
  /** unique or primary key constraint */
  SubmissionRequestEmailJobPkey = 'SubmissionRequestEmailJob_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input = {
  emailTemplate?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input = {
  emailTemplate?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input = {
  emailTemplate?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  emailTemplate?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  processed?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uploader?: Maybe<Uploader_Obj_Rel_Insert_Input>;
  uploaderId?: Maybe<Scalars['uuid']>;
};

/** aggregate max on columns */
export type Job_Queues_SubmissionRequestEmailJob_Max_Fields = {
  __typename?: 'job_queues_SubmissionRequestEmailJob_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uploaderId?: Maybe<Scalars['uuid']>;
};

/** order by max() on columns of table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uploaderId?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_SubmissionRequestEmailJob_Min_Fields = {
  __typename?: 'job_queues_SubmissionRequestEmailJob_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uploaderId?: Maybe<Scalars['uuid']>;
};

/** order by min() on columns of table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uploaderId?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Mutation_Response = {
  __typename?: 'job_queues_SubmissionRequestEmailJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_SubmissionRequestEmailJob>;
};

/** input type for inserting object relation for remote table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_SubmissionRequestEmailJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_On_Conflict = {
  constraint: Job_Queues_SubmissionRequestEmailJob_Constraint;
  update_columns: Array<Job_Queues_SubmissionRequestEmailJob_Update_Column>;
  where?: Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Order_By = {
  created_at?: Maybe<Order_By>;
  emailTemplate?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  processed?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  uploader?: Maybe<Uploader_Order_By>;
  uploaderId?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type Job_Queues_SubmissionRequestEmailJob_Prepend_Input = {
  emailTemplate?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmailTemplate = 'emailTemplate',
  /** column name */
  Id = 'id',
  /** column name */
  Processed = 'processed',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UploaderId = 'uploaderId'
}

/** input type for updating data in table "job_queues.SubmissionRequestEmailJob" */
export type Job_Queues_SubmissionRequestEmailJob_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  emailTemplate?: Maybe<Scalars['jsonb']>;
  id?: Maybe<Scalars['uuid']>;
  processed?: Maybe<Scalars['Boolean']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  uploaderId?: Maybe<Scalars['uuid']>;
};

/** update columns of table "job_queues.SubmissionRequestEmailJob" */
export enum Job_Queues_SubmissionRequestEmailJob_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EmailTemplate = 'emailTemplate',
  /** column name */
  Id = 'id',
  /** column name */
  Processed = 'processed',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  UploaderId = 'uploaderId'
}

/** columns and relationships of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob = {
  __typename?: 'job_queues_UploadYouTubeVideoJob';
  /** An object relationship */
  attendeeGoogleAccount: AttendeeGoogleAccount;
  attendeeGoogleAccountId: Scalars['uuid'];
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  /** An object relationship */
  contentItem: ContentItem;
  contentItemId: Scalars['uuid'];
  createdAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  /** An object relationship */
  jobStatus: JobStatus;
  jobStatusName: JobStatus_Enum;
  message?: Maybe<Scalars['String']>;
  playlistId?: Maybe<Scalars['String']>;
  retriesCount: Scalars['Int'];
  updatedAt: Scalars['timestamptz'];
  videoDescription: Scalars['String'];
  videoPrivacyStatus: Scalars['String'];
  videoTitle: Scalars['String'];
};

/** aggregated selection of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_aggregate';
  aggregate?: Maybe<Job_Queues_UploadYouTubeVideoJob_Aggregate_Fields>;
  nodes: Array<Job_Queues_UploadYouTubeVideoJob>;
};

/** aggregate fields of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_aggregate_fields';
  avg?: Maybe<Job_Queues_UploadYouTubeVideoJob_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Job_Queues_UploadYouTubeVideoJob_Max_Fields>;
  min?: Maybe<Job_Queues_UploadYouTubeVideoJob_Min_Fields>;
  stddev?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Fields>;
  stddev_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Fields>;
  sum?: Maybe<Job_Queues_UploadYouTubeVideoJob_Sum_Fields>;
  var_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Pop_Fields>;
  var_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Samp_Fields>;
  variance?: Maybe<Job_Queues_UploadYouTubeVideoJob_Variance_Fields>;
};


/** aggregate fields of "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Aggregate_Order_By = {
  avg?: Maybe<Job_Queues_UploadYouTubeVideoJob_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Job_Queues_UploadYouTubeVideoJob_Max_Order_By>;
  min?: Maybe<Job_Queues_UploadYouTubeVideoJob_Min_Order_By>;
  stddev?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Order_By>;
  stddev_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Order_By>;
  sum?: Maybe<Job_Queues_UploadYouTubeVideoJob_Sum_Order_By>;
  var_pop?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Pop_Order_By>;
  var_samp?: Maybe<Job_Queues_UploadYouTubeVideoJob_Var_Samp_Order_By>;
  variance?: Maybe<Job_Queues_UploadYouTubeVideoJob_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Arr_Rel_Insert_Input = {
  data: Array<Job_Queues_UploadYouTubeVideoJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};

/** aggregate avg on columns */
export type Job_Queues_UploadYouTubeVideoJob_Avg_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_avg_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Avg_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "job_queues.UploadYouTubeVideoJob". All fields are combined with a logical 'AND'. */
export type Job_Queues_UploadYouTubeVideoJob_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>>>;
  _not?: Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>>>;
  attendeeGoogleAccount?: Maybe<AttendeeGoogleAccount_Bool_Exp>;
  attendeeGoogleAccountId?: Maybe<Uuid_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  contentItem?: Maybe<ContentItem_Bool_Exp>;
  contentItemId?: Maybe<Uuid_Comparison_Exp>;
  createdAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  jobStatus?: Maybe<JobStatus_Bool_Exp>;
  jobStatusName?: Maybe<JobStatus_Enum_Comparison_Exp>;
  message?: Maybe<String_Comparison_Exp>;
  playlistId?: Maybe<String_Comparison_Exp>;
  retriesCount?: Maybe<Int_Comparison_Exp>;
  updatedAt?: Maybe<Timestamptz_Comparison_Exp>;
  videoDescription?: Maybe<String_Comparison_Exp>;
  videoPrivacyStatus?: Maybe<String_Comparison_Exp>;
  videoTitle?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Constraint {
  /** unique or primary key constraint */
  UploadYouTubeVideoJobPkey = 'UploadYouTubeVideoJob_pkey'
}

/** input type for incrementing integer column in table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Inc_Input = {
  retriesCount?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Insert_Input = {
  attendeeGoogleAccount?: Maybe<AttendeeGoogleAccount_Obj_Rel_Insert_Input>;
  attendeeGoogleAccountId?: Maybe<Scalars['uuid']>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItem?: Maybe<ContentItem_Obj_Rel_Insert_Input>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatus?: Maybe<JobStatus_Obj_Rel_Insert_Input>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  playlistId?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoDescription?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Job_Queues_UploadYouTubeVideoJob_Max_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_max_fields';
  attendeeGoogleAccountId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  playlistId?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoDescription?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Max_Order_By = {
  attendeeGoogleAccountId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  playlistId?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  videoDescription?: Maybe<Order_By>;
  videoPrivacyStatus?: Maybe<Order_By>;
  videoTitle?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Job_Queues_UploadYouTubeVideoJob_Min_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_min_fields';
  attendeeGoogleAccountId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  message?: Maybe<Scalars['String']>;
  playlistId?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoDescription?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Min_Order_By = {
  attendeeGoogleAccountId?: Maybe<Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  playlistId?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  videoDescription?: Maybe<Order_By>;
  videoPrivacyStatus?: Maybe<Order_By>;
  videoTitle?: Maybe<Order_By>;
};

/** response of any mutation on the table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Mutation_Response = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Job_Queues_UploadYouTubeVideoJob>;
};

/** input type for inserting object relation for remote table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Obj_Rel_Insert_Input = {
  data: Job_Queues_UploadYouTubeVideoJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};

/** on conflict condition type for table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_On_Conflict = {
  constraint: Job_Queues_UploadYouTubeVideoJob_Constraint;
  update_columns: Array<Job_Queues_UploadYouTubeVideoJob_Update_Column>;
  where?: Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};

/** ordering options when selecting data from "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Order_By = {
  attendeeGoogleAccount?: Maybe<AttendeeGoogleAccount_Order_By>;
  attendeeGoogleAccountId?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  contentItem?: Maybe<ContentItem_Order_By>;
  contentItemId?: Maybe<Order_By>;
  createdAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  jobStatus?: Maybe<JobStatus_Order_By>;
  jobStatusName?: Maybe<Order_By>;
  message?: Maybe<Order_By>;
  playlistId?: Maybe<Order_By>;
  retriesCount?: Maybe<Order_By>;
  updatedAt?: Maybe<Order_By>;
  videoDescription?: Maybe<Order_By>;
  videoPrivacyStatus?: Maybe<Order_By>;
  videoTitle?: Maybe<Order_By>;
};

/** primary key columns input for table: "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Select_Column {
  /** column name */
  AttendeeGoogleAccountId = 'attendeeGoogleAccountId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  PlaylistId = 'playlistId',
  /** column name */
  RetriesCount = 'retriesCount',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VideoDescription = 'videoDescription',
  /** column name */
  VideoPrivacyStatus = 'videoPrivacyStatus',
  /** column name */
  VideoTitle = 'videoTitle'
}

/** input type for updating data in table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Set_Input = {
  attendeeGoogleAccountId?: Maybe<Scalars['uuid']>;
  conferenceId?: Maybe<Scalars['uuid']>;
  contentItemId?: Maybe<Scalars['uuid']>;
  createdAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  jobStatusName?: Maybe<JobStatus_Enum>;
  message?: Maybe<Scalars['String']>;
  playlistId?: Maybe<Scalars['String']>;
  retriesCount?: Maybe<Scalars['Int']>;
  updatedAt?: Maybe<Scalars['timestamptz']>;
  videoDescription?: Maybe<Scalars['String']>;
  videoPrivacyStatus?: Maybe<Scalars['String']>;
  videoTitle?: Maybe<Scalars['String']>;
};

/** aggregate stddev on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_stddev_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_stddev_pop_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Pop_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_stddev_samp_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Stddev_Samp_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Job_Queues_UploadYouTubeVideoJob_Sum_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_sum_fields';
  retriesCount?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Sum_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** update columns of table "job_queues.UploadYouTubeVideoJob" */
export enum Job_Queues_UploadYouTubeVideoJob_Update_Column {
  /** column name */
  AttendeeGoogleAccountId = 'attendeeGoogleAccountId',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  ContentItemId = 'contentItemId',
  /** column name */
  CreatedAt = 'createdAt',
  /** column name */
  Id = 'id',
  /** column name */
  JobStatusName = 'jobStatusName',
  /** column name */
  Message = 'message',
  /** column name */
  PlaylistId = 'playlistId',
  /** column name */
  RetriesCount = 'retriesCount',
  /** column name */
  UpdatedAt = 'updatedAt',
  /** column name */
  VideoDescription = 'videoDescription',
  /** column name */
  VideoPrivacyStatus = 'videoPrivacyStatus',
  /** column name */
  VideoTitle = 'videoTitle'
}

/** aggregate var_pop on columns */
export type Job_Queues_UploadYouTubeVideoJob_Var_Pop_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_var_pop_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Var_Pop_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Job_Queues_UploadYouTubeVideoJob_Var_Samp_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_var_samp_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Var_Samp_Order_By = {
  retriesCount?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Job_Queues_UploadYouTubeVideoJob_Variance_Fields = {
  __typename?: 'job_queues_UploadYouTubeVideoJob_variance_fields';
  retriesCount?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "job_queues.UploadYouTubeVideoJob" */
export type Job_Queues_UploadYouTubeVideoJob_Variance_Order_By = {
  retriesCount?: Maybe<Order_By>;
};


/** expression to compare columns of type json. All fields are combined with logical 'AND'. */
export type Json_Comparison_Exp = {
  _eq?: Maybe<Scalars['json']>;
  _gt?: Maybe<Scalars['json']>;
  _gte?: Maybe<Scalars['json']>;
  _in?: Maybe<Array<Scalars['json']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['json']>;
  _lte?: Maybe<Scalars['json']>;
  _neq?: Maybe<Scalars['json']>;
  _nin?: Maybe<Array<Scalars['json']>>;
};


/** expression to compare columns of type jsonb. All fields are combined with logical 'AND'. */
export type Jsonb_Comparison_Exp = {
  /** is the column contained in the given json value */
  _contained_in?: Maybe<Scalars['jsonb']>;
  /** does the column contain the given json value at the top level */
  _contains?: Maybe<Scalars['jsonb']>;
  _eq?: Maybe<Scalars['jsonb']>;
  _gt?: Maybe<Scalars['jsonb']>;
  _gte?: Maybe<Scalars['jsonb']>;
  /** does the string exist as a top-level key in the column */
  _has_key?: Maybe<Scalars['String']>;
  /** do all of these strings exist as top-level keys in the column */
  _has_keys_all?: Maybe<Array<Scalars['String']>>;
  /** do any of these strings exist as top-level keys in the column */
  _has_keys_any?: Maybe<Array<Scalars['String']>>;
  _in?: Maybe<Array<Scalars['jsonb']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['jsonb']>;
  _lte?: Maybe<Scalars['jsonb']>;
  _neq?: Maybe<Scalars['jsonb']>;
  _nin?: Maybe<Array<Scalars['jsonb']>>;
};

/** mutation root */
export type Mutation_Root = {
  __typename?: 'mutation_root';
  /** perform the action: "createContentGroupRoom" */
  createContentGroupRoom?: Maybe<CreateContentGroupRoomOutput>;
  /** perform the action: "createRoomDm" */
  createRoomDm?: Maybe<CreateRoomDmOutput>;
  /** delete data from the table: "Attendee" */
  delete_Attendee?: Maybe<Attendee_Mutation_Response>;
  /** delete data from the table: "AttendeeGoogleAccount" */
  delete_AttendeeGoogleAccount?: Maybe<AttendeeGoogleAccount_Mutation_Response>;
  /** delete single row from the table: "AttendeeGoogleAccount" */
  delete_AttendeeGoogleAccount_by_pk?: Maybe<AttendeeGoogleAccount>;
  /** delete data from the table: "AttendeeProfile" */
  delete_AttendeeProfile?: Maybe<AttendeeProfile_Mutation_Response>;
  /** delete single row from the table: "AttendeeProfile" */
  delete_AttendeeProfile_by_pk?: Maybe<AttendeeProfile>;
  /** delete single row from the table: "Attendee" */
  delete_Attendee_by_pk?: Maybe<Attendee>;
  /** delete data from the table: "Broadcast" */
  delete_Broadcast?: Maybe<Broadcast_Mutation_Response>;
  /** delete data from the table: "BroadcastContentItem" */
  delete_BroadcastContentItem?: Maybe<BroadcastContentItem_Mutation_Response>;
  /** delete single row from the table: "BroadcastContentItem" */
  delete_BroadcastContentItem_by_pk?: Maybe<BroadcastContentItem>;
  /** delete single row from the table: "Broadcast" */
  delete_Broadcast_by_pk?: Maybe<Broadcast>;
  /** delete data from the table: "Conference" */
  delete_Conference?: Maybe<Conference_Mutation_Response>;
  /** delete data from the table: "ConferenceConfiguration" */
  delete_ConferenceConfiguration?: Maybe<ConferenceConfiguration_Mutation_Response>;
  /** delete single row from the table: "ConferenceConfiguration" */
  delete_ConferenceConfiguration_by_pk?: Maybe<ConferenceConfiguration>;
  /** delete data from the table: "ConferenceDemoCode" */
  delete_ConferenceDemoCode?: Maybe<ConferenceDemoCode_Mutation_Response>;
  /** delete single row from the table: "ConferenceDemoCode" */
  delete_ConferenceDemoCode_by_pk?: Maybe<ConferenceDemoCode>;
  /** delete data from the table: "ConferencePrepareJob" */
  delete_ConferencePrepareJob?: Maybe<ConferencePrepareJob_Mutation_Response>;
  /** delete single row from the table: "ConferencePrepareJob" */
  delete_ConferencePrepareJob_by_pk?: Maybe<ConferencePrepareJob>;
  /** delete single row from the table: "Conference" */
  delete_Conference_by_pk?: Maybe<Conference>;
  /** delete data from the table: "ContentGroup" */
  delete_ContentGroup?: Maybe<ContentGroup_Mutation_Response>;
  /** delete data from the table: "ContentGroupHallway" */
  delete_ContentGroupHallway?: Maybe<ContentGroupHallway_Mutation_Response>;
  /** delete single row from the table: "ContentGroupHallway" */
  delete_ContentGroupHallway_by_pk?: Maybe<ContentGroupHallway>;
  /** delete data from the table: "ContentGroupPerson" */
  delete_ContentGroupPerson?: Maybe<ContentGroupPerson_Mutation_Response>;
  /** delete single row from the table: "ContentGroupPerson" */
  delete_ContentGroupPerson_by_pk?: Maybe<ContentGroupPerson>;
  /** delete data from the table: "ContentGroupTag" */
  delete_ContentGroupTag?: Maybe<ContentGroupTag_Mutation_Response>;
  /** delete single row from the table: "ContentGroupTag" */
  delete_ContentGroupTag_by_pk?: Maybe<ContentGroupTag>;
  /** delete data from the table: "ContentGroupType" */
  delete_ContentGroupType?: Maybe<ContentGroupType_Mutation_Response>;
  /** delete single row from the table: "ContentGroupType" */
  delete_ContentGroupType_by_pk?: Maybe<ContentGroupType>;
  /** delete single row from the table: "ContentGroup" */
  delete_ContentGroup_by_pk?: Maybe<ContentGroup>;
  /** delete data from the table: "ContentItem" */
  delete_ContentItem?: Maybe<ContentItem_Mutation_Response>;
  /** delete single row from the table: "ContentItem" */
  delete_ContentItem_by_pk?: Maybe<ContentItem>;
  /** delete data from the table: "ContentPerson" */
  delete_ContentPerson?: Maybe<ContentPerson_Mutation_Response>;
  /** delete single row from the table: "ContentPerson" */
  delete_ContentPerson_by_pk?: Maybe<ContentPerson>;
  /** delete data from the table: "ContentType" */
  delete_ContentType?: Maybe<ContentType_Mutation_Response>;
  /** delete single row from the table: "ContentType" */
  delete_ContentType_by_pk?: Maybe<ContentType>;
  /** delete data from the table: "Email" */
  delete_Email?: Maybe<Email_Mutation_Response>;
  /** delete single row from the table: "Email" */
  delete_Email_by_pk?: Maybe<Email>;
  /** delete data from the table: "Event" */
  delete_Event?: Maybe<Event_Mutation_Response>;
  /** delete data from the table: "EventParticipantStream" */
  delete_EventParticipantStream?: Maybe<EventParticipantStream_Mutation_Response>;
  /** delete single row from the table: "EventParticipantStream" */
  delete_EventParticipantStream_by_pk?: Maybe<EventParticipantStream>;
  /** delete data from the table: "EventPerson" */
  delete_EventPerson?: Maybe<EventPerson_Mutation_Response>;
  /** delete data from the table: "EventPersonRole" */
  delete_EventPersonRole?: Maybe<EventPersonRole_Mutation_Response>;
  /** delete single row from the table: "EventPersonRole" */
  delete_EventPersonRole_by_pk?: Maybe<EventPersonRole>;
  /** delete single row from the table: "EventPerson" */
  delete_EventPerson_by_pk?: Maybe<EventPerson>;
  /** delete data from the table: "EventRoomJoinRequest" */
  delete_EventRoomJoinRequest?: Maybe<EventRoomJoinRequest_Mutation_Response>;
  /** delete single row from the table: "EventRoomJoinRequest" */
  delete_EventRoomJoinRequest_by_pk?: Maybe<EventRoomJoinRequest>;
  /** delete data from the table: "EventTag" */
  delete_EventTag?: Maybe<EventTag_Mutation_Response>;
  /** delete single row from the table: "EventTag" */
  delete_EventTag_by_pk?: Maybe<EventTag>;
  /** delete data from the table: "EventVonageSession" */
  delete_EventVonageSession?: Maybe<EventVonageSession_Mutation_Response>;
  /** delete single row from the table: "EventVonageSession" */
  delete_EventVonageSession_by_pk?: Maybe<EventVonageSession>;
  /** delete single row from the table: "Event" */
  delete_Event_by_pk?: Maybe<Event>;
  /** delete data from the table: "ExecutedTransitions" */
  delete_ExecutedTransitions?: Maybe<ExecutedTransitions_Mutation_Response>;
  /** delete single row from the table: "ExecutedTransitions" */
  delete_ExecutedTransitions_by_pk?: Maybe<ExecutedTransitions>;
  /** delete data from the table: "Group" */
  delete_Group?: Maybe<Group_Mutation_Response>;
  /** delete data from the table: "GroupAttendee" */
  delete_GroupAttendee?: Maybe<GroupAttendee_Mutation_Response>;
  /** delete single row from the table: "GroupAttendee" */
  delete_GroupAttendee_by_pk?: Maybe<GroupAttendee>;
  /** delete data from the table: "GroupRole" */
  delete_GroupRole?: Maybe<GroupRole_Mutation_Response>;
  /** delete single row from the table: "GroupRole" */
  delete_GroupRole_by_pk?: Maybe<GroupRole>;
  /** delete single row from the table: "Group" */
  delete_Group_by_pk?: Maybe<Group>;
  /** delete data from the table: "Hallway" */
  delete_Hallway?: Maybe<Hallway_Mutation_Response>;
  /** delete single row from the table: "Hallway" */
  delete_Hallway_by_pk?: Maybe<Hallway>;
  /** delete data from the table: "InputType" */
  delete_InputType?: Maybe<InputType_Mutation_Response>;
  /** delete single row from the table: "InputType" */
  delete_InputType_by_pk?: Maybe<InputType>;
  /** delete data from the table: "Invitation" */
  delete_Invitation?: Maybe<Invitation_Mutation_Response>;
  /** delete single row from the table: "Invitation" */
  delete_Invitation_by_pk?: Maybe<Invitation>;
  /** delete data from the table: "JobStatus" */
  delete_JobStatus?: Maybe<JobStatus_Mutation_Response>;
  /** delete single row from the table: "JobStatus" */
  delete_JobStatus_by_pk?: Maybe<JobStatus>;
  /** delete data from the table: "MediaLiveChannel" */
  delete_MediaLiveChannel?: Maybe<MediaLiveChannel_Mutation_Response>;
  /** delete single row from the table: "MediaLiveChannel" */
  delete_MediaLiveChannel_by_pk?: Maybe<MediaLiveChannel>;
  /** delete data from the table: "OnlineStatus" */
  delete_OnlineStatus?: Maybe<OnlineStatus_Mutation_Response>;
  /** delete single row from the table: "OnlineStatus" */
  delete_OnlineStatus_by_pk?: Maybe<OnlineStatus>;
  /** delete data from the table: "OriginatingData" */
  delete_OriginatingData?: Maybe<OriginatingData_Mutation_Response>;
  /** delete single row from the table: "OriginatingData" */
  delete_OriginatingData_by_pk?: Maybe<OriginatingData>;
  /** delete data from the table: "Permission" */
  delete_Permission?: Maybe<Permission_Mutation_Response>;
  /** delete single row from the table: "Permission" */
  delete_Permission_by_pk?: Maybe<Permission>;
  /** delete data from the table: "PushNotificationSubscription" */
  delete_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
  /** delete single row from the table: "PushNotificationSubscription" */
  delete_PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
  /** delete data from the table: "RequiredContentItem" */
  delete_RequiredContentItem?: Maybe<RequiredContentItem_Mutation_Response>;
  /** delete single row from the table: "RequiredContentItem" */
  delete_RequiredContentItem_by_pk?: Maybe<RequiredContentItem>;
  /** delete data from the table: "Role" */
  delete_Role?: Maybe<Role_Mutation_Response>;
  /** delete data from the table: "RolePermission" */
  delete_RolePermission?: Maybe<RolePermission_Mutation_Response>;
  /** delete single row from the table: "RolePermission" */
  delete_RolePermission_by_pk?: Maybe<RolePermission>;
  /** delete single row from the table: "Role" */
  delete_Role_by_pk?: Maybe<Role>;
  /** delete data from the table: "Room" */
  delete_Room?: Maybe<Room_Mutation_Response>;
  /** delete data from the table: "RoomMode" */
  delete_RoomMode?: Maybe<RoomMode_Mutation_Response>;
  /** delete single row from the table: "RoomMode" */
  delete_RoomMode_by_pk?: Maybe<RoomMode>;
  /** delete data from the table: "RoomParticipant" */
  delete_RoomParticipant?: Maybe<RoomParticipant_Mutation_Response>;
  /** delete single row from the table: "RoomParticipant" */
  delete_RoomParticipant_by_pk?: Maybe<RoomParticipant>;
  /** delete data from the table: "RoomPerson" */
  delete_RoomPerson?: Maybe<RoomPerson_Mutation_Response>;
  /** delete data from the table: "RoomPersonRole" */
  delete_RoomPersonRole?: Maybe<RoomPersonRole_Mutation_Response>;
  /** delete single row from the table: "RoomPersonRole" */
  delete_RoomPersonRole_by_pk?: Maybe<RoomPersonRole>;
  /** delete single row from the table: "RoomPerson" */
  delete_RoomPerson_by_pk?: Maybe<RoomPerson>;
  /** delete data from the table: "RoomPrivacy" */
  delete_RoomPrivacy?: Maybe<RoomPrivacy_Mutation_Response>;
  /** delete single row from the table: "RoomPrivacy" */
  delete_RoomPrivacy_by_pk?: Maybe<RoomPrivacy>;
  /** delete single row from the table: "Room" */
  delete_Room_by_pk?: Maybe<Room>;
  /** delete data from the table: "Tag" */
  delete_Tag?: Maybe<Tag_Mutation_Response>;
  /** delete single row from the table: "Tag" */
  delete_Tag_by_pk?: Maybe<Tag>;
  /** delete data from the table: "TranscriptionJob" */
  delete_TranscriptionJob?: Maybe<TranscriptionJob_Mutation_Response>;
  /** delete single row from the table: "TranscriptionJob" */
  delete_TranscriptionJob_by_pk?: Maybe<TranscriptionJob>;
  /** delete data from the table: "Transitions" */
  delete_Transitions?: Maybe<Transitions_Mutation_Response>;
  /** delete single row from the table: "Transitions" */
  delete_Transitions_by_pk?: Maybe<Transitions>;
  /** delete data from the table: "Uploader" */
  delete_Uploader?: Maybe<Uploader_Mutation_Response>;
  /** delete single row from the table: "Uploader" */
  delete_Uploader_by_pk?: Maybe<Uploader>;
  /** delete data from the table: "User" */
  delete_User?: Maybe<User_Mutation_Response>;
  /** delete single row from the table: "User" */
  delete_User_by_pk?: Maybe<User>;
  /** delete data from the table: "VideoRenderJob" */
  delete_VideoRenderJob?: Maybe<VideoRenderJob_Mutation_Response>;
  /** delete single row from the table: "VideoRenderJob" */
  delete_VideoRenderJob_by_pk?: Maybe<VideoRenderJob>;
  /** delete data from the table: "YouTubeUpload" */
  delete_YouTubeUpload?: Maybe<YouTubeUpload_Mutation_Response>;
  /** delete single row from the table: "YouTubeUpload" */
  delete_YouTubeUpload_by_pk?: Maybe<YouTubeUpload>;
  /** delete data from the table: "analytics.AppStats" */
  delete_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
  /** delete single row from the table: "analytics.AppStats" */
  delete_analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
  /** delete data from the table: "chat.Chat" */
  delete_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
  /** delete single row from the table: "chat.Chat" */
  delete_chat_Chat_by_pk?: Maybe<Chat_Chat>;
  /** delete data from the table: "chat.Flag" */
  delete_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
  /** delete data from the table: "chat.FlagType" */
  delete_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
  /** delete single row from the table: "chat.FlagType" */
  delete_chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
  /** delete single row from the table: "chat.Flag" */
  delete_chat_Flag_by_pk?: Maybe<Chat_Flag>;
  /** delete data from the table: "chat.Message" */
  delete_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
  /** delete data from the table: "chat.MessageType" */
  delete_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
  /** delete single row from the table: "chat.MessageType" */
  delete_chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
  /** delete single row from the table: "chat.Message" */
  delete_chat_Message_by_pk?: Maybe<Chat_Message>;
  /** delete data from the table: "chat.Pin" */
  delete_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
  /** delete single row from the table: "chat.Pin" */
  delete_chat_Pin_by_pk?: Maybe<Chat_Pin>;
  /** delete data from the table: "chat.Reaction" */
  delete_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
  /** delete data from the table: "chat.ReactionType" */
  delete_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
  /** delete single row from the table: "chat.ReactionType" */
  delete_chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
  /** delete single row from the table: "chat.Reaction" */
  delete_chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
  /** delete data from the table: "chat.ReadUpToIndex" */
  delete_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
  /** delete single row from the table: "chat.ReadUpToIndex" */
  delete_chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
  /** delete data from the table: "chat.Subscription" */
  delete_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
  /** delete single row from the table: "chat.Subscription" */
  delete_chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
  /** delete data from the table: "job_queues.ChannelStackCreateJob" */
  delete_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.ChannelStackCreateJob" */
  delete_job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
  /** delete data from the table: "job_queues.CombineVideosJob" */
  delete_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.CombineVideosJob" */
  delete_job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
  /** delete data from the table: "job_queues.CustomEmailJob" */
  delete_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.CustomEmailJob" */
  delete_job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
  /** delete data from the table: "job_queues.InvitationEmailJob" */
  delete_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.InvitationEmailJob" */
  delete_job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
  /** delete data from the table: "job_queues.MediaPackageHarvestJob" */
  delete_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.MediaPackageHarvestJob" */
  delete_job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
  /** delete data from the table: "job_queues.PublishVideoJob" */
  delete_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.PublishVideoJob" */
  delete_job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
  /** delete data from the table: "job_queues.SubmissionRequestEmailJob" */
  delete_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.SubmissionRequestEmailJob" */
  delete_job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
  /** delete data from the table: "job_queues.UploadYouTubeVideoJob" */
  delete_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
  /** delete single row from the table: "job_queues.UploadYouTubeVideoJob" */
  delete_job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
  /** delete data from the table: "room.ShuffleAlgorithm" */
  delete_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
  /** delete single row from the table: "room.ShuffleAlgorithm" */
  delete_room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
  /** delete data from the table: "room.ShufflePeriod" */
  delete_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
  /** delete single row from the table: "room.ShufflePeriod" */
  delete_room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
  /** delete data from the table: "room.ShuffleQueueEntry" */
  delete_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
  /** delete single row from the table: "room.ShuffleQueueEntry" */
  delete_room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
  /** delete data from the table: "room.ShuffleRoom" */
  delete_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
  /** delete single row from the table: "room.ShuffleRoom" */
  delete_room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
  /** delete data from the table: "system.Configuration" */
  delete_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
  /** delete data from the table: "system.ConfigurationKey" */
  delete_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
  /** delete single row from the table: "system.ConfigurationKey" */
  delete_system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
  /** delete single row from the table: "system.Configuration" */
  delete_system_Configuration_by_pk?: Maybe<System_Configuration>;
  /** perform the action: "getGoogleOAuthUrl" */
  getGoogleOAuthUrl?: Maybe<GetGoogleOAuthUrlOutput>;
  /** insert data into the table: "Attendee" */
  insert_Attendee?: Maybe<Attendee_Mutation_Response>;
  /** insert data into the table: "AttendeeGoogleAccount" */
  insert_AttendeeGoogleAccount?: Maybe<AttendeeGoogleAccount_Mutation_Response>;
  /** insert a single row into the table: "AttendeeGoogleAccount" */
  insert_AttendeeGoogleAccount_one?: Maybe<AttendeeGoogleAccount>;
  /** insert data into the table: "AttendeeProfile" */
  insert_AttendeeProfile?: Maybe<AttendeeProfile_Mutation_Response>;
  /** insert a single row into the table: "AttendeeProfile" */
  insert_AttendeeProfile_one?: Maybe<AttendeeProfile>;
  /** insert a single row into the table: "Attendee" */
  insert_Attendee_one?: Maybe<Attendee>;
  /** insert data into the table: "Broadcast" */
  insert_Broadcast?: Maybe<Broadcast_Mutation_Response>;
  /** insert data into the table: "BroadcastContentItem" */
  insert_BroadcastContentItem?: Maybe<BroadcastContentItem_Mutation_Response>;
  /** insert a single row into the table: "BroadcastContentItem" */
  insert_BroadcastContentItem_one?: Maybe<BroadcastContentItem>;
  /** insert a single row into the table: "Broadcast" */
  insert_Broadcast_one?: Maybe<Broadcast>;
  /** insert data into the table: "Conference" */
  insert_Conference?: Maybe<Conference_Mutation_Response>;
  /** insert data into the table: "ConferenceConfiguration" */
  insert_ConferenceConfiguration?: Maybe<ConferenceConfiguration_Mutation_Response>;
  /** insert a single row into the table: "ConferenceConfiguration" */
  insert_ConferenceConfiguration_one?: Maybe<ConferenceConfiguration>;
  /** insert data into the table: "ConferenceDemoCode" */
  insert_ConferenceDemoCode?: Maybe<ConferenceDemoCode_Mutation_Response>;
  /** insert a single row into the table: "ConferenceDemoCode" */
  insert_ConferenceDemoCode_one?: Maybe<ConferenceDemoCode>;
  /** insert data into the table: "ConferencePrepareJob" */
  insert_ConferencePrepareJob?: Maybe<ConferencePrepareJob_Mutation_Response>;
  /** insert a single row into the table: "ConferencePrepareJob" */
  insert_ConferencePrepareJob_one?: Maybe<ConferencePrepareJob>;
  /** insert a single row into the table: "Conference" */
  insert_Conference_one?: Maybe<Conference>;
  /** insert data into the table: "ContentGroup" */
  insert_ContentGroup?: Maybe<ContentGroup_Mutation_Response>;
  /** insert data into the table: "ContentGroupHallway" */
  insert_ContentGroupHallway?: Maybe<ContentGroupHallway_Mutation_Response>;
  /** insert a single row into the table: "ContentGroupHallway" */
  insert_ContentGroupHallway_one?: Maybe<ContentGroupHallway>;
  /** insert data into the table: "ContentGroupPerson" */
  insert_ContentGroupPerson?: Maybe<ContentGroupPerson_Mutation_Response>;
  /** insert a single row into the table: "ContentGroupPerson" */
  insert_ContentGroupPerson_one?: Maybe<ContentGroupPerson>;
  /** insert data into the table: "ContentGroupTag" */
  insert_ContentGroupTag?: Maybe<ContentGroupTag_Mutation_Response>;
  /** insert a single row into the table: "ContentGroupTag" */
  insert_ContentGroupTag_one?: Maybe<ContentGroupTag>;
  /** insert data into the table: "ContentGroupType" */
  insert_ContentGroupType?: Maybe<ContentGroupType_Mutation_Response>;
  /** insert a single row into the table: "ContentGroupType" */
  insert_ContentGroupType_one?: Maybe<ContentGroupType>;
  /** insert a single row into the table: "ContentGroup" */
  insert_ContentGroup_one?: Maybe<ContentGroup>;
  /** insert data into the table: "ContentItem" */
  insert_ContentItem?: Maybe<ContentItem_Mutation_Response>;
  /** insert a single row into the table: "ContentItem" */
  insert_ContentItem_one?: Maybe<ContentItem>;
  /** insert data into the table: "ContentPerson" */
  insert_ContentPerson?: Maybe<ContentPerson_Mutation_Response>;
  /** insert a single row into the table: "ContentPerson" */
  insert_ContentPerson_one?: Maybe<ContentPerson>;
  /** insert data into the table: "ContentType" */
  insert_ContentType?: Maybe<ContentType_Mutation_Response>;
  /** insert a single row into the table: "ContentType" */
  insert_ContentType_one?: Maybe<ContentType>;
  /** insert data into the table: "Email" */
  insert_Email?: Maybe<Email_Mutation_Response>;
  /** insert a single row into the table: "Email" */
  insert_Email_one?: Maybe<Email>;
  /** insert data into the table: "Event" */
  insert_Event?: Maybe<Event_Mutation_Response>;
  /** insert data into the table: "EventParticipantStream" */
  insert_EventParticipantStream?: Maybe<EventParticipantStream_Mutation_Response>;
  /** insert a single row into the table: "EventParticipantStream" */
  insert_EventParticipantStream_one?: Maybe<EventParticipantStream>;
  /** insert data into the table: "EventPerson" */
  insert_EventPerson?: Maybe<EventPerson_Mutation_Response>;
  /** insert data into the table: "EventPersonRole" */
  insert_EventPersonRole?: Maybe<EventPersonRole_Mutation_Response>;
  /** insert a single row into the table: "EventPersonRole" */
  insert_EventPersonRole_one?: Maybe<EventPersonRole>;
  /** insert a single row into the table: "EventPerson" */
  insert_EventPerson_one?: Maybe<EventPerson>;
  /** insert data into the table: "EventRoomJoinRequest" */
  insert_EventRoomJoinRequest?: Maybe<EventRoomJoinRequest_Mutation_Response>;
  /** insert a single row into the table: "EventRoomJoinRequest" */
  insert_EventRoomJoinRequest_one?: Maybe<EventRoomJoinRequest>;
  /** insert data into the table: "EventTag" */
  insert_EventTag?: Maybe<EventTag_Mutation_Response>;
  /** insert a single row into the table: "EventTag" */
  insert_EventTag_one?: Maybe<EventTag>;
  /** insert data into the table: "EventVonageSession" */
  insert_EventVonageSession?: Maybe<EventVonageSession_Mutation_Response>;
  /** insert a single row into the table: "EventVonageSession" */
  insert_EventVonageSession_one?: Maybe<EventVonageSession>;
  /** insert a single row into the table: "Event" */
  insert_Event_one?: Maybe<Event>;
  /** insert data into the table: "ExecutedTransitions" */
  insert_ExecutedTransitions?: Maybe<ExecutedTransitions_Mutation_Response>;
  /** insert a single row into the table: "ExecutedTransitions" */
  insert_ExecutedTransitions_one?: Maybe<ExecutedTransitions>;
  /** insert data into the table: "Group" */
  insert_Group?: Maybe<Group_Mutation_Response>;
  /** insert data into the table: "GroupAttendee" */
  insert_GroupAttendee?: Maybe<GroupAttendee_Mutation_Response>;
  /** insert a single row into the table: "GroupAttendee" */
  insert_GroupAttendee_one?: Maybe<GroupAttendee>;
  /** insert data into the table: "GroupRole" */
  insert_GroupRole?: Maybe<GroupRole_Mutation_Response>;
  /** insert a single row into the table: "GroupRole" */
  insert_GroupRole_one?: Maybe<GroupRole>;
  /** insert a single row into the table: "Group" */
  insert_Group_one?: Maybe<Group>;
  /** insert data into the table: "Hallway" */
  insert_Hallway?: Maybe<Hallway_Mutation_Response>;
  /** insert a single row into the table: "Hallway" */
  insert_Hallway_one?: Maybe<Hallway>;
  /** insert data into the table: "InputType" */
  insert_InputType?: Maybe<InputType_Mutation_Response>;
  /** insert a single row into the table: "InputType" */
  insert_InputType_one?: Maybe<InputType>;
  /** insert data into the table: "Invitation" */
  insert_Invitation?: Maybe<Invitation_Mutation_Response>;
  /** insert a single row into the table: "Invitation" */
  insert_Invitation_one?: Maybe<Invitation>;
  /** insert data into the table: "JobStatus" */
  insert_JobStatus?: Maybe<JobStatus_Mutation_Response>;
  /** insert a single row into the table: "JobStatus" */
  insert_JobStatus_one?: Maybe<JobStatus>;
  /** insert data into the table: "MediaLiveChannel" */
  insert_MediaLiveChannel?: Maybe<MediaLiveChannel_Mutation_Response>;
  /** insert a single row into the table: "MediaLiveChannel" */
  insert_MediaLiveChannel_one?: Maybe<MediaLiveChannel>;
  /** insert data into the table: "OnlineStatus" */
  insert_OnlineStatus?: Maybe<OnlineStatus_Mutation_Response>;
  /** insert a single row into the table: "OnlineStatus" */
  insert_OnlineStatus_one?: Maybe<OnlineStatus>;
  /** insert data into the table: "OriginatingData" */
  insert_OriginatingData?: Maybe<OriginatingData_Mutation_Response>;
  /** insert a single row into the table: "OriginatingData" */
  insert_OriginatingData_one?: Maybe<OriginatingData>;
  /** insert data into the table: "Permission" */
  insert_Permission?: Maybe<Permission_Mutation_Response>;
  /** insert a single row into the table: "Permission" */
  insert_Permission_one?: Maybe<Permission>;
  /** insert data into the table: "PushNotificationSubscription" */
  insert_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
  /** insert a single row into the table: "PushNotificationSubscription" */
  insert_PushNotificationSubscription_one?: Maybe<PushNotificationSubscription>;
  /** insert data into the table: "RequiredContentItem" */
  insert_RequiredContentItem?: Maybe<RequiredContentItem_Mutation_Response>;
  /** insert a single row into the table: "RequiredContentItem" */
  insert_RequiredContentItem_one?: Maybe<RequiredContentItem>;
  /** insert data into the table: "Role" */
  insert_Role?: Maybe<Role_Mutation_Response>;
  /** insert data into the table: "RolePermission" */
  insert_RolePermission?: Maybe<RolePermission_Mutation_Response>;
  /** insert a single row into the table: "RolePermission" */
  insert_RolePermission_one?: Maybe<RolePermission>;
  /** insert a single row into the table: "Role" */
  insert_Role_one?: Maybe<Role>;
  /** insert data into the table: "Room" */
  insert_Room?: Maybe<Room_Mutation_Response>;
  /** insert data into the table: "RoomMode" */
  insert_RoomMode?: Maybe<RoomMode_Mutation_Response>;
  /** insert a single row into the table: "RoomMode" */
  insert_RoomMode_one?: Maybe<RoomMode>;
  /** insert data into the table: "RoomParticipant" */
  insert_RoomParticipant?: Maybe<RoomParticipant_Mutation_Response>;
  /** insert a single row into the table: "RoomParticipant" */
  insert_RoomParticipant_one?: Maybe<RoomParticipant>;
  /** insert data into the table: "RoomPerson" */
  insert_RoomPerson?: Maybe<RoomPerson_Mutation_Response>;
  /** insert data into the table: "RoomPersonRole" */
  insert_RoomPersonRole?: Maybe<RoomPersonRole_Mutation_Response>;
  /** insert a single row into the table: "RoomPersonRole" */
  insert_RoomPersonRole_one?: Maybe<RoomPersonRole>;
  /** insert a single row into the table: "RoomPerson" */
  insert_RoomPerson_one?: Maybe<RoomPerson>;
  /** insert data into the table: "RoomPrivacy" */
  insert_RoomPrivacy?: Maybe<RoomPrivacy_Mutation_Response>;
  /** insert a single row into the table: "RoomPrivacy" */
  insert_RoomPrivacy_one?: Maybe<RoomPrivacy>;
  /** insert a single row into the table: "Room" */
  insert_Room_one?: Maybe<Room>;
  /** insert data into the table: "Tag" */
  insert_Tag?: Maybe<Tag_Mutation_Response>;
  /** insert a single row into the table: "Tag" */
  insert_Tag_one?: Maybe<Tag>;
  /** insert data into the table: "TranscriptionJob" */
  insert_TranscriptionJob?: Maybe<TranscriptionJob_Mutation_Response>;
  /** insert a single row into the table: "TranscriptionJob" */
  insert_TranscriptionJob_one?: Maybe<TranscriptionJob>;
  /** insert data into the table: "Transitions" */
  insert_Transitions?: Maybe<Transitions_Mutation_Response>;
  /** insert a single row into the table: "Transitions" */
  insert_Transitions_one?: Maybe<Transitions>;
  /** insert data into the table: "Uploader" */
  insert_Uploader?: Maybe<Uploader_Mutation_Response>;
  /** insert a single row into the table: "Uploader" */
  insert_Uploader_one?: Maybe<Uploader>;
  /** insert data into the table: "User" */
  insert_User?: Maybe<User_Mutation_Response>;
  /** insert a single row into the table: "User" */
  insert_User_one?: Maybe<User>;
  /** insert data into the table: "VideoRenderJob" */
  insert_VideoRenderJob?: Maybe<VideoRenderJob_Mutation_Response>;
  /** insert a single row into the table: "VideoRenderJob" */
  insert_VideoRenderJob_one?: Maybe<VideoRenderJob>;
  /** insert data into the table: "YouTubeUpload" */
  insert_YouTubeUpload?: Maybe<YouTubeUpload_Mutation_Response>;
  /** insert a single row into the table: "YouTubeUpload" */
  insert_YouTubeUpload_one?: Maybe<YouTubeUpload>;
  /** insert data into the table: "analytics.AppStats" */
  insert_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
  /** insert a single row into the table: "analytics.AppStats" */
  insert_analytics_AppStats_one?: Maybe<Analytics_AppStats>;
  /** insert data into the table: "chat.Chat" */
  insert_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
  /** insert a single row into the table: "chat.Chat" */
  insert_chat_Chat_one?: Maybe<Chat_Chat>;
  /** insert data into the table: "chat.Flag" */
  insert_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
  /** insert data into the table: "chat.FlagType" */
  insert_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
  /** insert a single row into the table: "chat.FlagType" */
  insert_chat_FlagType_one?: Maybe<Chat_FlagType>;
  /** insert a single row into the table: "chat.Flag" */
  insert_chat_Flag_one?: Maybe<Chat_Flag>;
  /** insert data into the table: "chat.Message" */
  insert_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
  /** insert data into the table: "chat.MessageType" */
  insert_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
  /** insert a single row into the table: "chat.MessageType" */
  insert_chat_MessageType_one?: Maybe<Chat_MessageType>;
  /** insert a single row into the table: "chat.Message" */
  insert_chat_Message_one?: Maybe<Chat_Message>;
  /** insert data into the table: "chat.Pin" */
  insert_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
  /** insert a single row into the table: "chat.Pin" */
  insert_chat_Pin_one?: Maybe<Chat_Pin>;
  /** insert data into the table: "chat.Reaction" */
  insert_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
  /** insert data into the table: "chat.ReactionType" */
  insert_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
  /** insert a single row into the table: "chat.ReactionType" */
  insert_chat_ReactionType_one?: Maybe<Chat_ReactionType>;
  /** insert a single row into the table: "chat.Reaction" */
  insert_chat_Reaction_one?: Maybe<Chat_Reaction>;
  /** insert data into the table: "chat.ReadUpToIndex" */
  insert_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
  /** insert a single row into the table: "chat.ReadUpToIndex" */
  insert_chat_ReadUpToIndex_one?: Maybe<Chat_ReadUpToIndex>;
  /** insert data into the table: "chat.Subscription" */
  insert_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
  /** insert a single row into the table: "chat.Subscription" */
  insert_chat_Subscription_one?: Maybe<Chat_Subscription>;
  /** insert data into the table: "job_queues.ChannelStackCreateJob" */
  insert_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.ChannelStackCreateJob" */
  insert_job_queues_ChannelStackCreateJob_one?: Maybe<Job_Queues_ChannelStackCreateJob>;
  /** insert data into the table: "job_queues.CombineVideosJob" */
  insert_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.CombineVideosJob" */
  insert_job_queues_CombineVideosJob_one?: Maybe<Job_Queues_CombineVideosJob>;
  /** insert data into the table: "job_queues.CustomEmailJob" */
  insert_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.CustomEmailJob" */
  insert_job_queues_CustomEmailJob_one?: Maybe<Job_Queues_CustomEmailJob>;
  /** insert data into the table: "job_queues.InvitationEmailJob" */
  insert_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.InvitationEmailJob" */
  insert_job_queues_InvitationEmailJob_one?: Maybe<Job_Queues_InvitationEmailJob>;
  /** insert data into the table: "job_queues.MediaPackageHarvestJob" */
  insert_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.MediaPackageHarvestJob" */
  insert_job_queues_MediaPackageHarvestJob_one?: Maybe<Job_Queues_MediaPackageHarvestJob>;
  /** insert data into the table: "job_queues.PublishVideoJob" */
  insert_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.PublishVideoJob" */
  insert_job_queues_PublishVideoJob_one?: Maybe<Job_Queues_PublishVideoJob>;
  /** insert data into the table: "job_queues.SubmissionRequestEmailJob" */
  insert_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.SubmissionRequestEmailJob" */
  insert_job_queues_SubmissionRequestEmailJob_one?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
  /** insert data into the table: "job_queues.UploadYouTubeVideoJob" */
  insert_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
  /** insert a single row into the table: "job_queues.UploadYouTubeVideoJob" */
  insert_job_queues_UploadYouTubeVideoJob_one?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
  /** insert data into the table: "room.ShuffleAlgorithm" */
  insert_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
  /** insert a single row into the table: "room.ShuffleAlgorithm" */
  insert_room_ShuffleAlgorithm_one?: Maybe<Room_ShuffleAlgorithm>;
  /** insert data into the table: "room.ShufflePeriod" */
  insert_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
  /** insert a single row into the table: "room.ShufflePeriod" */
  insert_room_ShufflePeriod_one?: Maybe<Room_ShufflePeriod>;
  /** insert data into the table: "room.ShuffleQueueEntry" */
  insert_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
  /** insert a single row into the table: "room.ShuffleQueueEntry" */
  insert_room_ShuffleQueueEntry_one?: Maybe<Room_ShuffleQueueEntry>;
  /** insert data into the table: "room.ShuffleRoom" */
  insert_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
  /** insert a single row into the table: "room.ShuffleRoom" */
  insert_room_ShuffleRoom_one?: Maybe<Room_ShuffleRoom>;
  /** insert data into the table: "system.Configuration" */
  insert_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
  /** insert data into the table: "system.ConfigurationKey" */
  insert_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
  /** insert a single row into the table: "system.ConfigurationKey" */
  insert_system_ConfigurationKey_one?: Maybe<System_ConfigurationKey>;
  /** insert a single row into the table: "system.Configuration" */
  insert_system_Configuration_one?: Maybe<System_Configuration>;
  /** perform the action: "invitationConfirmCurrent" */
  invitationConfirmCurrent?: Maybe<ConfirmInvitationOutput>;
  /** perform the action: "invitationConfirmSendInitialEmail" */
  invitationConfirmSendInitialEmail?: Maybe<InvitationConfirmationEmailOutput>;
  /** perform the action: "invitationConfirmSendRepeatEmail" */
  invitationConfirmSendRepeatEmail?: Maybe<InvitationConfirmationEmailOutput>;
  /** perform the action: "invitationConfirmWithCode" */
  invitationConfirmWithCode?: Maybe<ConfirmInvitationOutput>;
  /** perform the action: "joinEventVonageSession" */
  joinEventVonageSession?: Maybe<JoinEventVonageSessionOutput>;
  /** perform the action: "joinRoomVonageSession" */
  joinRoomVonageSession?: Maybe<JoinRoomVonageSessionOutput>;
  /** perform the action: "presence_Flush" */
  presence_Flush: PresenceFlushOutput;
  /** perform the action: "refreshYouTubeData" */
  refreshYouTubeData?: Maybe<RefreshYouTubeDataOutput>;
  /** perform the action: "stopEventBroadcast" */
  stopEventBroadcast?: Maybe<StopEventBroadcastOutput>;
  /** perform the action: "submitContentItem" */
  submitContentItem?: Maybe<SubmitContentItemOutput>;
  /** perform the action: "submitGoogleOAuthCode" */
  submitGoogleOAuthCode?: Maybe<SubmitGoogleOAuthCodeOutput>;
  /** perform the action: "updateProfilePhoto" */
  updateProfilePhoto?: Maybe<UpdateProfilePhotoResponse>;
  /** perform the action: "updateSubtitles" */
  updateSubtitles?: Maybe<SubmitUpdatedSubtitlesOutput>;
  /** update data of the table: "Attendee" */
  update_Attendee?: Maybe<Attendee_Mutation_Response>;
  /** update data of the table: "AttendeeGoogleAccount" */
  update_AttendeeGoogleAccount?: Maybe<AttendeeGoogleAccount_Mutation_Response>;
  /** update single row of the table: "AttendeeGoogleAccount" */
  update_AttendeeGoogleAccount_by_pk?: Maybe<AttendeeGoogleAccount>;
  /** update data of the table: "AttendeeProfile" */
  update_AttendeeProfile?: Maybe<AttendeeProfile_Mutation_Response>;
  /** update single row of the table: "AttendeeProfile" */
  update_AttendeeProfile_by_pk?: Maybe<AttendeeProfile>;
  /** update single row of the table: "Attendee" */
  update_Attendee_by_pk?: Maybe<Attendee>;
  /** update data of the table: "Broadcast" */
  update_Broadcast?: Maybe<Broadcast_Mutation_Response>;
  /** update data of the table: "BroadcastContentItem" */
  update_BroadcastContentItem?: Maybe<BroadcastContentItem_Mutation_Response>;
  /** update single row of the table: "BroadcastContentItem" */
  update_BroadcastContentItem_by_pk?: Maybe<BroadcastContentItem>;
  /** update single row of the table: "Broadcast" */
  update_Broadcast_by_pk?: Maybe<Broadcast>;
  /** update data of the table: "Conference" */
  update_Conference?: Maybe<Conference_Mutation_Response>;
  /** update data of the table: "ConferenceConfiguration" */
  update_ConferenceConfiguration?: Maybe<ConferenceConfiguration_Mutation_Response>;
  /** update single row of the table: "ConferenceConfiguration" */
  update_ConferenceConfiguration_by_pk?: Maybe<ConferenceConfiguration>;
  /** update data of the table: "ConferenceDemoCode" */
  update_ConferenceDemoCode?: Maybe<ConferenceDemoCode_Mutation_Response>;
  /** update single row of the table: "ConferenceDemoCode" */
  update_ConferenceDemoCode_by_pk?: Maybe<ConferenceDemoCode>;
  /** update data of the table: "ConferencePrepareJob" */
  update_ConferencePrepareJob?: Maybe<ConferencePrepareJob_Mutation_Response>;
  /** update single row of the table: "ConferencePrepareJob" */
  update_ConferencePrepareJob_by_pk?: Maybe<ConferencePrepareJob>;
  /** update single row of the table: "Conference" */
  update_Conference_by_pk?: Maybe<Conference>;
  /** update data of the table: "ContentGroup" */
  update_ContentGroup?: Maybe<ContentGroup_Mutation_Response>;
  /** update data of the table: "ContentGroupHallway" */
  update_ContentGroupHallway?: Maybe<ContentGroupHallway_Mutation_Response>;
  /** update single row of the table: "ContentGroupHallway" */
  update_ContentGroupHallway_by_pk?: Maybe<ContentGroupHallway>;
  /** update data of the table: "ContentGroupPerson" */
  update_ContentGroupPerson?: Maybe<ContentGroupPerson_Mutation_Response>;
  /** update single row of the table: "ContentGroupPerson" */
  update_ContentGroupPerson_by_pk?: Maybe<ContentGroupPerson>;
  /** update data of the table: "ContentGroupTag" */
  update_ContentGroupTag?: Maybe<ContentGroupTag_Mutation_Response>;
  /** update single row of the table: "ContentGroupTag" */
  update_ContentGroupTag_by_pk?: Maybe<ContentGroupTag>;
  /** update data of the table: "ContentGroupType" */
  update_ContentGroupType?: Maybe<ContentGroupType_Mutation_Response>;
  /** update single row of the table: "ContentGroupType" */
  update_ContentGroupType_by_pk?: Maybe<ContentGroupType>;
  /** update single row of the table: "ContentGroup" */
  update_ContentGroup_by_pk?: Maybe<ContentGroup>;
  /** update data of the table: "ContentItem" */
  update_ContentItem?: Maybe<ContentItem_Mutation_Response>;
  /** update single row of the table: "ContentItem" */
  update_ContentItem_by_pk?: Maybe<ContentItem>;
  /** update data of the table: "ContentPerson" */
  update_ContentPerson?: Maybe<ContentPerson_Mutation_Response>;
  /** update single row of the table: "ContentPerson" */
  update_ContentPerson_by_pk?: Maybe<ContentPerson>;
  /** update data of the table: "ContentType" */
  update_ContentType?: Maybe<ContentType_Mutation_Response>;
  /** update single row of the table: "ContentType" */
  update_ContentType_by_pk?: Maybe<ContentType>;
  /** update data of the table: "Email" */
  update_Email?: Maybe<Email_Mutation_Response>;
  /** update single row of the table: "Email" */
  update_Email_by_pk?: Maybe<Email>;
  /** update data of the table: "Event" */
  update_Event?: Maybe<Event_Mutation_Response>;
  /** update data of the table: "EventParticipantStream" */
  update_EventParticipantStream?: Maybe<EventParticipantStream_Mutation_Response>;
  /** update single row of the table: "EventParticipantStream" */
  update_EventParticipantStream_by_pk?: Maybe<EventParticipantStream>;
  /** update data of the table: "EventPerson" */
  update_EventPerson?: Maybe<EventPerson_Mutation_Response>;
  /** update data of the table: "EventPersonRole" */
  update_EventPersonRole?: Maybe<EventPersonRole_Mutation_Response>;
  /** update single row of the table: "EventPersonRole" */
  update_EventPersonRole_by_pk?: Maybe<EventPersonRole>;
  /** update single row of the table: "EventPerson" */
  update_EventPerson_by_pk?: Maybe<EventPerson>;
  /** update data of the table: "EventRoomJoinRequest" */
  update_EventRoomJoinRequest?: Maybe<EventRoomJoinRequest_Mutation_Response>;
  /** update single row of the table: "EventRoomJoinRequest" */
  update_EventRoomJoinRequest_by_pk?: Maybe<EventRoomJoinRequest>;
  /** update data of the table: "EventTag" */
  update_EventTag?: Maybe<EventTag_Mutation_Response>;
  /** update single row of the table: "EventTag" */
  update_EventTag_by_pk?: Maybe<EventTag>;
  /** update data of the table: "EventVonageSession" */
  update_EventVonageSession?: Maybe<EventVonageSession_Mutation_Response>;
  /** update single row of the table: "EventVonageSession" */
  update_EventVonageSession_by_pk?: Maybe<EventVonageSession>;
  /** update single row of the table: "Event" */
  update_Event_by_pk?: Maybe<Event>;
  /** update data of the table: "ExecutedTransitions" */
  update_ExecutedTransitions?: Maybe<ExecutedTransitions_Mutation_Response>;
  /** update single row of the table: "ExecutedTransitions" */
  update_ExecutedTransitions_by_pk?: Maybe<ExecutedTransitions>;
  /** update data of the table: "Group" */
  update_Group?: Maybe<Group_Mutation_Response>;
  /** update data of the table: "GroupAttendee" */
  update_GroupAttendee?: Maybe<GroupAttendee_Mutation_Response>;
  /** update single row of the table: "GroupAttendee" */
  update_GroupAttendee_by_pk?: Maybe<GroupAttendee>;
  /** update data of the table: "GroupRole" */
  update_GroupRole?: Maybe<GroupRole_Mutation_Response>;
  /** update single row of the table: "GroupRole" */
  update_GroupRole_by_pk?: Maybe<GroupRole>;
  /** update single row of the table: "Group" */
  update_Group_by_pk?: Maybe<Group>;
  /** update data of the table: "Hallway" */
  update_Hallway?: Maybe<Hallway_Mutation_Response>;
  /** update single row of the table: "Hallway" */
  update_Hallway_by_pk?: Maybe<Hallway>;
  /** update data of the table: "InputType" */
  update_InputType?: Maybe<InputType_Mutation_Response>;
  /** update single row of the table: "InputType" */
  update_InputType_by_pk?: Maybe<InputType>;
  /** update data of the table: "Invitation" */
  update_Invitation?: Maybe<Invitation_Mutation_Response>;
  /** update single row of the table: "Invitation" */
  update_Invitation_by_pk?: Maybe<Invitation>;
  /** update data of the table: "JobStatus" */
  update_JobStatus?: Maybe<JobStatus_Mutation_Response>;
  /** update single row of the table: "JobStatus" */
  update_JobStatus_by_pk?: Maybe<JobStatus>;
  /** update data of the table: "MediaLiveChannel" */
  update_MediaLiveChannel?: Maybe<MediaLiveChannel_Mutation_Response>;
  /** update single row of the table: "MediaLiveChannel" */
  update_MediaLiveChannel_by_pk?: Maybe<MediaLiveChannel>;
  /** update data of the table: "OnlineStatus" */
  update_OnlineStatus?: Maybe<OnlineStatus_Mutation_Response>;
  /** update single row of the table: "OnlineStatus" */
  update_OnlineStatus_by_pk?: Maybe<OnlineStatus>;
  /** update data of the table: "OriginatingData" */
  update_OriginatingData?: Maybe<OriginatingData_Mutation_Response>;
  /** update single row of the table: "OriginatingData" */
  update_OriginatingData_by_pk?: Maybe<OriginatingData>;
  /** update data of the table: "Permission" */
  update_Permission?: Maybe<Permission_Mutation_Response>;
  /** update single row of the table: "Permission" */
  update_Permission_by_pk?: Maybe<Permission>;
  /** update data of the table: "PushNotificationSubscription" */
  update_PushNotificationSubscription?: Maybe<PushNotificationSubscription_Mutation_Response>;
  /** update single row of the table: "PushNotificationSubscription" */
  update_PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
  /** update data of the table: "RequiredContentItem" */
  update_RequiredContentItem?: Maybe<RequiredContentItem_Mutation_Response>;
  /** update single row of the table: "RequiredContentItem" */
  update_RequiredContentItem_by_pk?: Maybe<RequiredContentItem>;
  /** update data of the table: "Role" */
  update_Role?: Maybe<Role_Mutation_Response>;
  /** update data of the table: "RolePermission" */
  update_RolePermission?: Maybe<RolePermission_Mutation_Response>;
  /** update single row of the table: "RolePermission" */
  update_RolePermission_by_pk?: Maybe<RolePermission>;
  /** update single row of the table: "Role" */
  update_Role_by_pk?: Maybe<Role>;
  /** update data of the table: "Room" */
  update_Room?: Maybe<Room_Mutation_Response>;
  /** update data of the table: "RoomMode" */
  update_RoomMode?: Maybe<RoomMode_Mutation_Response>;
  /** update single row of the table: "RoomMode" */
  update_RoomMode_by_pk?: Maybe<RoomMode>;
  /** update data of the table: "RoomParticipant" */
  update_RoomParticipant?: Maybe<RoomParticipant_Mutation_Response>;
  /** update single row of the table: "RoomParticipant" */
  update_RoomParticipant_by_pk?: Maybe<RoomParticipant>;
  /** update data of the table: "RoomPerson" */
  update_RoomPerson?: Maybe<RoomPerson_Mutation_Response>;
  /** update data of the table: "RoomPersonRole" */
  update_RoomPersonRole?: Maybe<RoomPersonRole_Mutation_Response>;
  /** update single row of the table: "RoomPersonRole" */
  update_RoomPersonRole_by_pk?: Maybe<RoomPersonRole>;
  /** update single row of the table: "RoomPerson" */
  update_RoomPerson_by_pk?: Maybe<RoomPerson>;
  /** update data of the table: "RoomPrivacy" */
  update_RoomPrivacy?: Maybe<RoomPrivacy_Mutation_Response>;
  /** update single row of the table: "RoomPrivacy" */
  update_RoomPrivacy_by_pk?: Maybe<RoomPrivacy>;
  /** update single row of the table: "Room" */
  update_Room_by_pk?: Maybe<Room>;
  /** update data of the table: "Tag" */
  update_Tag?: Maybe<Tag_Mutation_Response>;
  /** update single row of the table: "Tag" */
  update_Tag_by_pk?: Maybe<Tag>;
  /** update data of the table: "TranscriptionJob" */
  update_TranscriptionJob?: Maybe<TranscriptionJob_Mutation_Response>;
  /** update single row of the table: "TranscriptionJob" */
  update_TranscriptionJob_by_pk?: Maybe<TranscriptionJob>;
  /** update data of the table: "Transitions" */
  update_Transitions?: Maybe<Transitions_Mutation_Response>;
  /** update single row of the table: "Transitions" */
  update_Transitions_by_pk?: Maybe<Transitions>;
  /** update data of the table: "Uploader" */
  update_Uploader?: Maybe<Uploader_Mutation_Response>;
  /** update single row of the table: "Uploader" */
  update_Uploader_by_pk?: Maybe<Uploader>;
  /** update data of the table: "User" */
  update_User?: Maybe<User_Mutation_Response>;
  /** update single row of the table: "User" */
  update_User_by_pk?: Maybe<User>;
  /** update data of the table: "VideoRenderJob" */
  update_VideoRenderJob?: Maybe<VideoRenderJob_Mutation_Response>;
  /** update single row of the table: "VideoRenderJob" */
  update_VideoRenderJob_by_pk?: Maybe<VideoRenderJob>;
  /** update data of the table: "YouTubeUpload" */
  update_YouTubeUpload?: Maybe<YouTubeUpload_Mutation_Response>;
  /** update single row of the table: "YouTubeUpload" */
  update_YouTubeUpload_by_pk?: Maybe<YouTubeUpload>;
  /** update data of the table: "analytics.AppStats" */
  update_analytics_AppStats?: Maybe<Analytics_AppStats_Mutation_Response>;
  /** update single row of the table: "analytics.AppStats" */
  update_analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
  /** update data of the table: "chat.Chat" */
  update_chat_Chat?: Maybe<Chat_Chat_Mutation_Response>;
  /** update single row of the table: "chat.Chat" */
  update_chat_Chat_by_pk?: Maybe<Chat_Chat>;
  /** update data of the table: "chat.Flag" */
  update_chat_Flag?: Maybe<Chat_Flag_Mutation_Response>;
  /** update data of the table: "chat.FlagType" */
  update_chat_FlagType?: Maybe<Chat_FlagType_Mutation_Response>;
  /** update single row of the table: "chat.FlagType" */
  update_chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
  /** update single row of the table: "chat.Flag" */
  update_chat_Flag_by_pk?: Maybe<Chat_Flag>;
  /** update data of the table: "chat.Message" */
  update_chat_Message?: Maybe<Chat_Message_Mutation_Response>;
  /** update data of the table: "chat.MessageType" */
  update_chat_MessageType?: Maybe<Chat_MessageType_Mutation_Response>;
  /** update single row of the table: "chat.MessageType" */
  update_chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
  /** update single row of the table: "chat.Message" */
  update_chat_Message_by_pk?: Maybe<Chat_Message>;
  /** update data of the table: "chat.Pin" */
  update_chat_Pin?: Maybe<Chat_Pin_Mutation_Response>;
  /** update single row of the table: "chat.Pin" */
  update_chat_Pin_by_pk?: Maybe<Chat_Pin>;
  /** update data of the table: "chat.Reaction" */
  update_chat_Reaction?: Maybe<Chat_Reaction_Mutation_Response>;
  /** update data of the table: "chat.ReactionType" */
  update_chat_ReactionType?: Maybe<Chat_ReactionType_Mutation_Response>;
  /** update single row of the table: "chat.ReactionType" */
  update_chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
  /** update single row of the table: "chat.Reaction" */
  update_chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
  /** update data of the table: "chat.ReadUpToIndex" */
  update_chat_ReadUpToIndex?: Maybe<Chat_ReadUpToIndex_Mutation_Response>;
  /** update single row of the table: "chat.ReadUpToIndex" */
  update_chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
  /** update data of the table: "chat.Subscription" */
  update_chat_Subscription?: Maybe<Chat_Subscription_Mutation_Response>;
  /** update single row of the table: "chat.Subscription" */
  update_chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
  /** update data of the table: "job_queues.ChannelStackCreateJob" */
  update_job_queues_ChannelStackCreateJob?: Maybe<Job_Queues_ChannelStackCreateJob_Mutation_Response>;
  /** update single row of the table: "job_queues.ChannelStackCreateJob" */
  update_job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
  /** update data of the table: "job_queues.CombineVideosJob" */
  update_job_queues_CombineVideosJob?: Maybe<Job_Queues_CombineVideosJob_Mutation_Response>;
  /** update single row of the table: "job_queues.CombineVideosJob" */
  update_job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
  /** update data of the table: "job_queues.CustomEmailJob" */
  update_job_queues_CustomEmailJob?: Maybe<Job_Queues_CustomEmailJob_Mutation_Response>;
  /** update single row of the table: "job_queues.CustomEmailJob" */
  update_job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
  /** update data of the table: "job_queues.InvitationEmailJob" */
  update_job_queues_InvitationEmailJob?: Maybe<Job_Queues_InvitationEmailJob_Mutation_Response>;
  /** update single row of the table: "job_queues.InvitationEmailJob" */
  update_job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
  /** update data of the table: "job_queues.MediaPackageHarvestJob" */
  update_job_queues_MediaPackageHarvestJob?: Maybe<Job_Queues_MediaPackageHarvestJob_Mutation_Response>;
  /** update single row of the table: "job_queues.MediaPackageHarvestJob" */
  update_job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
  /** update data of the table: "job_queues.PublishVideoJob" */
  update_job_queues_PublishVideoJob?: Maybe<Job_Queues_PublishVideoJob_Mutation_Response>;
  /** update single row of the table: "job_queues.PublishVideoJob" */
  update_job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
  /** update data of the table: "job_queues.SubmissionRequestEmailJob" */
  update_job_queues_SubmissionRequestEmailJob?: Maybe<Job_Queues_SubmissionRequestEmailJob_Mutation_Response>;
  /** update single row of the table: "job_queues.SubmissionRequestEmailJob" */
  update_job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
  /** update data of the table: "job_queues.UploadYouTubeVideoJob" */
  update_job_queues_UploadYouTubeVideoJob?: Maybe<Job_Queues_UploadYouTubeVideoJob_Mutation_Response>;
  /** update single row of the table: "job_queues.UploadYouTubeVideoJob" */
  update_job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
  /** update data of the table: "room.ShuffleAlgorithm" */
  update_room_ShuffleAlgorithm?: Maybe<Room_ShuffleAlgorithm_Mutation_Response>;
  /** update single row of the table: "room.ShuffleAlgorithm" */
  update_room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
  /** update data of the table: "room.ShufflePeriod" */
  update_room_ShufflePeriod?: Maybe<Room_ShufflePeriod_Mutation_Response>;
  /** update single row of the table: "room.ShufflePeriod" */
  update_room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
  /** update data of the table: "room.ShuffleQueueEntry" */
  update_room_ShuffleQueueEntry?: Maybe<Room_ShuffleQueueEntry_Mutation_Response>;
  /** update single row of the table: "room.ShuffleQueueEntry" */
  update_room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
  /** update data of the table: "room.ShuffleRoom" */
  update_room_ShuffleRoom?: Maybe<Room_ShuffleRoom_Mutation_Response>;
  /** update single row of the table: "room.ShuffleRoom" */
  update_room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
  /** update data of the table: "system.Configuration" */
  update_system_Configuration?: Maybe<System_Configuration_Mutation_Response>;
  /** update data of the table: "system.ConfigurationKey" */
  update_system_ConfigurationKey?: Maybe<System_ConfigurationKey_Mutation_Response>;
  /** update single row of the table: "system.ConfigurationKey" */
  update_system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
  /** update single row of the table: "system.Configuration" */
  update_system_Configuration_by_pk?: Maybe<System_Configuration>;
};


/** mutation root */
export type Mutation_RootCreateContentGroupRoomArgs = {
  conferenceId: Scalars['uuid'];
  contentGroupId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootCreateRoomDmArgs = {
  attendeeIds: Array<Maybe<Scalars['uuid']>>;
  conferenceId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_AttendeeArgs = {
  where: Attendee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_AttendeeGoogleAccountArgs = {
  where: AttendeeGoogleAccount_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_AttendeeGoogleAccount_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_AttendeeProfileArgs = {
  where: AttendeeProfile_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_AttendeeProfile_By_PkArgs = {
  attendeeId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Attendee_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_BroadcastArgs = {
  where: Broadcast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_BroadcastContentItemArgs = {
  where: BroadcastContentItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_BroadcastContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Broadcast_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ConferenceArgs = {
  where: Conference_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ConferenceConfigurationArgs = {
  where: ConferenceConfiguration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ConferenceConfiguration_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ConferenceDemoCodeArgs = {
  where: ConferenceDemoCode_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ConferenceDemoCode_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ConferencePrepareJobArgs = {
  where: ConferencePrepareJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ConferencePrepareJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Conference_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupArgs = {
  where: ContentGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupHallwayArgs = {
  where: ContentGroupHallway_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupHallway_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupPersonArgs = {
  where: ContentGroupPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupTagArgs = {
  where: ContentGroupTag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupTypeArgs = {
  where: ContentGroupType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentGroupType_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_ContentGroup_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ContentItemArgs = {
  where: ContentItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ContentPersonArgs = {
  where: ContentPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ContentTypeArgs = {
  where: ContentType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ContentType_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_EmailArgs = {
  where: Email_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Email_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_EventArgs = {
  where: Event_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_EventParticipantStreamArgs = {
  where: EventParticipantStream_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_EventParticipantStream_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_EventPersonArgs = {
  where: EventPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_EventPersonRoleArgs = {
  where: EventPersonRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_EventPersonRole_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_EventPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_EventRoomJoinRequestArgs = {
  where: EventRoomJoinRequest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_EventRoomJoinRequest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_EventTagArgs = {
  where: EventTag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_EventTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_EventVonageSessionArgs = {
  where: EventVonageSession_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_EventVonageSession_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Event_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_ExecutedTransitionsArgs = {
  where: ExecutedTransitions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_ExecutedTransitions_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_GroupArgs = {
  where: Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_GroupAttendeeArgs = {
  where: GroupAttendee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_GroupAttendee_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_GroupRoleArgs = {
  where: GroupRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_GroupRole_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Group_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_HallwayArgs = {
  where: Hallway_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Hallway_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_InputTypeArgs = {
  where: InputType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_InputType_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_InvitationArgs = {
  where: Invitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Invitation_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_JobStatusArgs = {
  where: JobStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_JobStatus_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_MediaLiveChannelArgs = {
  where: MediaLiveChannel_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_MediaLiveChannel_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_OnlineStatusArgs = {
  where: OnlineStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_OnlineStatus_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_OriginatingDataArgs = {
  where: OriginatingData_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_OriginatingData_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_PermissionArgs = {
  where: Permission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Permission_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_PushNotificationSubscriptionArgs = {
  where: PushNotificationSubscription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_PushNotificationSubscription_By_PkArgs = {
  endpoint: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_RequiredContentItemArgs = {
  where: RequiredContentItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RequiredContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_RoleArgs = {
  where: Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RolePermissionArgs = {
  where: RolePermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RolePermission_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Role_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_RoomArgs = {
  where: Room_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RoomModeArgs = {
  where: RoomMode_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RoomMode_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_RoomParticipantArgs = {
  where: RoomParticipant_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RoomParticipant_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_RoomPersonArgs = {
  where: RoomPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RoomPersonRoleArgs = {
  where: RoomPersonRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RoomPersonRole_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_RoomPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_RoomPrivacyArgs = {
  where: RoomPrivacy_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_RoomPrivacy_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Room_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_TagArgs = {
  where: Tag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Tag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_TranscriptionJobArgs = {
  where: TranscriptionJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_TranscriptionJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_TransitionsArgs = {
  where: Transitions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Transitions_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_UploaderArgs = {
  where: Uploader_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Uploader_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_UserArgs = {
  where: User_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_User_By_PkArgs = {
  id: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_VideoRenderJobArgs = {
  where: VideoRenderJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_VideoRenderJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_YouTubeUploadArgs = {
  where: YouTubeUpload_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_YouTubeUpload_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Analytics_AppStatsArgs = {
  where: Analytics_AppStats_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Analytics_AppStats_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_ChatArgs = {
  where: Chat_Chat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_Chat_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_FlagArgs = {
  where: Chat_Flag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_FlagTypeArgs = {
  where: Chat_FlagType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_FlagType_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_Flag_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_MessageArgs = {
  where: Chat_Message_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_MessageTypeArgs = {
  where: Chat_MessageType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_MessageType_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_Message_By_PkArgs = {
  id: Scalars['Int'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_PinArgs = {
  where: Chat_Pin_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_Pin_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_ReactionArgs = {
  where: Chat_Reaction_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_ReactionTypeArgs = {
  where: Chat_ReactionType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_ReactionType_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_Reaction_By_PkArgs = {
  sId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_ReadUpToIndexArgs = {
  where: Chat_ReadUpToIndex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_ReadUpToIndex_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Chat_SubscriptionArgs = {
  where: Chat_Subscription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Chat_Subscription_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackCreateJobArgs = {
  where: Job_Queues_ChannelStackCreateJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_ChannelStackCreateJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_CombineVideosJobArgs = {
  where: Job_Queues_CombineVideosJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_CombineVideosJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_CustomEmailJobArgs = {
  where: Job_Queues_CustomEmailJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_CustomEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_InvitationEmailJobArgs = {
  where: Job_Queues_InvitationEmailJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_InvitationEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_MediaPackageHarvestJobArgs = {
  where: Job_Queues_MediaPackageHarvestJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_MediaPackageHarvestJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_PublishVideoJobArgs = {
  where: Job_Queues_PublishVideoJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_PublishVideoJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_SubmissionRequestEmailJobArgs = {
  where: Job_Queues_SubmissionRequestEmailJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_SubmissionRequestEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_UploadYouTubeVideoJobArgs = {
  where: Job_Queues_UploadYouTubeVideoJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Job_Queues_UploadYouTubeVideoJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Room_ShuffleAlgorithmArgs = {
  where: Room_ShuffleAlgorithm_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Room_ShuffleAlgorithm_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_Room_ShufflePeriodArgs = {
  where: Room_ShufflePeriod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Room_ShufflePeriod_By_PkArgs = {
  id: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootDelete_Room_ShuffleQueueEntryArgs = {
  where: Room_ShuffleQueueEntry_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Room_ShuffleQueueEntry_By_PkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_Room_ShuffleRoomArgs = {
  where: Room_ShuffleRoom_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_Room_ShuffleRoom_By_PkArgs = {
  id: Scalars['bigint'];
};


/** mutation root */
export type Mutation_RootDelete_System_ConfigurationArgs = {
  where: System_Configuration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_System_ConfigurationKeyArgs = {
  where: System_ConfigurationKey_Bool_Exp;
};


/** mutation root */
export type Mutation_RootDelete_System_ConfigurationKey_By_PkArgs = {
  name: Scalars['String'];
};


/** mutation root */
export type Mutation_RootDelete_System_Configuration_By_PkArgs = {
  key: System_ConfigurationKey_Enum;
};


/** mutation root */
export type Mutation_RootGetGoogleOAuthUrlArgs = {
  attendeeId: Scalars['uuid'];
  scopes: Array<Scalars['String']>;
};


/** mutation root */
export type Mutation_RootInsert_AttendeeArgs = {
  objects: Array<Attendee_Insert_Input>;
  on_conflict?: Maybe<Attendee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AttendeeGoogleAccountArgs = {
  objects: Array<AttendeeGoogleAccount_Insert_Input>;
  on_conflict?: Maybe<AttendeeGoogleAccount_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AttendeeGoogleAccount_OneArgs = {
  object: AttendeeGoogleAccount_Insert_Input;
  on_conflict?: Maybe<AttendeeGoogleAccount_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AttendeeProfileArgs = {
  objects: Array<AttendeeProfile_Insert_Input>;
  on_conflict?: Maybe<AttendeeProfile_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_AttendeeProfile_OneArgs = {
  object: AttendeeProfile_Insert_Input;
  on_conflict?: Maybe<AttendeeProfile_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Attendee_OneArgs = {
  object: Attendee_Insert_Input;
  on_conflict?: Maybe<Attendee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_BroadcastArgs = {
  objects: Array<Broadcast_Insert_Input>;
  on_conflict?: Maybe<Broadcast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_BroadcastContentItemArgs = {
  objects: Array<BroadcastContentItem_Insert_Input>;
  on_conflict?: Maybe<BroadcastContentItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_BroadcastContentItem_OneArgs = {
  object: BroadcastContentItem_Insert_Input;
  on_conflict?: Maybe<BroadcastContentItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Broadcast_OneArgs = {
  object: Broadcast_Insert_Input;
  on_conflict?: Maybe<Broadcast_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConferenceArgs = {
  objects: Array<Conference_Insert_Input>;
  on_conflict?: Maybe<Conference_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConferenceConfigurationArgs = {
  objects: Array<ConferenceConfiguration_Insert_Input>;
  on_conflict?: Maybe<ConferenceConfiguration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConferenceConfiguration_OneArgs = {
  object: ConferenceConfiguration_Insert_Input;
  on_conflict?: Maybe<ConferenceConfiguration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConferenceDemoCodeArgs = {
  objects: Array<ConferenceDemoCode_Insert_Input>;
  on_conflict?: Maybe<ConferenceDemoCode_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConferenceDemoCode_OneArgs = {
  object: ConferenceDemoCode_Insert_Input;
  on_conflict?: Maybe<ConferenceDemoCode_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConferencePrepareJobArgs = {
  objects: Array<ConferencePrepareJob_Insert_Input>;
  on_conflict?: Maybe<ConferencePrepareJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ConferencePrepareJob_OneArgs = {
  object: ConferencePrepareJob_Insert_Input;
  on_conflict?: Maybe<ConferencePrepareJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Conference_OneArgs = {
  object: Conference_Insert_Input;
  on_conflict?: Maybe<Conference_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupArgs = {
  objects: Array<ContentGroup_Insert_Input>;
  on_conflict?: Maybe<ContentGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupHallwayArgs = {
  objects: Array<ContentGroupHallway_Insert_Input>;
  on_conflict?: Maybe<ContentGroupHallway_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupHallway_OneArgs = {
  object: ContentGroupHallway_Insert_Input;
  on_conflict?: Maybe<ContentGroupHallway_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupPersonArgs = {
  objects: Array<ContentGroupPerson_Insert_Input>;
  on_conflict?: Maybe<ContentGroupPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupPerson_OneArgs = {
  object: ContentGroupPerson_Insert_Input;
  on_conflict?: Maybe<ContentGroupPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupTagArgs = {
  objects: Array<ContentGroupTag_Insert_Input>;
  on_conflict?: Maybe<ContentGroupTag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupTag_OneArgs = {
  object: ContentGroupTag_Insert_Input;
  on_conflict?: Maybe<ContentGroupTag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupTypeArgs = {
  objects: Array<ContentGroupType_Insert_Input>;
  on_conflict?: Maybe<ContentGroupType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroupType_OneArgs = {
  object: ContentGroupType_Insert_Input;
  on_conflict?: Maybe<ContentGroupType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentGroup_OneArgs = {
  object: ContentGroup_Insert_Input;
  on_conflict?: Maybe<ContentGroup_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentItemArgs = {
  objects: Array<ContentItem_Insert_Input>;
  on_conflict?: Maybe<ContentItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentItem_OneArgs = {
  object: ContentItem_Insert_Input;
  on_conflict?: Maybe<ContentItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentPersonArgs = {
  objects: Array<ContentPerson_Insert_Input>;
  on_conflict?: Maybe<ContentPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentPerson_OneArgs = {
  object: ContentPerson_Insert_Input;
  on_conflict?: Maybe<ContentPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentTypeArgs = {
  objects: Array<ContentType_Insert_Input>;
  on_conflict?: Maybe<ContentType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ContentType_OneArgs = {
  object: ContentType_Insert_Input;
  on_conflict?: Maybe<ContentType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EmailArgs = {
  objects: Array<Email_Insert_Input>;
  on_conflict?: Maybe<Email_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Email_OneArgs = {
  object: Email_Insert_Input;
  on_conflict?: Maybe<Email_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventArgs = {
  objects: Array<Event_Insert_Input>;
  on_conflict?: Maybe<Event_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventParticipantStreamArgs = {
  objects: Array<EventParticipantStream_Insert_Input>;
  on_conflict?: Maybe<EventParticipantStream_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventParticipantStream_OneArgs = {
  object: EventParticipantStream_Insert_Input;
  on_conflict?: Maybe<EventParticipantStream_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventPersonArgs = {
  objects: Array<EventPerson_Insert_Input>;
  on_conflict?: Maybe<EventPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventPersonRoleArgs = {
  objects: Array<EventPersonRole_Insert_Input>;
  on_conflict?: Maybe<EventPersonRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventPersonRole_OneArgs = {
  object: EventPersonRole_Insert_Input;
  on_conflict?: Maybe<EventPersonRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventPerson_OneArgs = {
  object: EventPerson_Insert_Input;
  on_conflict?: Maybe<EventPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventRoomJoinRequestArgs = {
  objects: Array<EventRoomJoinRequest_Insert_Input>;
  on_conflict?: Maybe<EventRoomJoinRequest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventRoomJoinRequest_OneArgs = {
  object: EventRoomJoinRequest_Insert_Input;
  on_conflict?: Maybe<EventRoomJoinRequest_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventTagArgs = {
  objects: Array<EventTag_Insert_Input>;
  on_conflict?: Maybe<EventTag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventTag_OneArgs = {
  object: EventTag_Insert_Input;
  on_conflict?: Maybe<EventTag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventVonageSessionArgs = {
  objects: Array<EventVonageSession_Insert_Input>;
  on_conflict?: Maybe<EventVonageSession_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_EventVonageSession_OneArgs = {
  object: EventVonageSession_Insert_Input;
  on_conflict?: Maybe<EventVonageSession_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Event_OneArgs = {
  object: Event_Insert_Input;
  on_conflict?: Maybe<Event_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ExecutedTransitionsArgs = {
  objects: Array<ExecutedTransitions_Insert_Input>;
  on_conflict?: Maybe<ExecutedTransitions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_ExecutedTransitions_OneArgs = {
  object: ExecutedTransitions_Insert_Input;
  on_conflict?: Maybe<ExecutedTransitions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupArgs = {
  objects: Array<Group_Insert_Input>;
  on_conflict?: Maybe<Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupAttendeeArgs = {
  objects: Array<GroupAttendee_Insert_Input>;
  on_conflict?: Maybe<GroupAttendee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupAttendee_OneArgs = {
  object: GroupAttendee_Insert_Input;
  on_conflict?: Maybe<GroupAttendee_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupRoleArgs = {
  objects: Array<GroupRole_Insert_Input>;
  on_conflict?: Maybe<GroupRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_GroupRole_OneArgs = {
  object: GroupRole_Insert_Input;
  on_conflict?: Maybe<GroupRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Group_OneArgs = {
  object: Group_Insert_Input;
  on_conflict?: Maybe<Group_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_HallwayArgs = {
  objects: Array<Hallway_Insert_Input>;
  on_conflict?: Maybe<Hallway_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Hallway_OneArgs = {
  object: Hallway_Insert_Input;
  on_conflict?: Maybe<Hallway_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_InputTypeArgs = {
  objects: Array<InputType_Insert_Input>;
  on_conflict?: Maybe<InputType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_InputType_OneArgs = {
  object: InputType_Insert_Input;
  on_conflict?: Maybe<InputType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_InvitationArgs = {
  objects: Array<Invitation_Insert_Input>;
  on_conflict?: Maybe<Invitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Invitation_OneArgs = {
  object: Invitation_Insert_Input;
  on_conflict?: Maybe<Invitation_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_JobStatusArgs = {
  objects: Array<JobStatus_Insert_Input>;
  on_conflict?: Maybe<JobStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_JobStatus_OneArgs = {
  object: JobStatus_Insert_Input;
  on_conflict?: Maybe<JobStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MediaLiveChannelArgs = {
  objects: Array<MediaLiveChannel_Insert_Input>;
  on_conflict?: Maybe<MediaLiveChannel_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_MediaLiveChannel_OneArgs = {
  object: MediaLiveChannel_Insert_Input;
  on_conflict?: Maybe<MediaLiveChannel_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OnlineStatusArgs = {
  objects: Array<OnlineStatus_Insert_Input>;
  on_conflict?: Maybe<OnlineStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OnlineStatus_OneArgs = {
  object: OnlineStatus_Insert_Input;
  on_conflict?: Maybe<OnlineStatus_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OriginatingDataArgs = {
  objects: Array<OriginatingData_Insert_Input>;
  on_conflict?: Maybe<OriginatingData_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_OriginatingData_OneArgs = {
  object: OriginatingData_Insert_Input;
  on_conflict?: Maybe<OriginatingData_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PermissionArgs = {
  objects: Array<Permission_Insert_Input>;
  on_conflict?: Maybe<Permission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Permission_OneArgs = {
  object: Permission_Insert_Input;
  on_conflict?: Maybe<Permission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PushNotificationSubscriptionArgs = {
  objects: Array<PushNotificationSubscription_Insert_Input>;
  on_conflict?: Maybe<PushNotificationSubscription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_PushNotificationSubscription_OneArgs = {
  object: PushNotificationSubscription_Insert_Input;
  on_conflict?: Maybe<PushNotificationSubscription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RequiredContentItemArgs = {
  objects: Array<RequiredContentItem_Insert_Input>;
  on_conflict?: Maybe<RequiredContentItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RequiredContentItem_OneArgs = {
  object: RequiredContentItem_Insert_Input;
  on_conflict?: Maybe<RequiredContentItem_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoleArgs = {
  objects: Array<Role_Insert_Input>;
  on_conflict?: Maybe<Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RolePermissionArgs = {
  objects: Array<RolePermission_Insert_Input>;
  on_conflict?: Maybe<RolePermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RolePermission_OneArgs = {
  object: RolePermission_Insert_Input;
  on_conflict?: Maybe<RolePermission_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Role_OneArgs = {
  object: Role_Insert_Input;
  on_conflict?: Maybe<Role_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomArgs = {
  objects: Array<Room_Insert_Input>;
  on_conflict?: Maybe<Room_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomModeArgs = {
  objects: Array<RoomMode_Insert_Input>;
  on_conflict?: Maybe<RoomMode_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomMode_OneArgs = {
  object: RoomMode_Insert_Input;
  on_conflict?: Maybe<RoomMode_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomParticipantArgs = {
  objects: Array<RoomParticipant_Insert_Input>;
  on_conflict?: Maybe<RoomParticipant_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomParticipant_OneArgs = {
  object: RoomParticipant_Insert_Input;
  on_conflict?: Maybe<RoomParticipant_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomPersonArgs = {
  objects: Array<RoomPerson_Insert_Input>;
  on_conflict?: Maybe<RoomPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomPersonRoleArgs = {
  objects: Array<RoomPersonRole_Insert_Input>;
  on_conflict?: Maybe<RoomPersonRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomPersonRole_OneArgs = {
  object: RoomPersonRole_Insert_Input;
  on_conflict?: Maybe<RoomPersonRole_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomPerson_OneArgs = {
  object: RoomPerson_Insert_Input;
  on_conflict?: Maybe<RoomPerson_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomPrivacyArgs = {
  objects: Array<RoomPrivacy_Insert_Input>;
  on_conflict?: Maybe<RoomPrivacy_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_RoomPrivacy_OneArgs = {
  object: RoomPrivacy_Insert_Input;
  on_conflict?: Maybe<RoomPrivacy_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_OneArgs = {
  object: Room_Insert_Input;
  on_conflict?: Maybe<Room_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TagArgs = {
  objects: Array<Tag_Insert_Input>;
  on_conflict?: Maybe<Tag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Tag_OneArgs = {
  object: Tag_Insert_Input;
  on_conflict?: Maybe<Tag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TranscriptionJobArgs = {
  objects: Array<TranscriptionJob_Insert_Input>;
  on_conflict?: Maybe<TranscriptionJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TranscriptionJob_OneArgs = {
  object: TranscriptionJob_Insert_Input;
  on_conflict?: Maybe<TranscriptionJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_TransitionsArgs = {
  objects: Array<Transitions_Insert_Input>;
  on_conflict?: Maybe<Transitions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Transitions_OneArgs = {
  object: Transitions_Insert_Input;
  on_conflict?: Maybe<Transitions_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UploaderArgs = {
  objects: Array<Uploader_Insert_Input>;
  on_conflict?: Maybe<Uploader_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Uploader_OneArgs = {
  object: Uploader_Insert_Input;
  on_conflict?: Maybe<Uploader_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_UserArgs = {
  objects: Array<User_Insert_Input>;
  on_conflict?: Maybe<User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_User_OneArgs = {
  object: User_Insert_Input;
  on_conflict?: Maybe<User_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_VideoRenderJobArgs = {
  objects: Array<VideoRenderJob_Insert_Input>;
  on_conflict?: Maybe<VideoRenderJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_VideoRenderJob_OneArgs = {
  object: VideoRenderJob_Insert_Input;
  on_conflict?: Maybe<VideoRenderJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_YouTubeUploadArgs = {
  objects: Array<YouTubeUpload_Insert_Input>;
  on_conflict?: Maybe<YouTubeUpload_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_YouTubeUpload_OneArgs = {
  object: YouTubeUpload_Insert_Input;
  on_conflict?: Maybe<YouTubeUpload_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Analytics_AppStatsArgs = {
  objects: Array<Analytics_AppStats_Insert_Input>;
  on_conflict?: Maybe<Analytics_AppStats_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Analytics_AppStats_OneArgs = {
  object: Analytics_AppStats_Insert_Input;
  on_conflict?: Maybe<Analytics_AppStats_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_ChatArgs = {
  objects: Array<Chat_Chat_Insert_Input>;
  on_conflict?: Maybe<Chat_Chat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_Chat_OneArgs = {
  object: Chat_Chat_Insert_Input;
  on_conflict?: Maybe<Chat_Chat_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_FlagArgs = {
  objects: Array<Chat_Flag_Insert_Input>;
  on_conflict?: Maybe<Chat_Flag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_FlagTypeArgs = {
  objects: Array<Chat_FlagType_Insert_Input>;
  on_conflict?: Maybe<Chat_FlagType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_FlagType_OneArgs = {
  object: Chat_FlagType_Insert_Input;
  on_conflict?: Maybe<Chat_FlagType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_Flag_OneArgs = {
  object: Chat_Flag_Insert_Input;
  on_conflict?: Maybe<Chat_Flag_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_MessageArgs = {
  objects: Array<Chat_Message_Insert_Input>;
  on_conflict?: Maybe<Chat_Message_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_MessageTypeArgs = {
  objects: Array<Chat_MessageType_Insert_Input>;
  on_conflict?: Maybe<Chat_MessageType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_MessageType_OneArgs = {
  object: Chat_MessageType_Insert_Input;
  on_conflict?: Maybe<Chat_MessageType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_Message_OneArgs = {
  object: Chat_Message_Insert_Input;
  on_conflict?: Maybe<Chat_Message_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_PinArgs = {
  objects: Array<Chat_Pin_Insert_Input>;
  on_conflict?: Maybe<Chat_Pin_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_Pin_OneArgs = {
  object: Chat_Pin_Insert_Input;
  on_conflict?: Maybe<Chat_Pin_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_ReactionArgs = {
  objects: Array<Chat_Reaction_Insert_Input>;
  on_conflict?: Maybe<Chat_Reaction_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_ReactionTypeArgs = {
  objects: Array<Chat_ReactionType_Insert_Input>;
  on_conflict?: Maybe<Chat_ReactionType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_ReactionType_OneArgs = {
  object: Chat_ReactionType_Insert_Input;
  on_conflict?: Maybe<Chat_ReactionType_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_Reaction_OneArgs = {
  object: Chat_Reaction_Insert_Input;
  on_conflict?: Maybe<Chat_Reaction_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_ReadUpToIndexArgs = {
  objects: Array<Chat_ReadUpToIndex_Insert_Input>;
  on_conflict?: Maybe<Chat_ReadUpToIndex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_ReadUpToIndex_OneArgs = {
  object: Chat_ReadUpToIndex_Insert_Input;
  on_conflict?: Maybe<Chat_ReadUpToIndex_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_SubscriptionArgs = {
  objects: Array<Chat_Subscription_Insert_Input>;
  on_conflict?: Maybe<Chat_Subscription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Chat_Subscription_OneArgs = {
  object: Chat_Subscription_Insert_Input;
  on_conflict?: Maybe<Chat_Subscription_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackCreateJobArgs = {
  objects: Array<Job_Queues_ChannelStackCreateJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_ChannelStackCreateJob_OneArgs = {
  object: Job_Queues_ChannelStackCreateJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_ChannelStackCreateJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_CombineVideosJobArgs = {
  objects: Array<Job_Queues_CombineVideosJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_CombineVideosJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_CombineVideosJob_OneArgs = {
  object: Job_Queues_CombineVideosJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_CombineVideosJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_CustomEmailJobArgs = {
  objects: Array<Job_Queues_CustomEmailJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_CustomEmailJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_CustomEmailJob_OneArgs = {
  object: Job_Queues_CustomEmailJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_CustomEmailJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_InvitationEmailJobArgs = {
  objects: Array<Job_Queues_InvitationEmailJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_InvitationEmailJob_OneArgs = {
  object: Job_Queues_InvitationEmailJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_InvitationEmailJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_MediaPackageHarvestJobArgs = {
  objects: Array<Job_Queues_MediaPackageHarvestJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_MediaPackageHarvestJob_OneArgs = {
  object: Job_Queues_MediaPackageHarvestJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_MediaPackageHarvestJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_PublishVideoJobArgs = {
  objects: Array<Job_Queues_PublishVideoJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_PublishVideoJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_PublishVideoJob_OneArgs = {
  object: Job_Queues_PublishVideoJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_PublishVideoJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_SubmissionRequestEmailJobArgs = {
  objects: Array<Job_Queues_SubmissionRequestEmailJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_SubmissionRequestEmailJob_OneArgs = {
  object: Job_Queues_SubmissionRequestEmailJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_SubmissionRequestEmailJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_UploadYouTubeVideoJobArgs = {
  objects: Array<Job_Queues_UploadYouTubeVideoJob_Insert_Input>;
  on_conflict?: Maybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Job_Queues_UploadYouTubeVideoJob_OneArgs = {
  object: Job_Queues_UploadYouTubeVideoJob_Insert_Input;
  on_conflict?: Maybe<Job_Queues_UploadYouTubeVideoJob_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShuffleAlgorithmArgs = {
  objects: Array<Room_ShuffleAlgorithm_Insert_Input>;
  on_conflict?: Maybe<Room_ShuffleAlgorithm_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShuffleAlgorithm_OneArgs = {
  object: Room_ShuffleAlgorithm_Insert_Input;
  on_conflict?: Maybe<Room_ShuffleAlgorithm_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShufflePeriodArgs = {
  objects: Array<Room_ShufflePeriod_Insert_Input>;
  on_conflict?: Maybe<Room_ShufflePeriod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShufflePeriod_OneArgs = {
  object: Room_ShufflePeriod_Insert_Input;
  on_conflict?: Maybe<Room_ShufflePeriod_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShuffleQueueEntryArgs = {
  objects: Array<Room_ShuffleQueueEntry_Insert_Input>;
  on_conflict?: Maybe<Room_ShuffleQueueEntry_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShuffleQueueEntry_OneArgs = {
  object: Room_ShuffleQueueEntry_Insert_Input;
  on_conflict?: Maybe<Room_ShuffleQueueEntry_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShuffleRoomArgs = {
  objects: Array<Room_ShuffleRoom_Insert_Input>;
  on_conflict?: Maybe<Room_ShuffleRoom_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_Room_ShuffleRoom_OneArgs = {
  object: Room_ShuffleRoom_Insert_Input;
  on_conflict?: Maybe<Room_ShuffleRoom_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_System_ConfigurationArgs = {
  objects: Array<System_Configuration_Insert_Input>;
  on_conflict?: Maybe<System_Configuration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_System_ConfigurationKeyArgs = {
  objects: Array<System_ConfigurationKey_Insert_Input>;
  on_conflict?: Maybe<System_ConfigurationKey_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_System_ConfigurationKey_OneArgs = {
  object: System_ConfigurationKey_Insert_Input;
  on_conflict?: Maybe<System_ConfigurationKey_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInsert_System_Configuration_OneArgs = {
  object: System_Configuration_Insert_Input;
  on_conflict?: Maybe<System_Configuration_On_Conflict>;
};


/** mutation root */
export type Mutation_RootInvitationConfirmCurrentArgs = {
  inviteCode: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootInvitationConfirmSendInitialEmailArgs = {
  inviteInput: InvitationConfirmationEmailInput;
};


/** mutation root */
export type Mutation_RootInvitationConfirmSendRepeatEmailArgs = {
  inviteInput: InvitationConfirmationEmailInput;
};


/** mutation root */
export type Mutation_RootInvitationConfirmWithCodeArgs = {
  inviteInput: ConfirmInvitationInput;
};


/** mutation root */
export type Mutation_RootJoinEventVonageSessionArgs = {
  eventId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootJoinRoomVonageSessionArgs = {
  roomId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootRefreshYouTubeDataArgs = {
  attendeeGoogleAccountId: Scalars['uuid'];
  attendeeId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootStopEventBroadcastArgs = {
  eventId: Scalars['uuid'];
};


/** mutation root */
export type Mutation_RootSubmitContentItemArgs = {
  data: Scalars['jsonb'];
  magicToken: Scalars['String'];
};


/** mutation root */
export type Mutation_RootSubmitGoogleOAuthCodeArgs = {
  code: Scalars['String'];
  state: Scalars['String'];
};


/** mutation root */
export type Mutation_RootUpdateProfilePhotoArgs = {
  attendeeId: Scalars['uuid'];
  s3URL?: Maybe<Scalars['String']>;
};


/** mutation root */
export type Mutation_RootUpdateSubtitlesArgs = {
  contentItemId: Scalars['String'];
  magicToken: Scalars['String'];
  subtitleText: Scalars['String'];
};


/** mutation root */
export type Mutation_RootUpdate_AttendeeArgs = {
  _set?: Maybe<Attendee_Set_Input>;
  where: Attendee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_AttendeeGoogleAccountArgs = {
  _append?: Maybe<AttendeeGoogleAccount_Append_Input>;
  _delete_at_path?: Maybe<AttendeeGoogleAccount_Delete_At_Path_Input>;
  _delete_elem?: Maybe<AttendeeGoogleAccount_Delete_Elem_Input>;
  _delete_key?: Maybe<AttendeeGoogleAccount_Delete_Key_Input>;
  _prepend?: Maybe<AttendeeGoogleAccount_Prepend_Input>;
  _set?: Maybe<AttendeeGoogleAccount_Set_Input>;
  where: AttendeeGoogleAccount_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_AttendeeGoogleAccount_By_PkArgs = {
  _append?: Maybe<AttendeeGoogleAccount_Append_Input>;
  _delete_at_path?: Maybe<AttendeeGoogleAccount_Delete_At_Path_Input>;
  _delete_elem?: Maybe<AttendeeGoogleAccount_Delete_Elem_Input>;
  _delete_key?: Maybe<AttendeeGoogleAccount_Delete_Key_Input>;
  _prepend?: Maybe<AttendeeGoogleAccount_Prepend_Input>;
  _set?: Maybe<AttendeeGoogleAccount_Set_Input>;
  pk_columns: AttendeeGoogleAccount_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_AttendeeProfileArgs = {
  _append?: Maybe<AttendeeProfile_Append_Input>;
  _delete_at_path?: Maybe<AttendeeProfile_Delete_At_Path_Input>;
  _delete_elem?: Maybe<AttendeeProfile_Delete_Elem_Input>;
  _delete_key?: Maybe<AttendeeProfile_Delete_Key_Input>;
  _inc?: Maybe<AttendeeProfile_Inc_Input>;
  _prepend?: Maybe<AttendeeProfile_Prepend_Input>;
  _set?: Maybe<AttendeeProfile_Set_Input>;
  where: AttendeeProfile_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_AttendeeProfile_By_PkArgs = {
  _append?: Maybe<AttendeeProfile_Append_Input>;
  _delete_at_path?: Maybe<AttendeeProfile_Delete_At_Path_Input>;
  _delete_elem?: Maybe<AttendeeProfile_Delete_Elem_Input>;
  _delete_key?: Maybe<AttendeeProfile_Delete_Key_Input>;
  _inc?: Maybe<AttendeeProfile_Inc_Input>;
  _prepend?: Maybe<AttendeeProfile_Prepend_Input>;
  _set?: Maybe<AttendeeProfile_Set_Input>;
  pk_columns: AttendeeProfile_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Attendee_By_PkArgs = {
  _set?: Maybe<Attendee_Set_Input>;
  pk_columns: Attendee_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_BroadcastArgs = {
  _append?: Maybe<Broadcast_Append_Input>;
  _delete_at_path?: Maybe<Broadcast_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Broadcast_Delete_Elem_Input>;
  _delete_key?: Maybe<Broadcast_Delete_Key_Input>;
  _prepend?: Maybe<Broadcast_Prepend_Input>;
  _set?: Maybe<Broadcast_Set_Input>;
  where: Broadcast_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_BroadcastContentItemArgs = {
  _append?: Maybe<BroadcastContentItem_Append_Input>;
  _delete_at_path?: Maybe<BroadcastContentItem_Delete_At_Path_Input>;
  _delete_elem?: Maybe<BroadcastContentItem_Delete_Elem_Input>;
  _delete_key?: Maybe<BroadcastContentItem_Delete_Key_Input>;
  _prepend?: Maybe<BroadcastContentItem_Prepend_Input>;
  _set?: Maybe<BroadcastContentItem_Set_Input>;
  where: BroadcastContentItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_BroadcastContentItem_By_PkArgs = {
  _append?: Maybe<BroadcastContentItem_Append_Input>;
  _delete_at_path?: Maybe<BroadcastContentItem_Delete_At_Path_Input>;
  _delete_elem?: Maybe<BroadcastContentItem_Delete_Elem_Input>;
  _delete_key?: Maybe<BroadcastContentItem_Delete_Key_Input>;
  _prepend?: Maybe<BroadcastContentItem_Prepend_Input>;
  _set?: Maybe<BroadcastContentItem_Set_Input>;
  pk_columns: BroadcastContentItem_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Broadcast_By_PkArgs = {
  _append?: Maybe<Broadcast_Append_Input>;
  _delete_at_path?: Maybe<Broadcast_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Broadcast_Delete_Elem_Input>;
  _delete_key?: Maybe<Broadcast_Delete_Key_Input>;
  _prepend?: Maybe<Broadcast_Prepend_Input>;
  _set?: Maybe<Broadcast_Set_Input>;
  pk_columns: Broadcast_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ConferenceArgs = {
  _set?: Maybe<Conference_Set_Input>;
  where: Conference_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ConferenceConfigurationArgs = {
  _append?: Maybe<ConferenceConfiguration_Append_Input>;
  _delete_at_path?: Maybe<ConferenceConfiguration_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ConferenceConfiguration_Delete_Elem_Input>;
  _delete_key?: Maybe<ConferenceConfiguration_Delete_Key_Input>;
  _prepend?: Maybe<ConferenceConfiguration_Prepend_Input>;
  _set?: Maybe<ConferenceConfiguration_Set_Input>;
  where: ConferenceConfiguration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ConferenceConfiguration_By_PkArgs = {
  _append?: Maybe<ConferenceConfiguration_Append_Input>;
  _delete_at_path?: Maybe<ConferenceConfiguration_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ConferenceConfiguration_Delete_Elem_Input>;
  _delete_key?: Maybe<ConferenceConfiguration_Delete_Key_Input>;
  _prepend?: Maybe<ConferenceConfiguration_Prepend_Input>;
  _set?: Maybe<ConferenceConfiguration_Set_Input>;
  pk_columns: ConferenceConfiguration_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ConferenceDemoCodeArgs = {
  _set?: Maybe<ConferenceDemoCode_Set_Input>;
  where: ConferenceDemoCode_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ConferenceDemoCode_By_PkArgs = {
  _set?: Maybe<ConferenceDemoCode_Set_Input>;
  pk_columns: ConferenceDemoCode_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ConferencePrepareJobArgs = {
  _set?: Maybe<ConferencePrepareJob_Set_Input>;
  where: ConferencePrepareJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ConferencePrepareJob_By_PkArgs = {
  _set?: Maybe<ConferencePrepareJob_Set_Input>;
  pk_columns: ConferencePrepareJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Conference_By_PkArgs = {
  _set?: Maybe<Conference_Set_Input>;
  pk_columns: Conference_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupArgs = {
  _set?: Maybe<ContentGroup_Set_Input>;
  where: ContentGroup_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupHallwayArgs = {
  _append?: Maybe<ContentGroupHallway_Append_Input>;
  _delete_at_path?: Maybe<ContentGroupHallway_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ContentGroupHallway_Delete_Elem_Input>;
  _delete_key?: Maybe<ContentGroupHallway_Delete_Key_Input>;
  _inc?: Maybe<ContentGroupHallway_Inc_Input>;
  _prepend?: Maybe<ContentGroupHallway_Prepend_Input>;
  _set?: Maybe<ContentGroupHallway_Set_Input>;
  where: ContentGroupHallway_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupHallway_By_PkArgs = {
  _append?: Maybe<ContentGroupHallway_Append_Input>;
  _delete_at_path?: Maybe<ContentGroupHallway_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ContentGroupHallway_Delete_Elem_Input>;
  _delete_key?: Maybe<ContentGroupHallway_Delete_Key_Input>;
  _inc?: Maybe<ContentGroupHallway_Inc_Input>;
  _prepend?: Maybe<ContentGroupHallway_Prepend_Input>;
  _set?: Maybe<ContentGroupHallway_Set_Input>;
  pk_columns: ContentGroupHallway_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupPersonArgs = {
  _inc?: Maybe<ContentGroupPerson_Inc_Input>;
  _set?: Maybe<ContentGroupPerson_Set_Input>;
  where: ContentGroupPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupPerson_By_PkArgs = {
  _inc?: Maybe<ContentGroupPerson_Inc_Input>;
  _set?: Maybe<ContentGroupPerson_Set_Input>;
  pk_columns: ContentGroupPerson_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupTagArgs = {
  _set?: Maybe<ContentGroupTag_Set_Input>;
  where: ContentGroupTag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupTag_By_PkArgs = {
  _set?: Maybe<ContentGroupTag_Set_Input>;
  pk_columns: ContentGroupTag_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupTypeArgs = {
  _set?: Maybe<ContentGroupType_Set_Input>;
  where: ContentGroupType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroupType_By_PkArgs = {
  _set?: Maybe<ContentGroupType_Set_Input>;
  pk_columns: ContentGroupType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentGroup_By_PkArgs = {
  _set?: Maybe<ContentGroup_Set_Input>;
  pk_columns: ContentGroup_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentItemArgs = {
  _append?: Maybe<ContentItem_Append_Input>;
  _delete_at_path?: Maybe<ContentItem_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ContentItem_Delete_Elem_Input>;
  _delete_key?: Maybe<ContentItem_Delete_Key_Input>;
  _prepend?: Maybe<ContentItem_Prepend_Input>;
  _set?: Maybe<ContentItem_Set_Input>;
  where: ContentItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentItem_By_PkArgs = {
  _append?: Maybe<ContentItem_Append_Input>;
  _delete_at_path?: Maybe<ContentItem_Delete_At_Path_Input>;
  _delete_elem?: Maybe<ContentItem_Delete_Elem_Input>;
  _delete_key?: Maybe<ContentItem_Delete_Key_Input>;
  _prepend?: Maybe<ContentItem_Prepend_Input>;
  _set?: Maybe<ContentItem_Set_Input>;
  pk_columns: ContentItem_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentPersonArgs = {
  _set?: Maybe<ContentPerson_Set_Input>;
  where: ContentPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentPerson_By_PkArgs = {
  _set?: Maybe<ContentPerson_Set_Input>;
  pk_columns: ContentPerson_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ContentTypeArgs = {
  _set?: Maybe<ContentType_Set_Input>;
  where: ContentType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ContentType_By_PkArgs = {
  _set?: Maybe<ContentType_Set_Input>;
  pk_columns: ContentType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_EmailArgs = {
  _inc?: Maybe<Email_Inc_Input>;
  _set?: Maybe<Email_Set_Input>;
  where: Email_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Email_By_PkArgs = {
  _inc?: Maybe<Email_Inc_Input>;
  _set?: Maybe<Email_Set_Input>;
  pk_columns: Email_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_EventArgs = {
  _inc?: Maybe<Event_Inc_Input>;
  _set?: Maybe<Event_Set_Input>;
  where: Event_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_EventParticipantStreamArgs = {
  _set?: Maybe<EventParticipantStream_Set_Input>;
  where: EventParticipantStream_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_EventParticipantStream_By_PkArgs = {
  _set?: Maybe<EventParticipantStream_Set_Input>;
  pk_columns: EventParticipantStream_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_EventPersonArgs = {
  _set?: Maybe<EventPerson_Set_Input>;
  where: EventPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_EventPersonRoleArgs = {
  _set?: Maybe<EventPersonRole_Set_Input>;
  where: EventPersonRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_EventPersonRole_By_PkArgs = {
  _set?: Maybe<EventPersonRole_Set_Input>;
  pk_columns: EventPersonRole_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_EventPerson_By_PkArgs = {
  _set?: Maybe<EventPerson_Set_Input>;
  pk_columns: EventPerson_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_EventRoomJoinRequestArgs = {
  _set?: Maybe<EventRoomJoinRequest_Set_Input>;
  where: EventRoomJoinRequest_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_EventRoomJoinRequest_By_PkArgs = {
  _set?: Maybe<EventRoomJoinRequest_Set_Input>;
  pk_columns: EventRoomJoinRequest_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_EventTagArgs = {
  _set?: Maybe<EventTag_Set_Input>;
  where: EventTag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_EventTag_By_PkArgs = {
  _set?: Maybe<EventTag_Set_Input>;
  pk_columns: EventTag_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_EventVonageSessionArgs = {
  _append?: Maybe<EventVonageSession_Append_Input>;
  _delete_at_path?: Maybe<EventVonageSession_Delete_At_Path_Input>;
  _delete_elem?: Maybe<EventVonageSession_Delete_Elem_Input>;
  _delete_key?: Maybe<EventVonageSession_Delete_Key_Input>;
  _prepend?: Maybe<EventVonageSession_Prepend_Input>;
  _set?: Maybe<EventVonageSession_Set_Input>;
  where: EventVonageSession_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_EventVonageSession_By_PkArgs = {
  _append?: Maybe<EventVonageSession_Append_Input>;
  _delete_at_path?: Maybe<EventVonageSession_Delete_At_Path_Input>;
  _delete_elem?: Maybe<EventVonageSession_Delete_Elem_Input>;
  _delete_key?: Maybe<EventVonageSession_Delete_Key_Input>;
  _prepend?: Maybe<EventVonageSession_Prepend_Input>;
  _set?: Maybe<EventVonageSession_Set_Input>;
  pk_columns: EventVonageSession_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Event_By_PkArgs = {
  _inc?: Maybe<Event_Inc_Input>;
  _set?: Maybe<Event_Set_Input>;
  pk_columns: Event_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_ExecutedTransitionsArgs = {
  _set?: Maybe<ExecutedTransitions_Set_Input>;
  where: ExecutedTransitions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_ExecutedTransitions_By_PkArgs = {
  _set?: Maybe<ExecutedTransitions_Set_Input>;
  pk_columns: ExecutedTransitions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_GroupArgs = {
  _set?: Maybe<Group_Set_Input>;
  where: Group_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_GroupAttendeeArgs = {
  _set?: Maybe<GroupAttendee_Set_Input>;
  where: GroupAttendee_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_GroupAttendee_By_PkArgs = {
  _set?: Maybe<GroupAttendee_Set_Input>;
  pk_columns: GroupAttendee_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_GroupRoleArgs = {
  _set?: Maybe<GroupRole_Set_Input>;
  where: GroupRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_GroupRole_By_PkArgs = {
  _set?: Maybe<GroupRole_Set_Input>;
  pk_columns: GroupRole_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Group_By_PkArgs = {
  _set?: Maybe<Group_Set_Input>;
  pk_columns: Group_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_HallwayArgs = {
  _inc?: Maybe<Hallway_Inc_Input>;
  _set?: Maybe<Hallway_Set_Input>;
  where: Hallway_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Hallway_By_PkArgs = {
  _inc?: Maybe<Hallway_Inc_Input>;
  _set?: Maybe<Hallway_Set_Input>;
  pk_columns: Hallway_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_InputTypeArgs = {
  _set?: Maybe<InputType_Set_Input>;
  where: InputType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_InputType_By_PkArgs = {
  _set?: Maybe<InputType_Set_Input>;
  pk_columns: InputType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_InvitationArgs = {
  _set?: Maybe<Invitation_Set_Input>;
  where: Invitation_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Invitation_By_PkArgs = {
  _set?: Maybe<Invitation_Set_Input>;
  pk_columns: Invitation_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_JobStatusArgs = {
  _set?: Maybe<JobStatus_Set_Input>;
  where: JobStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_JobStatus_By_PkArgs = {
  _set?: Maybe<JobStatus_Set_Input>;
  pk_columns: JobStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_MediaLiveChannelArgs = {
  _set?: Maybe<MediaLiveChannel_Set_Input>;
  where: MediaLiveChannel_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_MediaLiveChannel_By_PkArgs = {
  _set?: Maybe<MediaLiveChannel_Set_Input>;
  pk_columns: MediaLiveChannel_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_OnlineStatusArgs = {
  _set?: Maybe<OnlineStatus_Set_Input>;
  where: OnlineStatus_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_OnlineStatus_By_PkArgs = {
  _set?: Maybe<OnlineStatus_Set_Input>;
  pk_columns: OnlineStatus_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_OriginatingDataArgs = {
  _append?: Maybe<OriginatingData_Append_Input>;
  _delete_at_path?: Maybe<OriginatingData_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OriginatingData_Delete_Elem_Input>;
  _delete_key?: Maybe<OriginatingData_Delete_Key_Input>;
  _prepend?: Maybe<OriginatingData_Prepend_Input>;
  _set?: Maybe<OriginatingData_Set_Input>;
  where: OriginatingData_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_OriginatingData_By_PkArgs = {
  _append?: Maybe<OriginatingData_Append_Input>;
  _delete_at_path?: Maybe<OriginatingData_Delete_At_Path_Input>;
  _delete_elem?: Maybe<OriginatingData_Delete_Elem_Input>;
  _delete_key?: Maybe<OriginatingData_Delete_Key_Input>;
  _prepend?: Maybe<OriginatingData_Prepend_Input>;
  _set?: Maybe<OriginatingData_Set_Input>;
  pk_columns: OriginatingData_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PermissionArgs = {
  _set?: Maybe<Permission_Set_Input>;
  where: Permission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Permission_By_PkArgs = {
  _set?: Maybe<Permission_Set_Input>;
  pk_columns: Permission_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_PushNotificationSubscriptionArgs = {
  _set?: Maybe<PushNotificationSubscription_Set_Input>;
  where: PushNotificationSubscription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_PushNotificationSubscription_By_PkArgs = {
  _set?: Maybe<PushNotificationSubscription_Set_Input>;
  pk_columns: PushNotificationSubscription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RequiredContentItemArgs = {
  _inc?: Maybe<RequiredContentItem_Inc_Input>;
  _set?: Maybe<RequiredContentItem_Set_Input>;
  where: RequiredContentItem_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RequiredContentItem_By_PkArgs = {
  _inc?: Maybe<RequiredContentItem_Inc_Input>;
  _set?: Maybe<RequiredContentItem_Set_Input>;
  pk_columns: RequiredContentItem_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoleArgs = {
  _set?: Maybe<Role_Set_Input>;
  where: Role_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RolePermissionArgs = {
  _set?: Maybe<RolePermission_Set_Input>;
  where: RolePermission_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RolePermission_By_PkArgs = {
  _set?: Maybe<RolePermission_Set_Input>;
  pk_columns: RolePermission_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Role_By_PkArgs = {
  _set?: Maybe<Role_Set_Input>;
  pk_columns: Role_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoomArgs = {
  _inc?: Maybe<Room_Inc_Input>;
  _set?: Maybe<Room_Set_Input>;
  where: Room_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RoomModeArgs = {
  _set?: Maybe<RoomMode_Set_Input>;
  where: RoomMode_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RoomMode_By_PkArgs = {
  _set?: Maybe<RoomMode_Set_Input>;
  pk_columns: RoomMode_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoomParticipantArgs = {
  _set?: Maybe<RoomParticipant_Set_Input>;
  where: RoomParticipant_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RoomParticipant_By_PkArgs = {
  _set?: Maybe<RoomParticipant_Set_Input>;
  pk_columns: RoomParticipant_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoomPersonArgs = {
  _set?: Maybe<RoomPerson_Set_Input>;
  where: RoomPerson_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RoomPersonRoleArgs = {
  _set?: Maybe<RoomPersonRole_Set_Input>;
  where: RoomPersonRole_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RoomPersonRole_By_PkArgs = {
  _set?: Maybe<RoomPersonRole_Set_Input>;
  pk_columns: RoomPersonRole_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoomPerson_By_PkArgs = {
  _set?: Maybe<RoomPerson_Set_Input>;
  pk_columns: RoomPerson_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_RoomPrivacyArgs = {
  _set?: Maybe<RoomPrivacy_Set_Input>;
  where: RoomPrivacy_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_RoomPrivacy_By_PkArgs = {
  _set?: Maybe<RoomPrivacy_Set_Input>;
  pk_columns: RoomPrivacy_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Room_By_PkArgs = {
  _inc?: Maybe<Room_Inc_Input>;
  _set?: Maybe<Room_Set_Input>;
  pk_columns: Room_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TagArgs = {
  _inc?: Maybe<Tag_Inc_Input>;
  _set?: Maybe<Tag_Set_Input>;
  where: Tag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Tag_By_PkArgs = {
  _inc?: Maybe<Tag_Inc_Input>;
  _set?: Maybe<Tag_Set_Input>;
  pk_columns: Tag_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TranscriptionJobArgs = {
  _set?: Maybe<TranscriptionJob_Set_Input>;
  where: TranscriptionJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_TranscriptionJob_By_PkArgs = {
  _set?: Maybe<TranscriptionJob_Set_Input>;
  pk_columns: TranscriptionJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_TransitionsArgs = {
  _set?: Maybe<Transitions_Set_Input>;
  where: Transitions_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Transitions_By_PkArgs = {
  _set?: Maybe<Transitions_Set_Input>;
  pk_columns: Transitions_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UploaderArgs = {
  _inc?: Maybe<Uploader_Inc_Input>;
  _set?: Maybe<Uploader_Set_Input>;
  where: Uploader_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Uploader_By_PkArgs = {
  _inc?: Maybe<Uploader_Inc_Input>;
  _set?: Maybe<Uploader_Set_Input>;
  pk_columns: Uploader_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_UserArgs = {
  _set?: Maybe<User_Set_Input>;
  where: User_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_User_By_PkArgs = {
  _set?: Maybe<User_Set_Input>;
  pk_columns: User_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_VideoRenderJobArgs = {
  _append?: Maybe<VideoRenderJob_Append_Input>;
  _delete_at_path?: Maybe<VideoRenderJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<VideoRenderJob_Delete_Elem_Input>;
  _delete_key?: Maybe<VideoRenderJob_Delete_Key_Input>;
  _inc?: Maybe<VideoRenderJob_Inc_Input>;
  _prepend?: Maybe<VideoRenderJob_Prepend_Input>;
  _set?: Maybe<VideoRenderJob_Set_Input>;
  where: VideoRenderJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_VideoRenderJob_By_PkArgs = {
  _append?: Maybe<VideoRenderJob_Append_Input>;
  _delete_at_path?: Maybe<VideoRenderJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<VideoRenderJob_Delete_Elem_Input>;
  _delete_key?: Maybe<VideoRenderJob_Delete_Key_Input>;
  _inc?: Maybe<VideoRenderJob_Inc_Input>;
  _prepend?: Maybe<VideoRenderJob_Prepend_Input>;
  _set?: Maybe<VideoRenderJob_Set_Input>;
  pk_columns: VideoRenderJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_YouTubeUploadArgs = {
  _set?: Maybe<YouTubeUpload_Set_Input>;
  where: YouTubeUpload_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_YouTubeUpload_By_PkArgs = {
  _set?: Maybe<YouTubeUpload_Set_Input>;
  pk_columns: YouTubeUpload_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Analytics_AppStatsArgs = {
  _append?: Maybe<Analytics_AppStats_Append_Input>;
  _delete_at_path?: Maybe<Analytics_AppStats_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Analytics_AppStats_Delete_Elem_Input>;
  _delete_key?: Maybe<Analytics_AppStats_Delete_Key_Input>;
  _inc?: Maybe<Analytics_AppStats_Inc_Input>;
  _prepend?: Maybe<Analytics_AppStats_Prepend_Input>;
  _set?: Maybe<Analytics_AppStats_Set_Input>;
  where: Analytics_AppStats_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Analytics_AppStats_By_PkArgs = {
  _append?: Maybe<Analytics_AppStats_Append_Input>;
  _delete_at_path?: Maybe<Analytics_AppStats_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Analytics_AppStats_Delete_Elem_Input>;
  _delete_key?: Maybe<Analytics_AppStats_Delete_Key_Input>;
  _inc?: Maybe<Analytics_AppStats_Inc_Input>;
  _prepend?: Maybe<Analytics_AppStats_Prepend_Input>;
  _set?: Maybe<Analytics_AppStats_Set_Input>;
  pk_columns: Analytics_AppStats_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_ChatArgs = {
  _set?: Maybe<Chat_Chat_Set_Input>;
  where: Chat_Chat_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_Chat_By_PkArgs = {
  _set?: Maybe<Chat_Chat_Set_Input>;
  pk_columns: Chat_Chat_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_FlagArgs = {
  _inc?: Maybe<Chat_Flag_Inc_Input>;
  _set?: Maybe<Chat_Flag_Set_Input>;
  where: Chat_Flag_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_FlagTypeArgs = {
  _set?: Maybe<Chat_FlagType_Set_Input>;
  where: Chat_FlagType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_FlagType_By_PkArgs = {
  _set?: Maybe<Chat_FlagType_Set_Input>;
  pk_columns: Chat_FlagType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_Flag_By_PkArgs = {
  _inc?: Maybe<Chat_Flag_Inc_Input>;
  _set?: Maybe<Chat_Flag_Set_Input>;
  pk_columns: Chat_Flag_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_MessageArgs = {
  _append?: Maybe<Chat_Message_Append_Input>;
  _delete_at_path?: Maybe<Chat_Message_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Chat_Message_Delete_Elem_Input>;
  _delete_key?: Maybe<Chat_Message_Delete_Key_Input>;
  _inc?: Maybe<Chat_Message_Inc_Input>;
  _prepend?: Maybe<Chat_Message_Prepend_Input>;
  _set?: Maybe<Chat_Message_Set_Input>;
  where: Chat_Message_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_MessageTypeArgs = {
  _set?: Maybe<Chat_MessageType_Set_Input>;
  where: Chat_MessageType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_MessageType_By_PkArgs = {
  _set?: Maybe<Chat_MessageType_Set_Input>;
  pk_columns: Chat_MessageType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_Message_By_PkArgs = {
  _append?: Maybe<Chat_Message_Append_Input>;
  _delete_at_path?: Maybe<Chat_Message_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Chat_Message_Delete_Elem_Input>;
  _delete_key?: Maybe<Chat_Message_Delete_Key_Input>;
  _inc?: Maybe<Chat_Message_Inc_Input>;
  _prepend?: Maybe<Chat_Message_Prepend_Input>;
  _set?: Maybe<Chat_Message_Set_Input>;
  pk_columns: Chat_Message_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_PinArgs = {
  _set?: Maybe<Chat_Pin_Set_Input>;
  where: Chat_Pin_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_Pin_By_PkArgs = {
  _set?: Maybe<Chat_Pin_Set_Input>;
  pk_columns: Chat_Pin_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionArgs = {
  _append?: Maybe<Chat_Reaction_Append_Input>;
  _delete_at_path?: Maybe<Chat_Reaction_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Chat_Reaction_Delete_Elem_Input>;
  _delete_key?: Maybe<Chat_Reaction_Delete_Key_Input>;
  _prepend?: Maybe<Chat_Reaction_Prepend_Input>;
  _set?: Maybe<Chat_Reaction_Set_Input>;
  where: Chat_Reaction_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionTypeArgs = {
  _set?: Maybe<Chat_ReactionType_Set_Input>;
  where: Chat_ReactionType_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_ReactionType_By_PkArgs = {
  _set?: Maybe<Chat_ReactionType_Set_Input>;
  pk_columns: Chat_ReactionType_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_Reaction_By_PkArgs = {
  _append?: Maybe<Chat_Reaction_Append_Input>;
  _delete_at_path?: Maybe<Chat_Reaction_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Chat_Reaction_Delete_Elem_Input>;
  _delete_key?: Maybe<Chat_Reaction_Delete_Key_Input>;
  _prepend?: Maybe<Chat_Reaction_Prepend_Input>;
  _set?: Maybe<Chat_Reaction_Set_Input>;
  pk_columns: Chat_Reaction_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_ReadUpToIndexArgs = {
  _inc?: Maybe<Chat_ReadUpToIndex_Inc_Input>;
  _set?: Maybe<Chat_ReadUpToIndex_Set_Input>;
  where: Chat_ReadUpToIndex_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_ReadUpToIndex_By_PkArgs = {
  _inc?: Maybe<Chat_ReadUpToIndex_Inc_Input>;
  _set?: Maybe<Chat_ReadUpToIndex_Set_Input>;
  pk_columns: Chat_ReadUpToIndex_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_SubscriptionArgs = {
  _set?: Maybe<Chat_Subscription_Set_Input>;
  where: Chat_Subscription_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Chat_Subscription_By_PkArgs = {
  _set?: Maybe<Chat_Subscription_Set_Input>;
  pk_columns: Chat_Subscription_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackCreateJobArgs = {
  _set?: Maybe<Job_Queues_ChannelStackCreateJob_Set_Input>;
  where: Job_Queues_ChannelStackCreateJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_ChannelStackCreateJob_By_PkArgs = {
  _set?: Maybe<Job_Queues_ChannelStackCreateJob_Set_Input>;
  pk_columns: Job_Queues_ChannelStackCreateJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CombineVideosJobArgs = {
  _append?: Maybe<Job_Queues_CombineVideosJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_CombineVideosJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_CombineVideosJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_CombineVideosJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_CombineVideosJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_CombineVideosJob_Set_Input>;
  where: Job_Queues_CombineVideosJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CombineVideosJob_By_PkArgs = {
  _append?: Maybe<Job_Queues_CombineVideosJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_CombineVideosJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_CombineVideosJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_CombineVideosJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_CombineVideosJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_CombineVideosJob_Set_Input>;
  pk_columns: Job_Queues_CombineVideosJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CustomEmailJobArgs = {
  _append?: Maybe<Job_Queues_CustomEmailJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_CustomEmailJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_CustomEmailJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_CustomEmailJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_CustomEmailJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_CustomEmailJob_Set_Input>;
  where: Job_Queues_CustomEmailJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_CustomEmailJob_By_PkArgs = {
  _append?: Maybe<Job_Queues_CustomEmailJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_CustomEmailJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_CustomEmailJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_CustomEmailJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_CustomEmailJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_CustomEmailJob_Set_Input>;
  pk_columns: Job_Queues_CustomEmailJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_InvitationEmailJobArgs = {
  _append?: Maybe<Job_Queues_InvitationEmailJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_InvitationEmailJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_InvitationEmailJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_InvitationEmailJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_InvitationEmailJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_InvitationEmailJob_Set_Input>;
  where: Job_Queues_InvitationEmailJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_InvitationEmailJob_By_PkArgs = {
  _append?: Maybe<Job_Queues_InvitationEmailJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_InvitationEmailJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_InvitationEmailJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_InvitationEmailJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_InvitationEmailJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_InvitationEmailJob_Set_Input>;
  pk_columns: Job_Queues_InvitationEmailJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_MediaPackageHarvestJobArgs = {
  _set?: Maybe<Job_Queues_MediaPackageHarvestJob_Set_Input>;
  where: Job_Queues_MediaPackageHarvestJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_MediaPackageHarvestJob_By_PkArgs = {
  _set?: Maybe<Job_Queues_MediaPackageHarvestJob_Set_Input>;
  pk_columns: Job_Queues_MediaPackageHarvestJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PublishVideoJobArgs = {
  _set?: Maybe<Job_Queues_PublishVideoJob_Set_Input>;
  where: Job_Queues_PublishVideoJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_PublishVideoJob_By_PkArgs = {
  _set?: Maybe<Job_Queues_PublishVideoJob_Set_Input>;
  pk_columns: Job_Queues_PublishVideoJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_SubmissionRequestEmailJobArgs = {
  _append?: Maybe<Job_Queues_SubmissionRequestEmailJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_SubmissionRequestEmailJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_SubmissionRequestEmailJob_Set_Input>;
  where: Job_Queues_SubmissionRequestEmailJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_SubmissionRequestEmailJob_By_PkArgs = {
  _append?: Maybe<Job_Queues_SubmissionRequestEmailJob_Append_Input>;
  _delete_at_path?: Maybe<Job_Queues_SubmissionRequestEmailJob_Delete_At_Path_Input>;
  _delete_elem?: Maybe<Job_Queues_SubmissionRequestEmailJob_Delete_Elem_Input>;
  _delete_key?: Maybe<Job_Queues_SubmissionRequestEmailJob_Delete_Key_Input>;
  _prepend?: Maybe<Job_Queues_SubmissionRequestEmailJob_Prepend_Input>;
  _set?: Maybe<Job_Queues_SubmissionRequestEmailJob_Set_Input>;
  pk_columns: Job_Queues_SubmissionRequestEmailJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_UploadYouTubeVideoJobArgs = {
  _inc?: Maybe<Job_Queues_UploadYouTubeVideoJob_Inc_Input>;
  _set?: Maybe<Job_Queues_UploadYouTubeVideoJob_Set_Input>;
  where: Job_Queues_UploadYouTubeVideoJob_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Job_Queues_UploadYouTubeVideoJob_By_PkArgs = {
  _inc?: Maybe<Job_Queues_UploadYouTubeVideoJob_Inc_Input>;
  _set?: Maybe<Job_Queues_UploadYouTubeVideoJob_Set_Input>;
  pk_columns: Job_Queues_UploadYouTubeVideoJob_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleAlgorithmArgs = {
  _set?: Maybe<Room_ShuffleAlgorithm_Set_Input>;
  where: Room_ShuffleAlgorithm_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleAlgorithm_By_PkArgs = {
  _set?: Maybe<Room_ShuffleAlgorithm_Set_Input>;
  pk_columns: Room_ShuffleAlgorithm_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShufflePeriodArgs = {
  _inc?: Maybe<Room_ShufflePeriod_Inc_Input>;
  _set?: Maybe<Room_ShufflePeriod_Set_Input>;
  where: Room_ShufflePeriod_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShufflePeriod_By_PkArgs = {
  _inc?: Maybe<Room_ShufflePeriod_Inc_Input>;
  _set?: Maybe<Room_ShufflePeriod_Set_Input>;
  pk_columns: Room_ShufflePeriod_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleQueueEntryArgs = {
  _inc?: Maybe<Room_ShuffleQueueEntry_Inc_Input>;
  _set?: Maybe<Room_ShuffleQueueEntry_Set_Input>;
  where: Room_ShuffleQueueEntry_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleQueueEntry_By_PkArgs = {
  _inc?: Maybe<Room_ShuffleQueueEntry_Inc_Input>;
  _set?: Maybe<Room_ShuffleQueueEntry_Set_Input>;
  pk_columns: Room_ShuffleQueueEntry_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleRoomArgs = {
  _inc?: Maybe<Room_ShuffleRoom_Inc_Input>;
  _set?: Maybe<Room_ShuffleRoom_Set_Input>;
  where: Room_ShuffleRoom_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_Room_ShuffleRoom_By_PkArgs = {
  _inc?: Maybe<Room_ShuffleRoom_Inc_Input>;
  _set?: Maybe<Room_ShuffleRoom_Set_Input>;
  pk_columns: Room_ShuffleRoom_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationArgs = {
  _append?: Maybe<System_Configuration_Append_Input>;
  _delete_at_path?: Maybe<System_Configuration_Delete_At_Path_Input>;
  _delete_elem?: Maybe<System_Configuration_Delete_Elem_Input>;
  _delete_key?: Maybe<System_Configuration_Delete_Key_Input>;
  _prepend?: Maybe<System_Configuration_Prepend_Input>;
  _set?: Maybe<System_Configuration_Set_Input>;
  where: System_Configuration_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationKeyArgs = {
  _set?: Maybe<System_ConfigurationKey_Set_Input>;
  where: System_ConfigurationKey_Bool_Exp;
};


/** mutation root */
export type Mutation_RootUpdate_System_ConfigurationKey_By_PkArgs = {
  _set?: Maybe<System_ConfigurationKey_Set_Input>;
  pk_columns: System_ConfigurationKey_Pk_Columns_Input;
};


/** mutation root */
export type Mutation_RootUpdate_System_Configuration_By_PkArgs = {
  _append?: Maybe<System_Configuration_Append_Input>;
  _delete_at_path?: Maybe<System_Configuration_Delete_At_Path_Input>;
  _delete_elem?: Maybe<System_Configuration_Delete_Elem_Input>;
  _delete_key?: Maybe<System_Configuration_Delete_Key_Input>;
  _prepend?: Maybe<System_Configuration_Prepend_Input>;
  _set?: Maybe<System_Configuration_Set_Input>;
  pk_columns: System_Configuration_Pk_Columns_Input;
};

/** column ordering options */
export enum Order_By {
  /** in the ascending order, nulls last */
  Asc = 'asc',
  /** in the ascending order, nulls first */
  AscNullsFirst = 'asc_nulls_first',
  /** in the ascending order, nulls last */
  AscNullsLast = 'asc_nulls_last',
  /** in the descending order, nulls first */
  Desc = 'desc',
  /** in the descending order, nulls first */
  DescNullsFirst = 'desc_nulls_first',
  /** in the descending order, nulls last */
  DescNullsLast = 'desc_nulls_last'
}

/** query root */
export type Query_Root = {
  __typename?: 'query_root';
  /** fetch data from the table: "Attendee" */
  Attendee: Array<Attendee>;
  /** fetch data from the table: "AttendeeGoogleAccount" */
  AttendeeGoogleAccount: Array<AttendeeGoogleAccount>;
  /** fetch aggregated fields from the table: "AttendeeGoogleAccount" */
  AttendeeGoogleAccount_aggregate: AttendeeGoogleAccount_Aggregate;
  /** fetch data from the table: "AttendeeGoogleAccount" using primary key columns */
  AttendeeGoogleAccount_by_pk?: Maybe<AttendeeGoogleAccount>;
  /** fetch data from the table: "AttendeeProfile" */
  AttendeeProfile: Array<AttendeeProfile>;
  /** fetch aggregated fields from the table: "AttendeeProfile" */
  AttendeeProfile_aggregate: AttendeeProfile_Aggregate;
  /** fetch data from the table: "AttendeeProfile" using primary key columns */
  AttendeeProfile_by_pk?: Maybe<AttendeeProfile>;
  /** fetch aggregated fields from the table: "Attendee" */
  Attendee_aggregate: Attendee_Aggregate;
  /** fetch data from the table: "Attendee" using primary key columns */
  Attendee_by_pk?: Maybe<Attendee>;
  /** fetch data from the table: "Broadcast" */
  Broadcast: Array<Broadcast>;
  /** fetch data from the table: "BroadcastContentItem" */
  BroadcastContentItem: Array<BroadcastContentItem>;
  /** fetch aggregated fields from the table: "BroadcastContentItem" */
  BroadcastContentItem_aggregate: BroadcastContentItem_Aggregate;
  /** fetch data from the table: "BroadcastContentItem" using primary key columns */
  BroadcastContentItem_by_pk?: Maybe<BroadcastContentItem>;
  /** fetch aggregated fields from the table: "Broadcast" */
  Broadcast_aggregate: Broadcast_Aggregate;
  /** fetch data from the table: "Broadcast" using primary key columns */
  Broadcast_by_pk?: Maybe<Broadcast>;
  /** fetch data from the table: "Conference" */
  Conference: Array<Conference>;
  /** fetch data from the table: "ConferenceConfiguration" */
  ConferenceConfiguration: Array<ConferenceConfiguration>;
  /** fetch aggregated fields from the table: "ConferenceConfiguration" */
  ConferenceConfiguration_aggregate: ConferenceConfiguration_Aggregate;
  /** fetch data from the table: "ConferenceConfiguration" using primary key columns */
  ConferenceConfiguration_by_pk?: Maybe<ConferenceConfiguration>;
  /** fetch data from the table: "ConferenceDemoCode" */
  ConferenceDemoCode: Array<ConferenceDemoCode>;
  /** fetch aggregated fields from the table: "ConferenceDemoCode" */
  ConferenceDemoCode_aggregate: ConferenceDemoCode_Aggregate;
  /** fetch data from the table: "ConferenceDemoCode" using primary key columns */
  ConferenceDemoCode_by_pk?: Maybe<ConferenceDemoCode>;
  /** fetch data from the table: "ConferencePrepareJob" */
  ConferencePrepareJob: Array<ConferencePrepareJob>;
  /** fetch aggregated fields from the table: "ConferencePrepareJob" */
  ConferencePrepareJob_aggregate: ConferencePrepareJob_Aggregate;
  /** fetch data from the table: "ConferencePrepareJob" using primary key columns */
  ConferencePrepareJob_by_pk?: Maybe<ConferencePrepareJob>;
  /** fetch aggregated fields from the table: "Conference" */
  Conference_aggregate: Conference_Aggregate;
  /** fetch data from the table: "Conference" using primary key columns */
  Conference_by_pk?: Maybe<Conference>;
  /** fetch data from the table: "ContentGroup" */
  ContentGroup: Array<ContentGroup>;
  /** fetch data from the table: "ContentGroupHallway" */
  ContentGroupHallway: Array<ContentGroupHallway>;
  /** fetch aggregated fields from the table: "ContentGroupHallway" */
  ContentGroupHallway_aggregate: ContentGroupHallway_Aggregate;
  /** fetch data from the table: "ContentGroupHallway" using primary key columns */
  ContentGroupHallway_by_pk?: Maybe<ContentGroupHallway>;
  /** fetch data from the table: "ContentGroupPerson" */
  ContentGroupPerson: Array<ContentGroupPerson>;
  /** fetch aggregated fields from the table: "ContentGroupPerson" */
  ContentGroupPerson_aggregate: ContentGroupPerson_Aggregate;
  /** fetch data from the table: "ContentGroupPerson" using primary key columns */
  ContentGroupPerson_by_pk?: Maybe<ContentGroupPerson>;
  /** fetch data from the table: "ContentGroupTag" */
  ContentGroupTag: Array<ContentGroupTag>;
  /** fetch aggregated fields from the table: "ContentGroupTag" */
  ContentGroupTag_aggregate: ContentGroupTag_Aggregate;
  /** fetch data from the table: "ContentGroupTag" using primary key columns */
  ContentGroupTag_by_pk?: Maybe<ContentGroupTag>;
  /** fetch data from the table: "ContentGroupType" */
  ContentGroupType: Array<ContentGroupType>;
  /** fetch aggregated fields from the table: "ContentGroupType" */
  ContentGroupType_aggregate: ContentGroupType_Aggregate;
  /** fetch data from the table: "ContentGroupType" using primary key columns */
  ContentGroupType_by_pk?: Maybe<ContentGroupType>;
  /** fetch aggregated fields from the table: "ContentGroup" */
  ContentGroup_aggregate: ContentGroup_Aggregate;
  /** fetch data from the table: "ContentGroup" using primary key columns */
  ContentGroup_by_pk?: Maybe<ContentGroup>;
  /** fetch data from the table: "ContentItem" */
  ContentItem: Array<ContentItem>;
  /** fetch aggregated fields from the table: "ContentItem" */
  ContentItem_aggregate: ContentItem_Aggregate;
  /** fetch data from the table: "ContentItem" using primary key columns */
  ContentItem_by_pk?: Maybe<ContentItem>;
  /** fetch data from the table: "ContentPerson" */
  ContentPerson: Array<ContentPerson>;
  /** fetch aggregated fields from the table: "ContentPerson" */
  ContentPerson_aggregate: ContentPerson_Aggregate;
  /** fetch data from the table: "ContentPerson" using primary key columns */
  ContentPerson_by_pk?: Maybe<ContentPerson>;
  /** fetch data from the table: "ContentType" */
  ContentType: Array<ContentType>;
  /** fetch aggregated fields from the table: "ContentType" */
  ContentType_aggregate: ContentType_Aggregate;
  /** fetch data from the table: "ContentType" using primary key columns */
  ContentType_by_pk?: Maybe<ContentType>;
  /** fetch data from the table: "Email" */
  Email: Array<Email>;
  /** fetch aggregated fields from the table: "Email" */
  Email_aggregate: Email_Aggregate;
  /** fetch data from the table: "Email" using primary key columns */
  Email_by_pk?: Maybe<Email>;
  /** fetch data from the table: "Event" */
  Event: Array<Event>;
  /** fetch data from the table: "EventParticipantStream" */
  EventParticipantStream: Array<EventParticipantStream>;
  /** fetch aggregated fields from the table: "EventParticipantStream" */
  EventParticipantStream_aggregate: EventParticipantStream_Aggregate;
  /** fetch data from the table: "EventParticipantStream" using primary key columns */
  EventParticipantStream_by_pk?: Maybe<EventParticipantStream>;
  /** fetch data from the table: "EventPerson" */
  EventPerson: Array<EventPerson>;
  /** fetch data from the table: "EventPersonRole" */
  EventPersonRole: Array<EventPersonRole>;
  /** fetch aggregated fields from the table: "EventPersonRole" */
  EventPersonRole_aggregate: EventPersonRole_Aggregate;
  /** fetch data from the table: "EventPersonRole" using primary key columns */
  EventPersonRole_by_pk?: Maybe<EventPersonRole>;
  /** fetch aggregated fields from the table: "EventPerson" */
  EventPerson_aggregate: EventPerson_Aggregate;
  /** fetch data from the table: "EventPerson" using primary key columns */
  EventPerson_by_pk?: Maybe<EventPerson>;
  /** fetch data from the table: "EventRoomJoinRequest" */
  EventRoomJoinRequest: Array<EventRoomJoinRequest>;
  /** fetch aggregated fields from the table: "EventRoomJoinRequest" */
  EventRoomJoinRequest_aggregate: EventRoomJoinRequest_Aggregate;
  /** fetch data from the table: "EventRoomJoinRequest" using primary key columns */
  EventRoomJoinRequest_by_pk?: Maybe<EventRoomJoinRequest>;
  /** fetch data from the table: "EventTag" */
  EventTag: Array<EventTag>;
  /** fetch aggregated fields from the table: "EventTag" */
  EventTag_aggregate: EventTag_Aggregate;
  /** fetch data from the table: "EventTag" using primary key columns */
  EventTag_by_pk?: Maybe<EventTag>;
  /** fetch data from the table: "EventVonageSession" */
  EventVonageSession: Array<EventVonageSession>;
  /** fetch aggregated fields from the table: "EventVonageSession" */
  EventVonageSession_aggregate: EventVonageSession_Aggregate;
  /** fetch data from the table: "EventVonageSession" using primary key columns */
  EventVonageSession_by_pk?: Maybe<EventVonageSession>;
  /** fetch aggregated fields from the table: "Event" */
  Event_aggregate: Event_Aggregate;
  /** fetch data from the table: "Event" using primary key columns */
  Event_by_pk?: Maybe<Event>;
  /** fetch data from the table: "ExecutedTransitions" */
  ExecutedTransitions: Array<ExecutedTransitions>;
  /** fetch aggregated fields from the table: "ExecutedTransitions" */
  ExecutedTransitions_aggregate: ExecutedTransitions_Aggregate;
  /** fetch data from the table: "ExecutedTransitions" using primary key columns */
  ExecutedTransitions_by_pk?: Maybe<ExecutedTransitions>;
  /** fetch data from the table: "FlatUnauthPermission" */
  FlatUnauthPermission: Array<FlatUnauthPermission>;
  /** fetch aggregated fields from the table: "FlatUnauthPermission" */
  FlatUnauthPermission_aggregate: FlatUnauthPermission_Aggregate;
  /** fetch data from the table: "FlatUserPermission" */
  FlatUserPermission: Array<FlatUserPermission>;
  /** fetch aggregated fields from the table: "FlatUserPermission" */
  FlatUserPermission_aggregate: FlatUserPermission_Aggregate;
  /** fetch data from the table: "Group" */
  Group: Array<Group>;
  /** fetch data from the table: "GroupAttendee" */
  GroupAttendee: Array<GroupAttendee>;
  /** fetch aggregated fields from the table: "GroupAttendee" */
  GroupAttendee_aggregate: GroupAttendee_Aggregate;
  /** fetch data from the table: "GroupAttendee" using primary key columns */
  GroupAttendee_by_pk?: Maybe<GroupAttendee>;
  /** fetch data from the table: "GroupRole" */
  GroupRole: Array<GroupRole>;
  /** fetch aggregated fields from the table: "GroupRole" */
  GroupRole_aggregate: GroupRole_Aggregate;
  /** fetch data from the table: "GroupRole" using primary key columns */
  GroupRole_by_pk?: Maybe<GroupRole>;
  /** fetch aggregated fields from the table: "Group" */
  Group_aggregate: Group_Aggregate;
  /** fetch data from the table: "Group" using primary key columns */
  Group_by_pk?: Maybe<Group>;
  /** fetch data from the table: "Hallway" */
  Hallway: Array<Hallway>;
  /** fetch aggregated fields from the table: "Hallway" */
  Hallway_aggregate: Hallway_Aggregate;
  /** fetch data from the table: "Hallway" using primary key columns */
  Hallway_by_pk?: Maybe<Hallway>;
  /** fetch data from the table: "InputType" */
  InputType: Array<InputType>;
  /** fetch aggregated fields from the table: "InputType" */
  InputType_aggregate: InputType_Aggregate;
  /** fetch data from the table: "InputType" using primary key columns */
  InputType_by_pk?: Maybe<InputType>;
  /** fetch data from the table: "Invitation" */
  Invitation: Array<Invitation>;
  /** fetch aggregated fields from the table: "Invitation" */
  Invitation_aggregate: Invitation_Aggregate;
  /** fetch data from the table: "Invitation" using primary key columns */
  Invitation_by_pk?: Maybe<Invitation>;
  /** fetch data from the table: "JobStatus" */
  JobStatus: Array<JobStatus>;
  /** fetch aggregated fields from the table: "JobStatus" */
  JobStatus_aggregate: JobStatus_Aggregate;
  /** fetch data from the table: "JobStatus" using primary key columns */
  JobStatus_by_pk?: Maybe<JobStatus>;
  /** fetch data from the table: "MediaLiveChannel" */
  MediaLiveChannel: Array<MediaLiveChannel>;
  /** fetch aggregated fields from the table: "MediaLiveChannel" */
  MediaLiveChannel_aggregate: MediaLiveChannel_Aggregate;
  /** fetch data from the table: "MediaLiveChannel" using primary key columns */
  MediaLiveChannel_by_pk?: Maybe<MediaLiveChannel>;
  /** fetch data from the table: "OnlineStatus" */
  OnlineStatus: Array<OnlineStatus>;
  /** fetch aggregated fields from the table: "OnlineStatus" */
  OnlineStatus_aggregate: OnlineStatus_Aggregate;
  /** fetch data from the table: "OnlineStatus" using primary key columns */
  OnlineStatus_by_pk?: Maybe<OnlineStatus>;
  /** fetch data from the table: "OriginatingData" */
  OriginatingData: Array<OriginatingData>;
  /** fetch aggregated fields from the table: "OriginatingData" */
  OriginatingData_aggregate: OriginatingData_Aggregate;
  /** fetch data from the table: "OriginatingData" using primary key columns */
  OriginatingData_by_pk?: Maybe<OriginatingData>;
  /** fetch data from the table: "Permission" */
  Permission: Array<Permission>;
  /** fetch aggregated fields from the table: "Permission" */
  Permission_aggregate: Permission_Aggregate;
  /** fetch data from the table: "Permission" using primary key columns */
  Permission_by_pk?: Maybe<Permission>;
  /** fetch data from the table: "PushNotificationSubscription" */
  PushNotificationSubscription: Array<PushNotificationSubscription>;
  /** fetch aggregated fields from the table: "PushNotificationSubscription" */
  PushNotificationSubscription_aggregate: PushNotificationSubscription_Aggregate;
  /** fetch data from the table: "PushNotificationSubscription" using primary key columns */
  PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
  /** fetch data from the table: "RequiredContentItem" */
  RequiredContentItem: Array<RequiredContentItem>;
  /** fetch aggregated fields from the table: "RequiredContentItem" */
  RequiredContentItem_aggregate: RequiredContentItem_Aggregate;
  /** fetch data from the table: "RequiredContentItem" using primary key columns */
  RequiredContentItem_by_pk?: Maybe<RequiredContentItem>;
  /** fetch data from the table: "Role" */
  Role: Array<Role>;
  /** fetch data from the table: "RolePermission" */
  RolePermission: Array<RolePermission>;
  /** fetch aggregated fields from the table: "RolePermission" */
  RolePermission_aggregate: RolePermission_Aggregate;
  /** fetch data from the table: "RolePermission" using primary key columns */
  RolePermission_by_pk?: Maybe<RolePermission>;
  /** fetch aggregated fields from the table: "Role" */
  Role_aggregate: Role_Aggregate;
  /** fetch data from the table: "Role" using primary key columns */
  Role_by_pk?: Maybe<Role>;
  /** fetch data from the table: "Room" */
  Room: Array<Room>;
  /** fetch data from the table: "RoomMode" */
  RoomMode: Array<RoomMode>;
  /** fetch aggregated fields from the table: "RoomMode" */
  RoomMode_aggregate: RoomMode_Aggregate;
  /** fetch data from the table: "RoomMode" using primary key columns */
  RoomMode_by_pk?: Maybe<RoomMode>;
  /** fetch data from the table: "RoomParticipant" */
  RoomParticipant: Array<RoomParticipant>;
  /** fetch aggregated fields from the table: "RoomParticipant" */
  RoomParticipant_aggregate: RoomParticipant_Aggregate;
  /** fetch data from the table: "RoomParticipant" using primary key columns */
  RoomParticipant_by_pk?: Maybe<RoomParticipant>;
  /** fetch data from the table: "RoomPerson" */
  RoomPerson: Array<RoomPerson>;
  /** fetch data from the table: "RoomPersonRole" */
  RoomPersonRole: Array<RoomPersonRole>;
  /** fetch aggregated fields from the table: "RoomPersonRole" */
  RoomPersonRole_aggregate: RoomPersonRole_Aggregate;
  /** fetch data from the table: "RoomPersonRole" using primary key columns */
  RoomPersonRole_by_pk?: Maybe<RoomPersonRole>;
  /** fetch aggregated fields from the table: "RoomPerson" */
  RoomPerson_aggregate: RoomPerson_Aggregate;
  /** fetch data from the table: "RoomPerson" using primary key columns */
  RoomPerson_by_pk?: Maybe<RoomPerson>;
  /** fetch data from the table: "RoomPrivacy" */
  RoomPrivacy: Array<RoomPrivacy>;
  /** fetch aggregated fields from the table: "RoomPrivacy" */
  RoomPrivacy_aggregate: RoomPrivacy_Aggregate;
  /** fetch data from the table: "RoomPrivacy" using primary key columns */
  RoomPrivacy_by_pk?: Maybe<RoomPrivacy>;
  /** fetch aggregated fields from the table: "Room" */
  Room_aggregate: Room_Aggregate;
  /** fetch data from the table: "Room" using primary key columns */
  Room_by_pk?: Maybe<Room>;
  /** fetch data from the table: "Tag" */
  Tag: Array<Tag>;
  /** fetch aggregated fields from the table: "Tag" */
  Tag_aggregate: Tag_Aggregate;
  /** fetch data from the table: "Tag" using primary key columns */
  Tag_by_pk?: Maybe<Tag>;
  /** fetch data from the table: "TranscriptionJob" */
  TranscriptionJob: Array<TranscriptionJob>;
  /** fetch aggregated fields from the table: "TranscriptionJob" */
  TranscriptionJob_aggregate: TranscriptionJob_Aggregate;
  /** fetch data from the table: "TranscriptionJob" using primary key columns */
  TranscriptionJob_by_pk?: Maybe<TranscriptionJob>;
  /** fetch data from the table: "Transitions" */
  Transitions: Array<Transitions>;
  /** fetch aggregated fields from the table: "Transitions" */
  Transitions_aggregate: Transitions_Aggregate;
  /** fetch data from the table: "Transitions" using primary key columns */
  Transitions_by_pk?: Maybe<Transitions>;
  /** fetch data from the table: "Uploader" */
  Uploader: Array<Uploader>;
  /** fetch aggregated fields from the table: "Uploader" */
  Uploader_aggregate: Uploader_Aggregate;
  /** fetch data from the table: "Uploader" using primary key columns */
  Uploader_by_pk?: Maybe<Uploader>;
  /** fetch data from the table: "User" */
  User: Array<User>;
  /** fetch aggregated fields from the table: "User" */
  User_aggregate: User_Aggregate;
  /** fetch data from the table: "User" using primary key columns */
  User_by_pk?: Maybe<User>;
  /** fetch data from the table: "VideoRenderJob" */
  VideoRenderJob: Array<VideoRenderJob>;
  /** fetch aggregated fields from the table: "VideoRenderJob" */
  VideoRenderJob_aggregate: VideoRenderJob_Aggregate;
  /** fetch data from the table: "VideoRenderJob" using primary key columns */
  VideoRenderJob_by_pk?: Maybe<VideoRenderJob>;
  /** fetch data from the table: "YouTubeUpload" */
  YouTubeUpload: Array<YouTubeUpload>;
  /** fetch aggregated fields from the table: "YouTubeUpload" */
  YouTubeUpload_aggregate: YouTubeUpload_Aggregate;
  /** fetch data from the table: "YouTubeUpload" using primary key columns */
  YouTubeUpload_by_pk?: Maybe<YouTubeUpload>;
  /** fetch data from the table: "analytics.AppStats" */
  analytics_AppStats: Array<Analytics_AppStats>;
  /** fetch aggregated fields from the table: "analytics.AppStats" */
  analytics_AppStats_aggregate: Analytics_AppStats_Aggregate;
  /** fetch data from the table: "analytics.AppStats" using primary key columns */
  analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
  /** fetch data from the table: "chat.Chat" */
  chat_Chat: Array<Chat_Chat>;
  /** fetch aggregated fields from the table: "chat.Chat" */
  chat_Chat_aggregate: Chat_Chat_Aggregate;
  /** fetch data from the table: "chat.Chat" using primary key columns */
  chat_Chat_by_pk?: Maybe<Chat_Chat>;
  /** fetch data from the table: "chat.Flag" */
  chat_Flag: Array<Chat_Flag>;
  /** fetch data from the table: "chat.FlagType" */
  chat_FlagType: Array<Chat_FlagType>;
  /** fetch aggregated fields from the table: "chat.FlagType" */
  chat_FlagType_aggregate: Chat_FlagType_Aggregate;
  /** fetch data from the table: "chat.FlagType" using primary key columns */
  chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
  /** fetch aggregated fields from the table: "chat.Flag" */
  chat_Flag_aggregate: Chat_Flag_Aggregate;
  /** fetch data from the table: "chat.Flag" using primary key columns */
  chat_Flag_by_pk?: Maybe<Chat_Flag>;
  /** fetch data from the table: "chat.Message" */
  chat_Message: Array<Chat_Message>;
  /** fetch data from the table: "chat.MessageType" */
  chat_MessageType: Array<Chat_MessageType>;
  /** fetch aggregated fields from the table: "chat.MessageType" */
  chat_MessageType_aggregate: Chat_MessageType_Aggregate;
  /** fetch data from the table: "chat.MessageType" using primary key columns */
  chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
  /** fetch aggregated fields from the table: "chat.Message" */
  chat_Message_aggregate: Chat_Message_Aggregate;
  /** fetch data from the table: "chat.Message" using primary key columns */
  chat_Message_by_pk?: Maybe<Chat_Message>;
  /** fetch data from the table: "chat.Pin" */
  chat_Pin: Array<Chat_Pin>;
  /** fetch aggregated fields from the table: "chat.Pin" */
  chat_Pin_aggregate: Chat_Pin_Aggregate;
  /** fetch data from the table: "chat.Pin" using primary key columns */
  chat_Pin_by_pk?: Maybe<Chat_Pin>;
  /** fetch data from the table: "chat.Reaction" */
  chat_Reaction: Array<Chat_Reaction>;
  /** fetch data from the table: "chat.ReactionType" */
  chat_ReactionType: Array<Chat_ReactionType>;
  /** fetch aggregated fields from the table: "chat.ReactionType" */
  chat_ReactionType_aggregate: Chat_ReactionType_Aggregate;
  /** fetch data from the table: "chat.ReactionType" using primary key columns */
  chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
  /** fetch aggregated fields from the table: "chat.Reaction" */
  chat_Reaction_aggregate: Chat_Reaction_Aggregate;
  /** fetch data from the table: "chat.Reaction" using primary key columns */
  chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
  /** fetch data from the table: "chat.ReadUpToIndex" */
  chat_ReadUpToIndex: Array<Chat_ReadUpToIndex>;
  /** fetch aggregated fields from the table: "chat.ReadUpToIndex" */
  chat_ReadUpToIndex_aggregate: Chat_ReadUpToIndex_Aggregate;
  /** fetch data from the table: "chat.ReadUpToIndex" using primary key columns */
  chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
  /** fetch data from the table: "chat.Subscription" */
  chat_Subscription: Array<Chat_Subscription>;
  /** fetch aggregated fields from the table: "chat.Subscription" */
  chat_Subscription_aggregate: Chat_Subscription_Aggregate;
  /** fetch data from the table: "chat.Subscription" using primary key columns */
  chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
  /** perform the action: "echo" */
  echo?: Maybe<EchoOutput>;
  /** perform the action: "getContentItem" */
  getContentItem?: Maybe<Array<Maybe<GetContentItemOutput>>>;
  /** perform the action: "getUploadAgreement" */
  getUploadAgreement?: Maybe<GetUploadAgreementOutput>;
  /** fetch data from the table: "job_queues.ChannelStackCreateJob" */
  job_queues_ChannelStackCreateJob: Array<Job_Queues_ChannelStackCreateJob>;
  /** fetch aggregated fields from the table: "job_queues.ChannelStackCreateJob" */
  job_queues_ChannelStackCreateJob_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
  /** fetch data from the table: "job_queues.ChannelStackCreateJob" using primary key columns */
  job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
  /** fetch data from the table: "job_queues.CombineVideosJob" */
  job_queues_CombineVideosJob: Array<Job_Queues_CombineVideosJob>;
  /** fetch aggregated fields from the table: "job_queues.CombineVideosJob" */
  job_queues_CombineVideosJob_aggregate: Job_Queues_CombineVideosJob_Aggregate;
  /** fetch data from the table: "job_queues.CombineVideosJob" using primary key columns */
  job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
  /** fetch data from the table: "job_queues.CustomEmailJob" */
  job_queues_CustomEmailJob: Array<Job_Queues_CustomEmailJob>;
  /** fetch aggregated fields from the table: "job_queues.CustomEmailJob" */
  job_queues_CustomEmailJob_aggregate: Job_Queues_CustomEmailJob_Aggregate;
  /** fetch data from the table: "job_queues.CustomEmailJob" using primary key columns */
  job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
  /** fetch data from the table: "job_queues.InvitationEmailJob" */
  job_queues_InvitationEmailJob: Array<Job_Queues_InvitationEmailJob>;
  /** fetch aggregated fields from the table: "job_queues.InvitationEmailJob" */
  job_queues_InvitationEmailJob_aggregate: Job_Queues_InvitationEmailJob_Aggregate;
  /** fetch data from the table: "job_queues.InvitationEmailJob" using primary key columns */
  job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
  /** fetch data from the table: "job_queues.MediaPackageHarvestJob" */
  job_queues_MediaPackageHarvestJob: Array<Job_Queues_MediaPackageHarvestJob>;
  /** fetch aggregated fields from the table: "job_queues.MediaPackageHarvestJob" */
  job_queues_MediaPackageHarvestJob_aggregate: Job_Queues_MediaPackageHarvestJob_Aggregate;
  /** fetch data from the table: "job_queues.MediaPackageHarvestJob" using primary key columns */
  job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
  /** fetch data from the table: "job_queues.PublishVideoJob" */
  job_queues_PublishVideoJob: Array<Job_Queues_PublishVideoJob>;
  /** fetch aggregated fields from the table: "job_queues.PublishVideoJob" */
  job_queues_PublishVideoJob_aggregate: Job_Queues_PublishVideoJob_Aggregate;
  /** fetch data from the table: "job_queues.PublishVideoJob" using primary key columns */
  job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
  /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" */
  job_queues_SubmissionRequestEmailJob: Array<Job_Queues_SubmissionRequestEmailJob>;
  /** fetch aggregated fields from the table: "job_queues.SubmissionRequestEmailJob" */
  job_queues_SubmissionRequestEmailJob_aggregate: Job_Queues_SubmissionRequestEmailJob_Aggregate;
  /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" using primary key columns */
  job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
  /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" */
  job_queues_UploadYouTubeVideoJob: Array<Job_Queues_UploadYouTubeVideoJob>;
  /** fetch aggregated fields from the table: "job_queues.UploadYouTubeVideoJob" */
  job_queues_UploadYouTubeVideoJob_aggregate: Job_Queues_UploadYouTubeVideoJob_Aggregate;
  /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" using primary key columns */
  job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
  /** perform the action: "presence_Summary" */
  presence_Summary?: Maybe<PresenceSummaryOutput>;
  /** perform the action: "protectedEcho" */
  protectedEcho?: Maybe<ProtectedEchoOutput>;
  /** fetch data from the table: "room.ShuffleAlgorithm" */
  room_ShuffleAlgorithm: Array<Room_ShuffleAlgorithm>;
  /** fetch aggregated fields from the table: "room.ShuffleAlgorithm" */
  room_ShuffleAlgorithm_aggregate: Room_ShuffleAlgorithm_Aggregate;
  /** fetch data from the table: "room.ShuffleAlgorithm" using primary key columns */
  room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
  /** fetch data from the table: "room.ShufflePeriod" */
  room_ShufflePeriod: Array<Room_ShufflePeriod>;
  /** fetch aggregated fields from the table: "room.ShufflePeriod" */
  room_ShufflePeriod_aggregate: Room_ShufflePeriod_Aggregate;
  /** fetch data from the table: "room.ShufflePeriod" using primary key columns */
  room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
  /** fetch data from the table: "room.ShuffleQueueEntry" */
  room_ShuffleQueueEntry: Array<Room_ShuffleQueueEntry>;
  /** fetch aggregated fields from the table: "room.ShuffleQueueEntry" */
  room_ShuffleQueueEntry_aggregate: Room_ShuffleQueueEntry_Aggregate;
  /** fetch data from the table: "room.ShuffleQueueEntry" using primary key columns */
  room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
  /** fetch data from the table: "room.ShuffleRoom" */
  room_ShuffleRoom: Array<Room_ShuffleRoom>;
  /** fetch aggregated fields from the table: "room.ShuffleRoom" */
  room_ShuffleRoom_aggregate: Room_ShuffleRoom_Aggregate;
  /** fetch data from the table: "room.ShuffleRoom" using primary key columns */
  room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
  /** fetch data from the table: "system.Configuration" */
  system_Configuration: Array<System_Configuration>;
  /** fetch data from the table: "system.ConfigurationKey" */
  system_ConfigurationKey: Array<System_ConfigurationKey>;
  /** fetch aggregated fields from the table: "system.ConfigurationKey" */
  system_ConfigurationKey_aggregate: System_ConfigurationKey_Aggregate;
  /** fetch data from the table: "system.ConfigurationKey" using primary key columns */
  system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
  /** fetch aggregated fields from the table: "system.Configuration" */
  system_Configuration_aggregate: System_Configuration_Aggregate;
  /** fetch data from the table: "system.Configuration" using primary key columns */
  system_Configuration_by_pk?: Maybe<System_Configuration>;
  /** perform the action: "vapidPublicKey" */
  vapidPublicKey: VapidPublicKeyOutput;
};


/** query root */
export type Query_RootAttendeeArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** query root */
export type Query_RootAttendeeGoogleAccountArgs = {
  distinct_on?: Maybe<Array<AttendeeGoogleAccount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeGoogleAccount_Order_By>>;
  where?: Maybe<AttendeeGoogleAccount_Bool_Exp>;
};


/** query root */
export type Query_RootAttendeeGoogleAccount_AggregateArgs = {
  distinct_on?: Maybe<Array<AttendeeGoogleAccount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeGoogleAccount_Order_By>>;
  where?: Maybe<AttendeeGoogleAccount_Bool_Exp>;
};


/** query root */
export type Query_RootAttendeeGoogleAccount_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootAttendeeProfileArgs = {
  distinct_on?: Maybe<Array<AttendeeProfile_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeProfile_Order_By>>;
  where?: Maybe<AttendeeProfile_Bool_Exp>;
};


/** query root */
export type Query_RootAttendeeProfile_AggregateArgs = {
  distinct_on?: Maybe<Array<AttendeeProfile_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeProfile_Order_By>>;
  where?: Maybe<AttendeeProfile_Bool_Exp>;
};


/** query root */
export type Query_RootAttendeeProfile_By_PkArgs = {
  attendeeId: Scalars['uuid'];
};


/** query root */
export type Query_RootAttendee_AggregateArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** query root */
export type Query_RootAttendee_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootBroadcastArgs = {
  distinct_on?: Maybe<Array<Broadcast_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Broadcast_Order_By>>;
  where?: Maybe<Broadcast_Bool_Exp>;
};


/** query root */
export type Query_RootBroadcastContentItemArgs = {
  distinct_on?: Maybe<Array<BroadcastContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BroadcastContentItem_Order_By>>;
  where?: Maybe<BroadcastContentItem_Bool_Exp>;
};


/** query root */
export type Query_RootBroadcastContentItem_AggregateArgs = {
  distinct_on?: Maybe<Array<BroadcastContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BroadcastContentItem_Order_By>>;
  where?: Maybe<BroadcastContentItem_Bool_Exp>;
};


/** query root */
export type Query_RootBroadcastContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootBroadcast_AggregateArgs = {
  distinct_on?: Maybe<Array<Broadcast_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Broadcast_Order_By>>;
  where?: Maybe<Broadcast_Bool_Exp>;
};


/** query root */
export type Query_RootBroadcast_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootConferenceArgs = {
  distinct_on?: Maybe<Array<Conference_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conference_Order_By>>;
  where?: Maybe<Conference_Bool_Exp>;
};


/** query root */
export type Query_RootConferenceConfigurationArgs = {
  distinct_on?: Maybe<Array<ConferenceConfiguration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceConfiguration_Order_By>>;
  where?: Maybe<ConferenceConfiguration_Bool_Exp>;
};


/** query root */
export type Query_RootConferenceConfiguration_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferenceConfiguration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceConfiguration_Order_By>>;
  where?: Maybe<ConferenceConfiguration_Bool_Exp>;
};


/** query root */
export type Query_RootConferenceConfiguration_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootConferenceDemoCodeArgs = {
  distinct_on?: Maybe<Array<ConferenceDemoCode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceDemoCode_Order_By>>;
  where?: Maybe<ConferenceDemoCode_Bool_Exp>;
};


/** query root */
export type Query_RootConferenceDemoCode_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferenceDemoCode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceDemoCode_Order_By>>;
  where?: Maybe<ConferenceDemoCode_Bool_Exp>;
};


/** query root */
export type Query_RootConferenceDemoCode_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootConferencePrepareJobArgs = {
  distinct_on?: Maybe<Array<ConferencePrepareJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferencePrepareJob_Order_By>>;
  where?: Maybe<ConferencePrepareJob_Bool_Exp>;
};


/** query root */
export type Query_RootConferencePrepareJob_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferencePrepareJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferencePrepareJob_Order_By>>;
  where?: Maybe<ConferencePrepareJob_Bool_Exp>;
};


/** query root */
export type Query_RootConferencePrepareJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootConference_AggregateArgs = {
  distinct_on?: Maybe<Array<Conference_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conference_Order_By>>;
  where?: Maybe<Conference_Bool_Exp>;
};


/** query root */
export type Query_RootConference_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootContentGroupArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupHallwayArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupHallway_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupHallway_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootContentGroupPersonArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootContentGroupTagArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupTag_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootContentGroupTypeArgs = {
  distinct_on?: Maybe<Array<ContentGroupType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupType_Order_By>>;
  where?: Maybe<ContentGroupType_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupType_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupType_Order_By>>;
  where?: Maybe<ContentGroupType_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroupType_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootContentGroup_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** query root */
export type Query_RootContentGroup_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootContentItemArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** query root */
export type Query_RootContentItem_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** query root */
export type Query_RootContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootContentPersonArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** query root */
export type Query_RootContentPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** query root */
export type Query_RootContentPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootContentTypeArgs = {
  distinct_on?: Maybe<Array<ContentType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentType_Order_By>>;
  where?: Maybe<ContentType_Bool_Exp>;
};


/** query root */
export type Query_RootContentType_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentType_Order_By>>;
  where?: Maybe<ContentType_Bool_Exp>;
};


/** query root */
export type Query_RootContentType_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootEmailArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};


/** query root */
export type Query_RootEmail_AggregateArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};


/** query root */
export type Query_RootEmail_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootEventArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** query root */
export type Query_RootEventParticipantStreamArgs = {
  distinct_on?: Maybe<Array<EventParticipantStream_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventParticipantStream_Order_By>>;
  where?: Maybe<EventParticipantStream_Bool_Exp>;
};


/** query root */
export type Query_RootEventParticipantStream_AggregateArgs = {
  distinct_on?: Maybe<Array<EventParticipantStream_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventParticipantStream_Order_By>>;
  where?: Maybe<EventParticipantStream_Bool_Exp>;
};


/** query root */
export type Query_RootEventParticipantStream_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootEventPersonArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** query root */
export type Query_RootEventPersonRoleArgs = {
  distinct_on?: Maybe<Array<EventPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPersonRole_Order_By>>;
  where?: Maybe<EventPersonRole_Bool_Exp>;
};


/** query root */
export type Query_RootEventPersonRole_AggregateArgs = {
  distinct_on?: Maybe<Array<EventPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPersonRole_Order_By>>;
  where?: Maybe<EventPersonRole_Bool_Exp>;
};


/** query root */
export type Query_RootEventPersonRole_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootEventPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** query root */
export type Query_RootEventPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootEventRoomJoinRequestArgs = {
  distinct_on?: Maybe<Array<EventRoomJoinRequest_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventRoomJoinRequest_Order_By>>;
  where?: Maybe<EventRoomJoinRequest_Bool_Exp>;
};


/** query root */
export type Query_RootEventRoomJoinRequest_AggregateArgs = {
  distinct_on?: Maybe<Array<EventRoomJoinRequest_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventRoomJoinRequest_Order_By>>;
  where?: Maybe<EventRoomJoinRequest_Bool_Exp>;
};


/** query root */
export type Query_RootEventRoomJoinRequest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootEventTagArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};


/** query root */
export type Query_RootEventTag_AggregateArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};


/** query root */
export type Query_RootEventTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootEventVonageSessionArgs = {
  distinct_on?: Maybe<Array<EventVonageSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventVonageSession_Order_By>>;
  where?: Maybe<EventVonageSession_Bool_Exp>;
};


/** query root */
export type Query_RootEventVonageSession_AggregateArgs = {
  distinct_on?: Maybe<Array<EventVonageSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventVonageSession_Order_By>>;
  where?: Maybe<EventVonageSession_Bool_Exp>;
};


/** query root */
export type Query_RootEventVonageSession_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootEvent_AggregateArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** query root */
export type Query_RootEvent_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootExecutedTransitionsArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** query root */
export type Query_RootExecutedTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** query root */
export type Query_RootExecutedTransitions_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootFlatUnauthPermissionArgs = {
  distinct_on?: Maybe<Array<FlatUnauthPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUnauthPermission_Order_By>>;
  where?: Maybe<FlatUnauthPermission_Bool_Exp>;
};


/** query root */
export type Query_RootFlatUnauthPermission_AggregateArgs = {
  distinct_on?: Maybe<Array<FlatUnauthPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUnauthPermission_Order_By>>;
  where?: Maybe<FlatUnauthPermission_Bool_Exp>;
};


/** query root */
export type Query_RootFlatUserPermissionArgs = {
  distinct_on?: Maybe<Array<FlatUserPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUserPermission_Order_By>>;
  where?: Maybe<FlatUserPermission_Bool_Exp>;
};


/** query root */
export type Query_RootFlatUserPermission_AggregateArgs = {
  distinct_on?: Maybe<Array<FlatUserPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUserPermission_Order_By>>;
  where?: Maybe<FlatUserPermission_Bool_Exp>;
};


/** query root */
export type Query_RootGroupArgs = {
  distinct_on?: Maybe<Array<Group_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Group_Order_By>>;
  where?: Maybe<Group_Bool_Exp>;
};


/** query root */
export type Query_RootGroupAttendeeArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** query root */
export type Query_RootGroupAttendee_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** query root */
export type Query_RootGroupAttendee_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootGroupRoleArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};


/** query root */
export type Query_RootGroupRole_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};


/** query root */
export type Query_RootGroupRole_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootGroup_AggregateArgs = {
  distinct_on?: Maybe<Array<Group_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Group_Order_By>>;
  where?: Maybe<Group_Bool_Exp>;
};


/** query root */
export type Query_RootGroup_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootHallwayArgs = {
  distinct_on?: Maybe<Array<Hallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hallway_Order_By>>;
  where?: Maybe<Hallway_Bool_Exp>;
};


/** query root */
export type Query_RootHallway_AggregateArgs = {
  distinct_on?: Maybe<Array<Hallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hallway_Order_By>>;
  where?: Maybe<Hallway_Bool_Exp>;
};


/** query root */
export type Query_RootHallway_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootInputTypeArgs = {
  distinct_on?: Maybe<Array<InputType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<InputType_Order_By>>;
  where?: Maybe<InputType_Bool_Exp>;
};


/** query root */
export type Query_RootInputType_AggregateArgs = {
  distinct_on?: Maybe<Array<InputType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<InputType_Order_By>>;
  where?: Maybe<InputType_Bool_Exp>;
};


/** query root */
export type Query_RootInputType_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootInvitationArgs = {
  distinct_on?: Maybe<Array<Invitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invitation_Order_By>>;
  where?: Maybe<Invitation_Bool_Exp>;
};


/** query root */
export type Query_RootInvitation_AggregateArgs = {
  distinct_on?: Maybe<Array<Invitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invitation_Order_By>>;
  where?: Maybe<Invitation_Bool_Exp>;
};


/** query root */
export type Query_RootInvitation_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJobStatusArgs = {
  distinct_on?: Maybe<Array<JobStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<JobStatus_Order_By>>;
  where?: Maybe<JobStatus_Bool_Exp>;
};


/** query root */
export type Query_RootJobStatus_AggregateArgs = {
  distinct_on?: Maybe<Array<JobStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<JobStatus_Order_By>>;
  where?: Maybe<JobStatus_Bool_Exp>;
};


/** query root */
export type Query_RootJobStatus_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootMediaLiveChannelArgs = {
  distinct_on?: Maybe<Array<MediaLiveChannel_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MediaLiveChannel_Order_By>>;
  where?: Maybe<MediaLiveChannel_Bool_Exp>;
};


/** query root */
export type Query_RootMediaLiveChannel_AggregateArgs = {
  distinct_on?: Maybe<Array<MediaLiveChannel_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MediaLiveChannel_Order_By>>;
  where?: Maybe<MediaLiveChannel_Bool_Exp>;
};


/** query root */
export type Query_RootMediaLiveChannel_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootOnlineStatusArgs = {
  distinct_on?: Maybe<Array<OnlineStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OnlineStatus_Order_By>>;
  where?: Maybe<OnlineStatus_Bool_Exp>;
};


/** query root */
export type Query_RootOnlineStatus_AggregateArgs = {
  distinct_on?: Maybe<Array<OnlineStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OnlineStatus_Order_By>>;
  where?: Maybe<OnlineStatus_Bool_Exp>;
};


/** query root */
export type Query_RootOnlineStatus_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootOriginatingDataArgs = {
  distinct_on?: Maybe<Array<OriginatingData_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OriginatingData_Order_By>>;
  where?: Maybe<OriginatingData_Bool_Exp>;
};


/** query root */
export type Query_RootOriginatingData_AggregateArgs = {
  distinct_on?: Maybe<Array<OriginatingData_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OriginatingData_Order_By>>;
  where?: Maybe<OriginatingData_Bool_Exp>;
};


/** query root */
export type Query_RootOriginatingData_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootPermissionArgs = {
  distinct_on?: Maybe<Array<Permission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Permission_Order_By>>;
  where?: Maybe<Permission_Bool_Exp>;
};


/** query root */
export type Query_RootPermission_AggregateArgs = {
  distinct_on?: Maybe<Array<Permission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Permission_Order_By>>;
  where?: Maybe<Permission_Bool_Exp>;
};


/** query root */
export type Query_RootPermission_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootPushNotificationSubscriptionArgs = {
  distinct_on?: Maybe<Array<PushNotificationSubscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<PushNotificationSubscription_Order_By>>;
  where?: Maybe<PushNotificationSubscription_Bool_Exp>;
};


/** query root */
export type Query_RootPushNotificationSubscription_AggregateArgs = {
  distinct_on?: Maybe<Array<PushNotificationSubscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<PushNotificationSubscription_Order_By>>;
  where?: Maybe<PushNotificationSubscription_Bool_Exp>;
};


/** query root */
export type Query_RootPushNotificationSubscription_By_PkArgs = {
  endpoint: Scalars['String'];
};


/** query root */
export type Query_RootRequiredContentItemArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** query root */
export type Query_RootRequiredContentItem_AggregateArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** query root */
export type Query_RootRequiredContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootRoleArgs = {
  distinct_on?: Maybe<Array<Role_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Role_Order_By>>;
  where?: Maybe<Role_Bool_Exp>;
};


/** query root */
export type Query_RootRolePermissionArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};


/** query root */
export type Query_RootRolePermission_AggregateArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};


/** query root */
export type Query_RootRolePermission_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootRole_AggregateArgs = {
  distinct_on?: Maybe<Array<Role_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Role_Order_By>>;
  where?: Maybe<Role_Bool_Exp>;
};


/** query root */
export type Query_RootRole_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootRoomArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** query root */
export type Query_RootRoomModeArgs = {
  distinct_on?: Maybe<Array<RoomMode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomMode_Order_By>>;
  where?: Maybe<RoomMode_Bool_Exp>;
};


/** query root */
export type Query_RootRoomMode_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomMode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomMode_Order_By>>;
  where?: Maybe<RoomMode_Bool_Exp>;
};


/** query root */
export type Query_RootRoomMode_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootRoomParticipantArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};


/** query root */
export type Query_RootRoomParticipant_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};


/** query root */
export type Query_RootRoomParticipant_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootRoomPersonArgs = {
  distinct_on?: Maybe<Array<RoomPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPerson_Order_By>>;
  where?: Maybe<RoomPerson_Bool_Exp>;
};


/** query root */
export type Query_RootRoomPersonRoleArgs = {
  distinct_on?: Maybe<Array<RoomPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPersonRole_Order_By>>;
  where?: Maybe<RoomPersonRole_Bool_Exp>;
};


/** query root */
export type Query_RootRoomPersonRole_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPersonRole_Order_By>>;
  where?: Maybe<RoomPersonRole_Bool_Exp>;
};


/** query root */
export type Query_RootRoomPersonRole_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootRoomPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPerson_Order_By>>;
  where?: Maybe<RoomPerson_Bool_Exp>;
};


/** query root */
export type Query_RootRoomPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootRoomPrivacyArgs = {
  distinct_on?: Maybe<Array<RoomPrivacy_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPrivacy_Order_By>>;
  where?: Maybe<RoomPrivacy_Bool_Exp>;
};


/** query root */
export type Query_RootRoomPrivacy_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomPrivacy_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPrivacy_Order_By>>;
  where?: Maybe<RoomPrivacy_Bool_Exp>;
};


/** query root */
export type Query_RootRoomPrivacy_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootRoom_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTagArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};


/** query root */
export type Query_RootTag_AggregateArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};


/** query root */
export type Query_RootTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTranscriptionJobArgs = {
  distinct_on?: Maybe<Array<TranscriptionJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<TranscriptionJob_Order_By>>;
  where?: Maybe<TranscriptionJob_Bool_Exp>;
};


/** query root */
export type Query_RootTranscriptionJob_AggregateArgs = {
  distinct_on?: Maybe<Array<TranscriptionJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<TranscriptionJob_Order_By>>;
  where?: Maybe<TranscriptionJob_Bool_Exp>;
};


/** query root */
export type Query_RootTranscriptionJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootTransitionsArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** query root */
export type Query_RootTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** query root */
export type Query_RootTransitions_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootUploaderArgs = {
  distinct_on?: Maybe<Array<Uploader_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Uploader_Order_By>>;
  where?: Maybe<Uploader_Bool_Exp>;
};


/** query root */
export type Query_RootUploader_AggregateArgs = {
  distinct_on?: Maybe<Array<Uploader_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Uploader_Order_By>>;
  where?: Maybe<Uploader_Bool_Exp>;
};


/** query root */
export type Query_RootUploader_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootUserArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** query root */
export type Query_RootUser_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** query root */
export type Query_RootUser_By_PkArgs = {
  id: Scalars['String'];
};


/** query root */
export type Query_RootVideoRenderJobArgs = {
  distinct_on?: Maybe<Array<VideoRenderJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<VideoRenderJob_Order_By>>;
  where?: Maybe<VideoRenderJob_Bool_Exp>;
};


/** query root */
export type Query_RootVideoRenderJob_AggregateArgs = {
  distinct_on?: Maybe<Array<VideoRenderJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<VideoRenderJob_Order_By>>;
  where?: Maybe<VideoRenderJob_Bool_Exp>;
};


/** query root */
export type Query_RootVideoRenderJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootYouTubeUploadArgs = {
  distinct_on?: Maybe<Array<YouTubeUpload_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<YouTubeUpload_Order_By>>;
  where?: Maybe<YouTubeUpload_Bool_Exp>;
};


/** query root */
export type Query_RootYouTubeUpload_AggregateArgs = {
  distinct_on?: Maybe<Array<YouTubeUpload_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<YouTubeUpload_Order_By>>;
  where?: Maybe<YouTubeUpload_Bool_Exp>;
};


/** query root */
export type Query_RootYouTubeUpload_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootAnalytics_AppStatsArgs = {
  distinct_on?: Maybe<Array<Analytics_AppStats_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Analytics_AppStats_Order_By>>;
  where?: Maybe<Analytics_AppStats_Bool_Exp>;
};


/** query root */
export type Query_RootAnalytics_AppStats_AggregateArgs = {
  distinct_on?: Maybe<Array<Analytics_AppStats_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Analytics_AppStats_Order_By>>;
  where?: Maybe<Analytics_AppStats_Bool_Exp>;
};


/** query root */
export type Query_RootAnalytics_AppStats_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootChat_ChatArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Chat_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Chat_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootChat_FlagArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/** query root */
export type Query_RootChat_FlagTypeArgs = {
  distinct_on?: Maybe<Array<Chat_FlagType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_FlagType_Order_By>>;
  where?: Maybe<Chat_FlagType_Bool_Exp>;
};


/** query root */
export type Query_RootChat_FlagType_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_FlagType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_FlagType_Order_By>>;
  where?: Maybe<Chat_FlagType_Bool_Exp>;
};


/** query root */
export type Query_RootChat_FlagType_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootChat_Flag_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Flag_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootChat_MessageArgs = {
  distinct_on?: Maybe<Array<Chat_Message_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Message_Order_By>>;
  where?: Maybe<Chat_Message_Bool_Exp>;
};


/** query root */
export type Query_RootChat_MessageTypeArgs = {
  distinct_on?: Maybe<Array<Chat_MessageType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_MessageType_Order_By>>;
  where?: Maybe<Chat_MessageType_Bool_Exp>;
};


/** query root */
export type Query_RootChat_MessageType_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_MessageType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_MessageType_Order_By>>;
  where?: Maybe<Chat_MessageType_Bool_Exp>;
};


/** query root */
export type Query_RootChat_MessageType_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootChat_Message_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Message_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Message_Order_By>>;
  where?: Maybe<Chat_Message_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Message_By_PkArgs = {
  id: Scalars['Int'];
};


/** query root */
export type Query_RootChat_PinArgs = {
  distinct_on?: Maybe<Array<Chat_Pin_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Pin_Order_By>>;
  where?: Maybe<Chat_Pin_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Pin_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Pin_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Pin_Order_By>>;
  where?: Maybe<Chat_Pin_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Pin_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** query root */
export type Query_RootChat_ReactionArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};


/** query root */
export type Query_RootChat_ReactionTypeArgs = {
  distinct_on?: Maybe<Array<Chat_ReactionType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReactionType_Order_By>>;
  where?: Maybe<Chat_ReactionType_Bool_Exp>;
};


/** query root */
export type Query_RootChat_ReactionType_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_ReactionType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReactionType_Order_By>>;
  where?: Maybe<Chat_ReactionType_Bool_Exp>;
};


/** query root */
export type Query_RootChat_ReactionType_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootChat_Reaction_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Reaction_By_PkArgs = {
  sId: Scalars['uuid'];
};


/** query root */
export type Query_RootChat_ReadUpToIndexArgs = {
  distinct_on?: Maybe<Array<Chat_ReadUpToIndex_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReadUpToIndex_Order_By>>;
  where?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
};


/** query root */
export type Query_RootChat_ReadUpToIndex_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_ReadUpToIndex_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReadUpToIndex_Order_By>>;
  where?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
};


/** query root */
export type Query_RootChat_ReadUpToIndex_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** query root */
export type Query_RootChat_SubscriptionArgs = {
  distinct_on?: Maybe<Array<Chat_Subscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Subscription_Order_By>>;
  where?: Maybe<Chat_Subscription_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Subscription_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Subscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Subscription_Order_By>>;
  where?: Maybe<Chat_Subscription_Bool_Exp>;
};


/** query root */
export type Query_RootChat_Subscription_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** query root */
export type Query_RootEchoArgs = {
  message: Scalars['String'];
};


/** query root */
export type Query_RootGetContentItemArgs = {
  magicToken: Scalars['String'];
};


/** query root */
export type Query_RootGetUploadAgreementArgs = {
  magicToken: Scalars['String'];
};


/** query root */
export type Query_RootJob_Queues_ChannelStackCreateJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
  where?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_ChannelStackCreateJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
  where?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_ChannelStackCreateJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJob_Queues_CombineVideosJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
  where?: Maybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_CombineVideosJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
  where?: Maybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_CombineVideosJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJob_Queues_CustomEmailJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_CustomEmailJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_CustomEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJob_Queues_InvitationEmailJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_InvitationEmailJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_InvitationEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJob_Queues_MediaPackageHarvestJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
  where?: Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_MediaPackageHarvestJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
  where?: Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_MediaPackageHarvestJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJob_Queues_PublishVideoJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_PublishVideoJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_PublishVideoJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJob_Queues_SubmissionRequestEmailJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_SubmissionRequestEmailJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_SubmissionRequestEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootJob_Queues_UploadYouTubeVideoJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_UploadYouTubeVideoJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};


/** query root */
export type Query_RootJob_Queues_UploadYouTubeVideoJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootProtectedEchoArgs = {
  message: Scalars['String'];
};


/** query root */
export type Query_RootRoom_ShuffleAlgorithmArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleAlgorithm_Order_By>>;
  where?: Maybe<Room_ShuffleAlgorithm_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShuffleAlgorithm_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleAlgorithm_Order_By>>;
  where?: Maybe<Room_ShuffleAlgorithm_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShuffleAlgorithm_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootRoom_ShufflePeriodArgs = {
  distinct_on?: Maybe<Array<Room_ShufflePeriod_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShufflePeriod_Order_By>>;
  where?: Maybe<Room_ShufflePeriod_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShufflePeriod_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShufflePeriod_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShufflePeriod_Order_By>>;
  where?: Maybe<Room_ShufflePeriod_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShufflePeriod_By_PkArgs = {
  id: Scalars['uuid'];
};


/** query root */
export type Query_RootRoom_ShuffleQueueEntryArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShuffleQueueEntry_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShuffleQueueEntry_By_PkArgs = {
  id: Scalars['bigint'];
};


/** query root */
export type Query_RootRoom_ShuffleRoomArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShuffleRoom_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};


/** query root */
export type Query_RootRoom_ShuffleRoom_By_PkArgs = {
  id: Scalars['bigint'];
};


/** query root */
export type Query_RootSystem_ConfigurationArgs = {
  distinct_on?: Maybe<Array<System_Configuration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_Configuration_Order_By>>;
  where?: Maybe<System_Configuration_Bool_Exp>;
};


/** query root */
export type Query_RootSystem_ConfigurationKeyArgs = {
  distinct_on?: Maybe<Array<System_ConfigurationKey_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_ConfigurationKey_Order_By>>;
  where?: Maybe<System_ConfigurationKey_Bool_Exp>;
};


/** query root */
export type Query_RootSystem_ConfigurationKey_AggregateArgs = {
  distinct_on?: Maybe<Array<System_ConfigurationKey_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_ConfigurationKey_Order_By>>;
  where?: Maybe<System_ConfigurationKey_Bool_Exp>;
};


/** query root */
export type Query_RootSystem_ConfigurationKey_By_PkArgs = {
  name: Scalars['String'];
};


/** query root */
export type Query_RootSystem_Configuration_AggregateArgs = {
  distinct_on?: Maybe<Array<System_Configuration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_Configuration_Order_By>>;
  where?: Maybe<System_Configuration_Bool_Exp>;
};


/** query root */
export type Query_RootSystem_Configuration_By_PkArgs = {
  key: System_ConfigurationKey_Enum;
};

/** columns and relationships of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm = {
  __typename?: 'room_ShuffleAlgorithm';
  description: Scalars['String'];
  name: Scalars['String'];
};

/** aggregated selection of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate = {
  __typename?: 'room_ShuffleAlgorithm_aggregate';
  aggregate?: Maybe<Room_ShuffleAlgorithm_Aggregate_Fields>;
  nodes: Array<Room_ShuffleAlgorithm>;
};

/** aggregate fields of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate_Fields = {
  __typename?: 'room_ShuffleAlgorithm_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Room_ShuffleAlgorithm_Max_Fields>;
  min?: Maybe<Room_ShuffleAlgorithm_Min_Fields>;
};


/** aggregate fields of "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<Room_ShuffleAlgorithm_Max_Order_By>;
  min?: Maybe<Room_ShuffleAlgorithm_Min_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Arr_Rel_Insert_Input = {
  data: Array<Room_ShuffleAlgorithm_Insert_Input>;
  on_conflict?: Maybe<Room_ShuffleAlgorithm_On_Conflict>;
};

/** Boolean expression to filter rows from the table "room.ShuffleAlgorithm". All fields are combined with a logical 'AND'. */
export type Room_ShuffleAlgorithm_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Room_ShuffleAlgorithm_Bool_Exp>>>;
  _not?: Maybe<Room_ShuffleAlgorithm_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Room_ShuffleAlgorithm_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Constraint {
  /** unique or primary key constraint */
  ShuffleAlgorithmPkey = 'ShuffleAlgorithm_pkey'
}

export enum Room_ShuffleAlgorithm_Enum {
  /** First-come, first-served with auto-created rooms. */
  Fcfs = 'fcfs',
  /** First-come, first-served with a fixed set of (manually created) rooms. Limits max participants. */
  FcfsFixedRooms = 'fcfs_fixed_rooms',
  /** No automation. Rooms and allocations controlled manually. */
  None = 'none'
}

/** expression to compare columns of type room_ShuffleAlgorithm_enum. All fields are combined with logical 'AND'. */
export type Room_ShuffleAlgorithm_Enum_Comparison_Exp = {
  _eq?: Maybe<Room_ShuffleAlgorithm_Enum>;
  _in?: Maybe<Array<Room_ShuffleAlgorithm_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<Room_ShuffleAlgorithm_Enum>;
  _nin?: Maybe<Array<Room_ShuffleAlgorithm_Enum>>;
};

/** input type for inserting data into table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type Room_ShuffleAlgorithm_Max_Fields = {
  __typename?: 'room_ShuffleAlgorithm_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShuffleAlgorithm_Min_Fields = {
  __typename?: 'room_ShuffleAlgorithm_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Mutation_Response = {
  __typename?: 'room_ShuffleAlgorithm_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Room_ShuffleAlgorithm>;
};

/** input type for inserting object relation for remote table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Obj_Rel_Insert_Input = {
  data: Room_ShuffleAlgorithm_Insert_Input;
  on_conflict?: Maybe<Room_ShuffleAlgorithm_On_Conflict>;
};

/** on conflict condition type for table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_On_Conflict = {
  constraint: Room_ShuffleAlgorithm_Constraint;
  update_columns: Array<Room_ShuffleAlgorithm_Update_Column>;
  where?: Maybe<Room_ShuffleAlgorithm_Bool_Exp>;
};

/** ordering options when selecting data from "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "room.ShuffleAlgorithm" */
export type Room_ShuffleAlgorithm_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "room.ShuffleAlgorithm" */
export enum Room_ShuffleAlgorithm_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriod = {
  __typename?: 'room_ShufflePeriod';
  algorithm: Room_ShuffleAlgorithm_Enum;
  /** An object relationship */
  conference: Conference;
  conferenceId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  endAt: Scalars['timestamptz'];
  id: Scalars['uuid'];
  maxAttendeesPerRoom: Scalars['Int'];
  name: Scalars['String'];
  /** An object relationship */
  organiser: Attendee;
  organiserId: Scalars['uuid'];
  /** An array relationship */
  queueEntries: Array<Room_ShuffleQueueEntry>;
  /** An aggregated array relationship */
  queueEntries_aggregate: Room_ShuffleQueueEntry_Aggregate;
  roomDurationMinutes: Scalars['Int'];
  /** An array relationship */
  shuffleRooms: Array<Room_ShuffleRoom>;
  /** An aggregated array relationship */
  shuffleRooms_aggregate: Room_ShuffleRoom_Aggregate;
  startAt: Scalars['timestamptz'];
  targetAttendeesPerRoom: Scalars['Int'];
  updated_at: Scalars['timestamptz'];
  waitRoomMaxDurationSeconds: Scalars['Int'];
};


/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodQueueEntriesArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};


/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodQueueEntries_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};


/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodShuffleRoomsArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};


/** columns and relationships of "room.ShufflePeriod" */
export type Room_ShufflePeriodShuffleRooms_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};

/** aggregated selection of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate = {
  __typename?: 'room_ShufflePeriod_aggregate';
  aggregate?: Maybe<Room_ShufflePeriod_Aggregate_Fields>;
  nodes: Array<Room_ShufflePeriod>;
};

/** aggregate fields of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_Fields = {
  __typename?: 'room_ShufflePeriod_aggregate_fields';
  avg?: Maybe<Room_ShufflePeriod_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Room_ShufflePeriod_Max_Fields>;
  min?: Maybe<Room_ShufflePeriod_Min_Fields>;
  stddev?: Maybe<Room_ShufflePeriod_Stddev_Fields>;
  stddev_pop?: Maybe<Room_ShufflePeriod_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Room_ShufflePeriod_Stddev_Samp_Fields>;
  sum?: Maybe<Room_ShufflePeriod_Sum_Fields>;
  var_pop?: Maybe<Room_ShufflePeriod_Var_Pop_Fields>;
  var_samp?: Maybe<Room_ShufflePeriod_Var_Samp_Fields>;
  variance?: Maybe<Room_ShufflePeriod_Variance_Fields>;
};


/** aggregate fields of "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Room_ShufflePeriod_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Aggregate_Order_By = {
  avg?: Maybe<Room_ShufflePeriod_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Room_ShufflePeriod_Max_Order_By>;
  min?: Maybe<Room_ShufflePeriod_Min_Order_By>;
  stddev?: Maybe<Room_ShufflePeriod_Stddev_Order_By>;
  stddev_pop?: Maybe<Room_ShufflePeriod_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Room_ShufflePeriod_Stddev_Samp_Order_By>;
  sum?: Maybe<Room_ShufflePeriod_Sum_Order_By>;
  var_pop?: Maybe<Room_ShufflePeriod_Var_Pop_Order_By>;
  var_samp?: Maybe<Room_ShufflePeriod_Var_Samp_Order_By>;
  variance?: Maybe<Room_ShufflePeriod_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Arr_Rel_Insert_Input = {
  data: Array<Room_ShufflePeriod_Insert_Input>;
  on_conflict?: Maybe<Room_ShufflePeriod_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShufflePeriod_Avg_Fields = {
  __typename?: 'room_ShufflePeriod_avg_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Float']>;
  roomDurationMinutes?: Maybe<Scalars['Float']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Float']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Avg_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShufflePeriod". All fields are combined with a logical 'AND'. */
export type Room_ShufflePeriod_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Room_ShufflePeriod_Bool_Exp>>>;
  _not?: Maybe<Room_ShufflePeriod_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Room_ShufflePeriod_Bool_Exp>>>;
  algorithm?: Maybe<Room_ShuffleAlgorithm_Enum_Comparison_Exp>;
  conference?: Maybe<Conference_Bool_Exp>;
  conferenceId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  endAt?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Uuid_Comparison_Exp>;
  maxAttendeesPerRoom?: Maybe<Int_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
  organiser?: Maybe<Attendee_Bool_Exp>;
  organiserId?: Maybe<Uuid_Comparison_Exp>;
  queueEntries?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
  roomDurationMinutes?: Maybe<Int_Comparison_Exp>;
  shuffleRooms?: Maybe<Room_ShuffleRoom_Bool_Exp>;
  startAt?: Maybe<Timestamptz_Comparison_Exp>;
  targetAttendeesPerRoom?: Maybe<Int_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  waitRoomMaxDurationSeconds?: Maybe<Int_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Constraint {
  /** unique or primary key constraint */
  ShufflePeriodPkey = 'ShufflePeriod_pkey'
}

/** input type for incrementing integer column in table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Inc_Input = {
  maxAttendeesPerRoom?: Maybe<Scalars['Int']>;
  roomDurationMinutes?: Maybe<Scalars['Int']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Int']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Int']>;
};

/** input type for inserting data into table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Insert_Input = {
  algorithm?: Maybe<Room_ShuffleAlgorithm_Enum>;
  conference?: Maybe<Conference_Obj_Rel_Insert_Input>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  maxAttendeesPerRoom?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  organiser?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  organiserId?: Maybe<Scalars['uuid']>;
  queueEntries?: Maybe<Room_ShuffleQueueEntry_Arr_Rel_Insert_Input>;
  roomDurationMinutes?: Maybe<Scalars['Int']>;
  shuffleRooms?: Maybe<Room_ShuffleRoom_Arr_Rel_Insert_Input>;
  startAt?: Maybe<Scalars['timestamptz']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Int']>;
};

/** aggregate max on columns */
export type Room_ShufflePeriod_Max_Fields = {
  __typename?: 'room_ShufflePeriod_max_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  maxAttendeesPerRoom?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  organiserId?: Maybe<Scalars['uuid']>;
  roomDurationMinutes?: Maybe<Scalars['Int']>;
  startAt?: Maybe<Scalars['timestamptz']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Int']>;
};

/** order by max() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Max_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  endAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  maxAttendeesPerRoom?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organiserId?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  startAt?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShufflePeriod_Min_Fields = {
  __typename?: 'room_ShufflePeriod_min_fields';
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  maxAttendeesPerRoom?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  organiserId?: Maybe<Scalars['uuid']>;
  roomDurationMinutes?: Maybe<Scalars['Int']>;
  startAt?: Maybe<Scalars['timestamptz']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Int']>;
};

/** order by min() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Min_Order_By = {
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  endAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  maxAttendeesPerRoom?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organiserId?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  startAt?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** response of any mutation on the table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Mutation_Response = {
  __typename?: 'room_ShufflePeriod_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Room_ShufflePeriod>;
};

/** input type for inserting object relation for remote table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Obj_Rel_Insert_Input = {
  data: Room_ShufflePeriod_Insert_Input;
  on_conflict?: Maybe<Room_ShufflePeriod_On_Conflict>;
};

/** on conflict condition type for table "room.ShufflePeriod" */
export type Room_ShufflePeriod_On_Conflict = {
  constraint: Room_ShufflePeriod_Constraint;
  update_columns: Array<Room_ShufflePeriod_Update_Column>;
  where?: Maybe<Room_ShufflePeriod_Bool_Exp>;
};

/** ordering options when selecting data from "room.ShufflePeriod" */
export type Room_ShufflePeriod_Order_By = {
  algorithm?: Maybe<Order_By>;
  conference?: Maybe<Conference_Order_By>;
  conferenceId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  endAt?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  maxAttendeesPerRoom?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
  organiser?: Maybe<Attendee_Order_By>;
  organiserId?: Maybe<Order_By>;
  queueEntries_aggregate?: Maybe<Room_ShuffleQueueEntry_Aggregate_Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  shuffleRooms_aggregate?: Maybe<Room_ShuffleRoom_Aggregate_Order_By>;
  startAt?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** primary key columns input for table: "room.ShufflePeriod" */
export type Room_ShufflePeriod_Pk_Columns_Input = {
  id: Scalars['uuid'];
};

/** select columns of table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Select_Column {
  /** column name */
  Algorithm = 'algorithm',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndAt = 'endAt',
  /** column name */
  Id = 'id',
  /** column name */
  MaxAttendeesPerRoom = 'maxAttendeesPerRoom',
  /** column name */
  Name = 'name',
  /** column name */
  OrganiserId = 'organiserId',
  /** column name */
  RoomDurationMinutes = 'roomDurationMinutes',
  /** column name */
  StartAt = 'startAt',
  /** column name */
  TargetAttendeesPerRoom = 'targetAttendeesPerRoom',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WaitRoomMaxDurationSeconds = 'waitRoomMaxDurationSeconds'
}

/** input type for updating data in table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Set_Input = {
  algorithm?: Maybe<Room_ShuffleAlgorithm_Enum>;
  conferenceId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  endAt?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['uuid']>;
  maxAttendeesPerRoom?: Maybe<Scalars['Int']>;
  name?: Maybe<Scalars['String']>;
  organiserId?: Maybe<Scalars['uuid']>;
  roomDurationMinutes?: Maybe<Scalars['Int']>;
  startAt?: Maybe<Scalars['timestamptz']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Int']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Int']>;
};

/** aggregate stddev on columns */
export type Room_ShufflePeriod_Stddev_Fields = {
  __typename?: 'room_ShufflePeriod_stddev_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Float']>;
  roomDurationMinutes?: Maybe<Scalars['Float']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Float']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShufflePeriod_Stddev_Pop_Fields = {
  __typename?: 'room_ShufflePeriod_stddev_pop_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Float']>;
  roomDurationMinutes?: Maybe<Scalars['Float']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Float']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Pop_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShufflePeriod_Stddev_Samp_Fields = {
  __typename?: 'room_ShufflePeriod_stddev_samp_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Float']>;
  roomDurationMinutes?: Maybe<Scalars['Float']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Float']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Stddev_Samp_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShufflePeriod_Sum_Fields = {
  __typename?: 'room_ShufflePeriod_sum_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Int']>;
  roomDurationMinutes?: Maybe<Scalars['Int']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Int']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Int']>;
};

/** order by sum() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Sum_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** update columns of table "room.ShufflePeriod" */
export enum Room_ShufflePeriod_Update_Column {
  /** column name */
  Algorithm = 'algorithm',
  /** column name */
  ConferenceId = 'conferenceId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  EndAt = 'endAt',
  /** column name */
  Id = 'id',
  /** column name */
  MaxAttendeesPerRoom = 'maxAttendeesPerRoom',
  /** column name */
  Name = 'name',
  /** column name */
  OrganiserId = 'organiserId',
  /** column name */
  RoomDurationMinutes = 'roomDurationMinutes',
  /** column name */
  StartAt = 'startAt',
  /** column name */
  TargetAttendeesPerRoom = 'targetAttendeesPerRoom',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  WaitRoomMaxDurationSeconds = 'waitRoomMaxDurationSeconds'
}

/** aggregate var_pop on columns */
export type Room_ShufflePeriod_Var_Pop_Fields = {
  __typename?: 'room_ShufflePeriod_var_pop_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Float']>;
  roomDurationMinutes?: Maybe<Scalars['Float']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Float']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Var_Pop_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShufflePeriod_Var_Samp_Fields = {
  __typename?: 'room_ShufflePeriod_var_samp_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Float']>;
  roomDurationMinutes?: Maybe<Scalars['Float']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Float']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Var_Samp_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShufflePeriod_Variance_Fields = {
  __typename?: 'room_ShufflePeriod_variance_fields';
  maxAttendeesPerRoom?: Maybe<Scalars['Float']>;
  roomDurationMinutes?: Maybe<Scalars['Float']>;
  targetAttendeesPerRoom?: Maybe<Scalars['Float']>;
  waitRoomMaxDurationSeconds?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "room.ShufflePeriod" */
export type Room_ShufflePeriod_Variance_Order_By = {
  maxAttendeesPerRoom?: Maybe<Order_By>;
  roomDurationMinutes?: Maybe<Order_By>;
  targetAttendeesPerRoom?: Maybe<Order_By>;
  waitRoomMaxDurationSeconds?: Maybe<Order_By>;
};

/** columns and relationships of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry = {
  __typename?: 'room_ShuffleQueueEntry';
  allocatedShuffleRoomId?: Maybe<Scalars['Int']>;
  /** An object relationship */
  attendee: Attendee;
  attendeeId: Scalars['uuid'];
  created_at: Scalars['timestamptz'];
  id: Scalars['bigint'];
  /** An object relationship */
  shufflePeriod: Room_ShufflePeriod;
  shufflePeriodId: Scalars['uuid'];
  /** An object relationship */
  shuffleRoom?: Maybe<Room_ShuffleRoom>;
  updated_at: Scalars['timestamptz'];
};

/** aggregated selection of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate = {
  __typename?: 'room_ShuffleQueueEntry_aggregate';
  aggregate?: Maybe<Room_ShuffleQueueEntry_Aggregate_Fields>;
  nodes: Array<Room_ShuffleQueueEntry>;
};

/** aggregate fields of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_Fields = {
  __typename?: 'room_ShuffleQueueEntry_aggregate_fields';
  avg?: Maybe<Room_ShuffleQueueEntry_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Room_ShuffleQueueEntry_Max_Fields>;
  min?: Maybe<Room_ShuffleQueueEntry_Min_Fields>;
  stddev?: Maybe<Room_ShuffleQueueEntry_Stddev_Fields>;
  stddev_pop?: Maybe<Room_ShuffleQueueEntry_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Room_ShuffleQueueEntry_Stddev_Samp_Fields>;
  sum?: Maybe<Room_ShuffleQueueEntry_Sum_Fields>;
  var_pop?: Maybe<Room_ShuffleQueueEntry_Var_Pop_Fields>;
  var_samp?: Maybe<Room_ShuffleQueueEntry_Var_Samp_Fields>;
  variance?: Maybe<Room_ShuffleQueueEntry_Variance_Fields>;
};


/** aggregate fields of "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Aggregate_Order_By = {
  avg?: Maybe<Room_ShuffleQueueEntry_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Room_ShuffleQueueEntry_Max_Order_By>;
  min?: Maybe<Room_ShuffleQueueEntry_Min_Order_By>;
  stddev?: Maybe<Room_ShuffleQueueEntry_Stddev_Order_By>;
  stddev_pop?: Maybe<Room_ShuffleQueueEntry_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Room_ShuffleQueueEntry_Stddev_Samp_Order_By>;
  sum?: Maybe<Room_ShuffleQueueEntry_Sum_Order_By>;
  var_pop?: Maybe<Room_ShuffleQueueEntry_Var_Pop_Order_By>;
  var_samp?: Maybe<Room_ShuffleQueueEntry_Var_Samp_Order_By>;
  variance?: Maybe<Room_ShuffleQueueEntry_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Arr_Rel_Insert_Input = {
  data: Array<Room_ShuffleQueueEntry_Insert_Input>;
  on_conflict?: Maybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShuffleQueueEntry_Avg_Fields = {
  __typename?: 'room_ShuffleQueueEntry_avg_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Avg_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShuffleQueueEntry". All fields are combined with a logical 'AND'. */
export type Room_ShuffleQueueEntry_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Room_ShuffleQueueEntry_Bool_Exp>>>;
  _not?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Room_ShuffleQueueEntry_Bool_Exp>>>;
  allocatedShuffleRoomId?: Maybe<Int_Comparison_Exp>;
  attendee?: Maybe<Attendee_Bool_Exp>;
  attendeeId?: Maybe<Uuid_Comparison_Exp>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  shufflePeriod?: Maybe<Room_ShufflePeriod_Bool_Exp>;
  shufflePeriodId?: Maybe<Uuid_Comparison_Exp>;
  shuffleRoom?: Maybe<Room_ShuffleRoom_Bool_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Constraint {
  /** unique or primary key constraint */
  ShuffleQueueEntryPkey = 'ShuffleQueueEntry_pkey',
  /** unique or primary key constraint */
  IndexIswaiting = 'index_iswaiting'
}

/** input type for incrementing integer column in table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Inc_Input = {
  allocatedShuffleRoomId?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Insert_Input = {
  allocatedShuffleRoomId?: Maybe<Scalars['Int']>;
  attendee?: Maybe<Attendee_Obj_Rel_Insert_Input>;
  attendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  shufflePeriod?: Maybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  shuffleRoom?: Maybe<Room_ShuffleRoom_Obj_Rel_Insert_Input>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Room_ShuffleQueueEntry_Max_Fields = {
  __typename?: 'room_ShuffleQueueEntry_max_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Int']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Max_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  attendeeId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShuffleQueueEntry_Min_Fields = {
  __typename?: 'room_ShuffleQueueEntry_min_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Int']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Min_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  attendeeId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Mutation_Response = {
  __typename?: 'room_ShuffleQueueEntry_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Room_ShuffleQueueEntry>;
};

/** input type for inserting object relation for remote table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Obj_Rel_Insert_Input = {
  data: Room_ShuffleQueueEntry_Insert_Input;
  on_conflict?: Maybe<Room_ShuffleQueueEntry_On_Conflict>;
};

/** on conflict condition type for table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_On_Conflict = {
  constraint: Room_ShuffleQueueEntry_Constraint;
  update_columns: Array<Room_ShuffleQueueEntry_Update_Column>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** ordering options when selecting data from "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  attendee?: Maybe<Attendee_Order_By>;
  attendeeId?: Maybe<Order_By>;
  created_at?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  shufflePeriod?: Maybe<Room_ShufflePeriod_Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  shuffleRoom?: Maybe<Room_ShuffleRoom_Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Select_Column {
  /** column name */
  AllocatedShuffleRoomId = 'allocatedShuffleRoomId',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ShufflePeriodId = 'shufflePeriodId',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Set_Input = {
  allocatedShuffleRoomId?: Maybe<Scalars['Int']>;
  attendeeId?: Maybe<Scalars['uuid']>;
  created_at?: Maybe<Scalars['timestamptz']>;
  id?: Maybe<Scalars['bigint']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Room_ShuffleQueueEntry_Stddev_Fields = {
  __typename?: 'room_ShuffleQueueEntry_stddev_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShuffleQueueEntry_Stddev_Pop_Fields = {
  __typename?: 'room_ShuffleQueueEntry_stddev_pop_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Pop_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShuffleQueueEntry_Stddev_Samp_Fields = {
  __typename?: 'room_ShuffleQueueEntry_stddev_samp_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Stddev_Samp_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShuffleQueueEntry_Sum_Fields = {
  __typename?: 'room_ShuffleQueueEntry_sum_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Sum_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** update columns of table "room.ShuffleQueueEntry" */
export enum Room_ShuffleQueueEntry_Update_Column {
  /** column name */
  AllocatedShuffleRoomId = 'allocatedShuffleRoomId',
  /** column name */
  AttendeeId = 'attendeeId',
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Id = 'id',
  /** column name */
  ShufflePeriodId = 'shufflePeriodId',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Room_ShuffleQueueEntry_Var_Pop_Fields = {
  __typename?: 'room_ShuffleQueueEntry_var_pop_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Var_Pop_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShuffleQueueEntry_Var_Samp_Fields = {
  __typename?: 'room_ShuffleQueueEntry_var_samp_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Var_Samp_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShuffleQueueEntry_Variance_Fields = {
  __typename?: 'room_ShuffleQueueEntry_variance_fields';
  allocatedShuffleRoomId?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "room.ShuffleQueueEntry" */
export type Room_ShuffleQueueEntry_Variance_Order_By = {
  allocatedShuffleRoomId?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoom = {
  __typename?: 'room_ShuffleRoom';
  created_at: Scalars['timestamptz'];
  durationMinutes: Scalars['Int'];
  id: Scalars['bigint'];
  isEnded: Scalars['Boolean'];
  /** An array relationship */
  queueEntries: Array<Room_ShuffleQueueEntry>;
  /** An aggregated array relationship */
  queueEntries_aggregate: Room_ShuffleQueueEntry_Aggregate;
  reshuffleUponEnd: Scalars['Boolean'];
  /** An object relationship */
  room: Room;
  roomId: Scalars['uuid'];
  /** An object relationship */
  shufflePeriod: Room_ShufflePeriod;
  shufflePeriodId: Scalars['uuid'];
  startedAt: Scalars['timestamptz'];
  updated_at: Scalars['timestamptz'];
};


/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomQueueEntriesArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};


/** columns and relationships of "room.ShuffleRoom" */
export type Room_ShuffleRoomQueueEntries_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};

/** aggregated selection of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate = {
  __typename?: 'room_ShuffleRoom_aggregate';
  aggregate?: Maybe<Room_ShuffleRoom_Aggregate_Fields>;
  nodes: Array<Room_ShuffleRoom>;
};

/** aggregate fields of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_Fields = {
  __typename?: 'room_ShuffleRoom_aggregate_fields';
  avg?: Maybe<Room_ShuffleRoom_Avg_Fields>;
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<Room_ShuffleRoom_Max_Fields>;
  min?: Maybe<Room_ShuffleRoom_Min_Fields>;
  stddev?: Maybe<Room_ShuffleRoom_Stddev_Fields>;
  stddev_pop?: Maybe<Room_ShuffleRoom_Stddev_Pop_Fields>;
  stddev_samp?: Maybe<Room_ShuffleRoom_Stddev_Samp_Fields>;
  sum?: Maybe<Room_ShuffleRoom_Sum_Fields>;
  var_pop?: Maybe<Room_ShuffleRoom_Var_Pop_Fields>;
  var_samp?: Maybe<Room_ShuffleRoom_Var_Samp_Fields>;
  variance?: Maybe<Room_ShuffleRoom_Variance_Fields>;
};


/** aggregate fields of "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Aggregate_Order_By = {
  avg?: Maybe<Room_ShuffleRoom_Avg_Order_By>;
  count?: Maybe<Order_By>;
  max?: Maybe<Room_ShuffleRoom_Max_Order_By>;
  min?: Maybe<Room_ShuffleRoom_Min_Order_By>;
  stddev?: Maybe<Room_ShuffleRoom_Stddev_Order_By>;
  stddev_pop?: Maybe<Room_ShuffleRoom_Stddev_Pop_Order_By>;
  stddev_samp?: Maybe<Room_ShuffleRoom_Stddev_Samp_Order_By>;
  sum?: Maybe<Room_ShuffleRoom_Sum_Order_By>;
  var_pop?: Maybe<Room_ShuffleRoom_Var_Pop_Order_By>;
  var_samp?: Maybe<Room_ShuffleRoom_Var_Samp_Order_By>;
  variance?: Maybe<Room_ShuffleRoom_Variance_Order_By>;
};

/** input type for inserting array relation for remote table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Arr_Rel_Insert_Input = {
  data: Array<Room_ShuffleRoom_Insert_Input>;
  on_conflict?: Maybe<Room_ShuffleRoom_On_Conflict>;
};

/** aggregate avg on columns */
export type Room_ShuffleRoom_Avg_Fields = {
  __typename?: 'room_ShuffleRoom_avg_fields';
  durationMinutes?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by avg() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Avg_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** Boolean expression to filter rows from the table "room.ShuffleRoom". All fields are combined with a logical 'AND'. */
export type Room_ShuffleRoom_Bool_Exp = {
  _and?: Maybe<Array<Maybe<Room_ShuffleRoom_Bool_Exp>>>;
  _not?: Maybe<Room_ShuffleRoom_Bool_Exp>;
  _or?: Maybe<Array<Maybe<Room_ShuffleRoom_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  durationMinutes?: Maybe<Int_Comparison_Exp>;
  id?: Maybe<Bigint_Comparison_Exp>;
  isEnded?: Maybe<Boolean_Comparison_Exp>;
  queueEntries?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
  reshuffleUponEnd?: Maybe<Boolean_Comparison_Exp>;
  room?: Maybe<Room_Bool_Exp>;
  roomId?: Maybe<Uuid_Comparison_Exp>;
  shufflePeriod?: Maybe<Room_ShufflePeriod_Bool_Exp>;
  shufflePeriodId?: Maybe<Uuid_Comparison_Exp>;
  startedAt?: Maybe<Timestamptz_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
};

/** unique or primary key constraints on table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Constraint {
  /** unique or primary key constraint */
  ShuffleRoomPkey = 'ShuffleRoom_pkey'
}

/** input type for incrementing integer column in table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Inc_Input = {
  durationMinutes?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
};

/** input type for inserting data into table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  durationMinutes?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  isEnded?: Maybe<Scalars['Boolean']>;
  queueEntries?: Maybe<Room_ShuffleQueueEntry_Arr_Rel_Insert_Input>;
  reshuffleUponEnd?: Maybe<Scalars['Boolean']>;
  room?: Maybe<Room_Obj_Rel_Insert_Input>;
  roomId?: Maybe<Scalars['uuid']>;
  shufflePeriod?: Maybe<Room_ShufflePeriod_Obj_Rel_Insert_Input>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startedAt?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate max on columns */
export type Room_ShuffleRoom_Max_Fields = {
  __typename?: 'room_ShuffleRoom_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  durationMinutes?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  roomId?: Maybe<Scalars['uuid']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startedAt?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  startedAt?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type Room_ShuffleRoom_Min_Fields = {
  __typename?: 'room_ShuffleRoom_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  durationMinutes?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  roomId?: Maybe<Scalars['uuid']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startedAt?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  roomId?: Maybe<Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  startedAt?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Mutation_Response = {
  __typename?: 'room_ShuffleRoom_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<Room_ShuffleRoom>;
};

/** input type for inserting object relation for remote table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Obj_Rel_Insert_Input = {
  data: Room_ShuffleRoom_Insert_Input;
  on_conflict?: Maybe<Room_ShuffleRoom_On_Conflict>;
};

/** on conflict condition type for table "room.ShuffleRoom" */
export type Room_ShuffleRoom_On_Conflict = {
  constraint: Room_ShuffleRoom_Constraint;
  update_columns: Array<Room_ShuffleRoom_Update_Column>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};

/** ordering options when selecting data from "room.ShuffleRoom" */
export type Room_ShuffleRoom_Order_By = {
  created_at?: Maybe<Order_By>;
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
  isEnded?: Maybe<Order_By>;
  queueEntries_aggregate?: Maybe<Room_ShuffleQueueEntry_Aggregate_Order_By>;
  reshuffleUponEnd?: Maybe<Order_By>;
  room?: Maybe<Room_Order_By>;
  roomId?: Maybe<Order_By>;
  shufflePeriod?: Maybe<Room_ShufflePeriod_Order_By>;
  shufflePeriodId?: Maybe<Order_By>;
  startedAt?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** primary key columns input for table: "room.ShuffleRoom" */
export type Room_ShuffleRoom_Pk_Columns_Input = {
  id: Scalars['bigint'];
};

/** select columns of table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DurationMinutes = 'durationMinutes',
  /** column name */
  Id = 'id',
  /** column name */
  IsEnded = 'isEnded',
  /** column name */
  ReshuffleUponEnd = 'reshuffleUponEnd',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  ShufflePeriodId = 'shufflePeriodId',
  /** column name */
  StartedAt = 'startedAt',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** input type for updating data in table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  durationMinutes?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
  isEnded?: Maybe<Scalars['Boolean']>;
  reshuffleUponEnd?: Maybe<Scalars['Boolean']>;
  roomId?: Maybe<Scalars['uuid']>;
  shufflePeriodId?: Maybe<Scalars['uuid']>;
  startedAt?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** aggregate stddev on columns */
export type Room_ShuffleRoom_Stddev_Fields = {
  __typename?: 'room_ShuffleRoom_stddev_fields';
  durationMinutes?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_pop on columns */
export type Room_ShuffleRoom_Stddev_Pop_Fields = {
  __typename?: 'room_ShuffleRoom_stddev_pop_fields';
  durationMinutes?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_pop() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Pop_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate stddev_samp on columns */
export type Room_ShuffleRoom_Stddev_Samp_Fields = {
  __typename?: 'room_ShuffleRoom_stddev_samp_fields';
  durationMinutes?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by stddev_samp() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Stddev_Samp_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate sum on columns */
export type Room_ShuffleRoom_Sum_Fields = {
  __typename?: 'room_ShuffleRoom_sum_fields';
  durationMinutes?: Maybe<Scalars['Int']>;
  id?: Maybe<Scalars['bigint']>;
};

/** order by sum() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Sum_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** update columns of table "room.ShuffleRoom" */
export enum Room_ShuffleRoom_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  DurationMinutes = 'durationMinutes',
  /** column name */
  Id = 'id',
  /** column name */
  IsEnded = 'isEnded',
  /** column name */
  ReshuffleUponEnd = 'reshuffleUponEnd',
  /** column name */
  RoomId = 'roomId',
  /** column name */
  ShufflePeriodId = 'shufflePeriodId',
  /** column name */
  StartedAt = 'startedAt',
  /** column name */
  UpdatedAt = 'updated_at'
}

/** aggregate var_pop on columns */
export type Room_ShuffleRoom_Var_Pop_Fields = {
  __typename?: 'room_ShuffleRoom_var_pop_fields';
  durationMinutes?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_pop() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Var_Pop_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate var_samp on columns */
export type Room_ShuffleRoom_Var_Samp_Fields = {
  __typename?: 'room_ShuffleRoom_var_samp_fields';
  durationMinutes?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by var_samp() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Var_Samp_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** aggregate variance on columns */
export type Room_ShuffleRoom_Variance_Fields = {
  __typename?: 'room_ShuffleRoom_variance_fields';
  durationMinutes?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['Float']>;
};

/** order by variance() on columns of table "room.ShuffleRoom" */
export type Room_ShuffleRoom_Variance_Order_By = {
  durationMinutes?: Maybe<Order_By>;
  id?: Maybe<Order_By>;
};

/** subscription root */
export type Subscription_Root = {
  __typename?: 'subscription_root';
  /** fetch data from the table: "Attendee" */
  Attendee: Array<Attendee>;
  /** fetch data from the table: "AttendeeGoogleAccount" */
  AttendeeGoogleAccount: Array<AttendeeGoogleAccount>;
  /** fetch aggregated fields from the table: "AttendeeGoogleAccount" */
  AttendeeGoogleAccount_aggregate: AttendeeGoogleAccount_Aggregate;
  /** fetch data from the table: "AttendeeGoogleAccount" using primary key columns */
  AttendeeGoogleAccount_by_pk?: Maybe<AttendeeGoogleAccount>;
  /** fetch data from the table: "AttendeeProfile" */
  AttendeeProfile: Array<AttendeeProfile>;
  /** fetch aggregated fields from the table: "AttendeeProfile" */
  AttendeeProfile_aggregate: AttendeeProfile_Aggregate;
  /** fetch data from the table: "AttendeeProfile" using primary key columns */
  AttendeeProfile_by_pk?: Maybe<AttendeeProfile>;
  /** fetch aggregated fields from the table: "Attendee" */
  Attendee_aggregate: Attendee_Aggregate;
  /** fetch data from the table: "Attendee" using primary key columns */
  Attendee_by_pk?: Maybe<Attendee>;
  /** fetch data from the table: "Broadcast" */
  Broadcast: Array<Broadcast>;
  /** fetch data from the table: "BroadcastContentItem" */
  BroadcastContentItem: Array<BroadcastContentItem>;
  /** fetch aggregated fields from the table: "BroadcastContentItem" */
  BroadcastContentItem_aggregate: BroadcastContentItem_Aggregate;
  /** fetch data from the table: "BroadcastContentItem" using primary key columns */
  BroadcastContentItem_by_pk?: Maybe<BroadcastContentItem>;
  /** fetch aggregated fields from the table: "Broadcast" */
  Broadcast_aggregate: Broadcast_Aggregate;
  /** fetch data from the table: "Broadcast" using primary key columns */
  Broadcast_by_pk?: Maybe<Broadcast>;
  /** fetch data from the table: "Conference" */
  Conference: Array<Conference>;
  /** fetch data from the table: "ConferenceConfiguration" */
  ConferenceConfiguration: Array<ConferenceConfiguration>;
  /** fetch aggregated fields from the table: "ConferenceConfiguration" */
  ConferenceConfiguration_aggregate: ConferenceConfiguration_Aggregate;
  /** fetch data from the table: "ConferenceConfiguration" using primary key columns */
  ConferenceConfiguration_by_pk?: Maybe<ConferenceConfiguration>;
  /** fetch data from the table: "ConferenceDemoCode" */
  ConferenceDemoCode: Array<ConferenceDemoCode>;
  /** fetch aggregated fields from the table: "ConferenceDemoCode" */
  ConferenceDemoCode_aggregate: ConferenceDemoCode_Aggregate;
  /** fetch data from the table: "ConferenceDemoCode" using primary key columns */
  ConferenceDemoCode_by_pk?: Maybe<ConferenceDemoCode>;
  /** fetch data from the table: "ConferencePrepareJob" */
  ConferencePrepareJob: Array<ConferencePrepareJob>;
  /** fetch aggregated fields from the table: "ConferencePrepareJob" */
  ConferencePrepareJob_aggregate: ConferencePrepareJob_Aggregate;
  /** fetch data from the table: "ConferencePrepareJob" using primary key columns */
  ConferencePrepareJob_by_pk?: Maybe<ConferencePrepareJob>;
  /** fetch aggregated fields from the table: "Conference" */
  Conference_aggregate: Conference_Aggregate;
  /** fetch data from the table: "Conference" using primary key columns */
  Conference_by_pk?: Maybe<Conference>;
  /** fetch data from the table: "ContentGroup" */
  ContentGroup: Array<ContentGroup>;
  /** fetch data from the table: "ContentGroupHallway" */
  ContentGroupHallway: Array<ContentGroupHallway>;
  /** fetch aggregated fields from the table: "ContentGroupHallway" */
  ContentGroupHallway_aggregate: ContentGroupHallway_Aggregate;
  /** fetch data from the table: "ContentGroupHallway" using primary key columns */
  ContentGroupHallway_by_pk?: Maybe<ContentGroupHallway>;
  /** fetch data from the table: "ContentGroupPerson" */
  ContentGroupPerson: Array<ContentGroupPerson>;
  /** fetch aggregated fields from the table: "ContentGroupPerson" */
  ContentGroupPerson_aggregate: ContentGroupPerson_Aggregate;
  /** fetch data from the table: "ContentGroupPerson" using primary key columns */
  ContentGroupPerson_by_pk?: Maybe<ContentGroupPerson>;
  /** fetch data from the table: "ContentGroupTag" */
  ContentGroupTag: Array<ContentGroupTag>;
  /** fetch aggregated fields from the table: "ContentGroupTag" */
  ContentGroupTag_aggregate: ContentGroupTag_Aggregate;
  /** fetch data from the table: "ContentGroupTag" using primary key columns */
  ContentGroupTag_by_pk?: Maybe<ContentGroupTag>;
  /** fetch data from the table: "ContentGroupType" */
  ContentGroupType: Array<ContentGroupType>;
  /** fetch aggregated fields from the table: "ContentGroupType" */
  ContentGroupType_aggregate: ContentGroupType_Aggregate;
  /** fetch data from the table: "ContentGroupType" using primary key columns */
  ContentGroupType_by_pk?: Maybe<ContentGroupType>;
  /** fetch aggregated fields from the table: "ContentGroup" */
  ContentGroup_aggregate: ContentGroup_Aggregate;
  /** fetch data from the table: "ContentGroup" using primary key columns */
  ContentGroup_by_pk?: Maybe<ContentGroup>;
  /** fetch data from the table: "ContentItem" */
  ContentItem: Array<ContentItem>;
  /** fetch aggregated fields from the table: "ContentItem" */
  ContentItem_aggregate: ContentItem_Aggregate;
  /** fetch data from the table: "ContentItem" using primary key columns */
  ContentItem_by_pk?: Maybe<ContentItem>;
  /** fetch data from the table: "ContentPerson" */
  ContentPerson: Array<ContentPerson>;
  /** fetch aggregated fields from the table: "ContentPerson" */
  ContentPerson_aggregate: ContentPerson_Aggregate;
  /** fetch data from the table: "ContentPerson" using primary key columns */
  ContentPerson_by_pk?: Maybe<ContentPerson>;
  /** fetch data from the table: "ContentType" */
  ContentType: Array<ContentType>;
  /** fetch aggregated fields from the table: "ContentType" */
  ContentType_aggregate: ContentType_Aggregate;
  /** fetch data from the table: "ContentType" using primary key columns */
  ContentType_by_pk?: Maybe<ContentType>;
  /** fetch data from the table: "Email" */
  Email: Array<Email>;
  /** fetch aggregated fields from the table: "Email" */
  Email_aggregate: Email_Aggregate;
  /** fetch data from the table: "Email" using primary key columns */
  Email_by_pk?: Maybe<Email>;
  /** fetch data from the table: "Event" */
  Event: Array<Event>;
  /** fetch data from the table: "EventParticipantStream" */
  EventParticipantStream: Array<EventParticipantStream>;
  /** fetch aggregated fields from the table: "EventParticipantStream" */
  EventParticipantStream_aggregate: EventParticipantStream_Aggregate;
  /** fetch data from the table: "EventParticipantStream" using primary key columns */
  EventParticipantStream_by_pk?: Maybe<EventParticipantStream>;
  /** fetch data from the table: "EventPerson" */
  EventPerson: Array<EventPerson>;
  /** fetch data from the table: "EventPersonRole" */
  EventPersonRole: Array<EventPersonRole>;
  /** fetch aggregated fields from the table: "EventPersonRole" */
  EventPersonRole_aggregate: EventPersonRole_Aggregate;
  /** fetch data from the table: "EventPersonRole" using primary key columns */
  EventPersonRole_by_pk?: Maybe<EventPersonRole>;
  /** fetch aggregated fields from the table: "EventPerson" */
  EventPerson_aggregate: EventPerson_Aggregate;
  /** fetch data from the table: "EventPerson" using primary key columns */
  EventPerson_by_pk?: Maybe<EventPerson>;
  /** fetch data from the table: "EventRoomJoinRequest" */
  EventRoomJoinRequest: Array<EventRoomJoinRequest>;
  /** fetch aggregated fields from the table: "EventRoomJoinRequest" */
  EventRoomJoinRequest_aggregate: EventRoomJoinRequest_Aggregate;
  /** fetch data from the table: "EventRoomJoinRequest" using primary key columns */
  EventRoomJoinRequest_by_pk?: Maybe<EventRoomJoinRequest>;
  /** fetch data from the table: "EventTag" */
  EventTag: Array<EventTag>;
  /** fetch aggregated fields from the table: "EventTag" */
  EventTag_aggregate: EventTag_Aggregate;
  /** fetch data from the table: "EventTag" using primary key columns */
  EventTag_by_pk?: Maybe<EventTag>;
  /** fetch data from the table: "EventVonageSession" */
  EventVonageSession: Array<EventVonageSession>;
  /** fetch aggregated fields from the table: "EventVonageSession" */
  EventVonageSession_aggregate: EventVonageSession_Aggregate;
  /** fetch data from the table: "EventVonageSession" using primary key columns */
  EventVonageSession_by_pk?: Maybe<EventVonageSession>;
  /** fetch aggregated fields from the table: "Event" */
  Event_aggregate: Event_Aggregate;
  /** fetch data from the table: "Event" using primary key columns */
  Event_by_pk?: Maybe<Event>;
  /** fetch data from the table: "ExecutedTransitions" */
  ExecutedTransitions: Array<ExecutedTransitions>;
  /** fetch aggregated fields from the table: "ExecutedTransitions" */
  ExecutedTransitions_aggregate: ExecutedTransitions_Aggregate;
  /** fetch data from the table: "ExecutedTransitions" using primary key columns */
  ExecutedTransitions_by_pk?: Maybe<ExecutedTransitions>;
  /** fetch data from the table: "FlatUnauthPermission" */
  FlatUnauthPermission: Array<FlatUnauthPermission>;
  /** fetch aggregated fields from the table: "FlatUnauthPermission" */
  FlatUnauthPermission_aggregate: FlatUnauthPermission_Aggregate;
  /** fetch data from the table: "FlatUserPermission" */
  FlatUserPermission: Array<FlatUserPermission>;
  /** fetch aggregated fields from the table: "FlatUserPermission" */
  FlatUserPermission_aggregate: FlatUserPermission_Aggregate;
  /** fetch data from the table: "Group" */
  Group: Array<Group>;
  /** fetch data from the table: "GroupAttendee" */
  GroupAttendee: Array<GroupAttendee>;
  /** fetch aggregated fields from the table: "GroupAttendee" */
  GroupAttendee_aggregate: GroupAttendee_Aggregate;
  /** fetch data from the table: "GroupAttendee" using primary key columns */
  GroupAttendee_by_pk?: Maybe<GroupAttendee>;
  /** fetch data from the table: "GroupRole" */
  GroupRole: Array<GroupRole>;
  /** fetch aggregated fields from the table: "GroupRole" */
  GroupRole_aggregate: GroupRole_Aggregate;
  /** fetch data from the table: "GroupRole" using primary key columns */
  GroupRole_by_pk?: Maybe<GroupRole>;
  /** fetch aggregated fields from the table: "Group" */
  Group_aggregate: Group_Aggregate;
  /** fetch data from the table: "Group" using primary key columns */
  Group_by_pk?: Maybe<Group>;
  /** fetch data from the table: "Hallway" */
  Hallway: Array<Hallway>;
  /** fetch aggregated fields from the table: "Hallway" */
  Hallway_aggregate: Hallway_Aggregate;
  /** fetch data from the table: "Hallway" using primary key columns */
  Hallway_by_pk?: Maybe<Hallway>;
  /** fetch data from the table: "InputType" */
  InputType: Array<InputType>;
  /** fetch aggregated fields from the table: "InputType" */
  InputType_aggregate: InputType_Aggregate;
  /** fetch data from the table: "InputType" using primary key columns */
  InputType_by_pk?: Maybe<InputType>;
  /** fetch data from the table: "Invitation" */
  Invitation: Array<Invitation>;
  /** fetch aggregated fields from the table: "Invitation" */
  Invitation_aggregate: Invitation_Aggregate;
  /** fetch data from the table: "Invitation" using primary key columns */
  Invitation_by_pk?: Maybe<Invitation>;
  /** fetch data from the table: "JobStatus" */
  JobStatus: Array<JobStatus>;
  /** fetch aggregated fields from the table: "JobStatus" */
  JobStatus_aggregate: JobStatus_Aggregate;
  /** fetch data from the table: "JobStatus" using primary key columns */
  JobStatus_by_pk?: Maybe<JobStatus>;
  /** fetch data from the table: "MediaLiveChannel" */
  MediaLiveChannel: Array<MediaLiveChannel>;
  /** fetch aggregated fields from the table: "MediaLiveChannel" */
  MediaLiveChannel_aggregate: MediaLiveChannel_Aggregate;
  /** fetch data from the table: "MediaLiveChannel" using primary key columns */
  MediaLiveChannel_by_pk?: Maybe<MediaLiveChannel>;
  /** fetch data from the table: "OnlineStatus" */
  OnlineStatus: Array<OnlineStatus>;
  /** fetch aggregated fields from the table: "OnlineStatus" */
  OnlineStatus_aggregate: OnlineStatus_Aggregate;
  /** fetch data from the table: "OnlineStatus" using primary key columns */
  OnlineStatus_by_pk?: Maybe<OnlineStatus>;
  /** fetch data from the table: "OriginatingData" */
  OriginatingData: Array<OriginatingData>;
  /** fetch aggregated fields from the table: "OriginatingData" */
  OriginatingData_aggregate: OriginatingData_Aggregate;
  /** fetch data from the table: "OriginatingData" using primary key columns */
  OriginatingData_by_pk?: Maybe<OriginatingData>;
  /** fetch data from the table: "Permission" */
  Permission: Array<Permission>;
  /** fetch aggregated fields from the table: "Permission" */
  Permission_aggregate: Permission_Aggregate;
  /** fetch data from the table: "Permission" using primary key columns */
  Permission_by_pk?: Maybe<Permission>;
  /** fetch data from the table: "PushNotificationSubscription" */
  PushNotificationSubscription: Array<PushNotificationSubscription>;
  /** fetch aggregated fields from the table: "PushNotificationSubscription" */
  PushNotificationSubscription_aggregate: PushNotificationSubscription_Aggregate;
  /** fetch data from the table: "PushNotificationSubscription" using primary key columns */
  PushNotificationSubscription_by_pk?: Maybe<PushNotificationSubscription>;
  /** fetch data from the table: "RequiredContentItem" */
  RequiredContentItem: Array<RequiredContentItem>;
  /** fetch aggregated fields from the table: "RequiredContentItem" */
  RequiredContentItem_aggregate: RequiredContentItem_Aggregate;
  /** fetch data from the table: "RequiredContentItem" using primary key columns */
  RequiredContentItem_by_pk?: Maybe<RequiredContentItem>;
  /** fetch data from the table: "Role" */
  Role: Array<Role>;
  /** fetch data from the table: "RolePermission" */
  RolePermission: Array<RolePermission>;
  /** fetch aggregated fields from the table: "RolePermission" */
  RolePermission_aggregate: RolePermission_Aggregate;
  /** fetch data from the table: "RolePermission" using primary key columns */
  RolePermission_by_pk?: Maybe<RolePermission>;
  /** fetch aggregated fields from the table: "Role" */
  Role_aggregate: Role_Aggregate;
  /** fetch data from the table: "Role" using primary key columns */
  Role_by_pk?: Maybe<Role>;
  /** fetch data from the table: "Room" */
  Room: Array<Room>;
  /** fetch data from the table: "RoomMode" */
  RoomMode: Array<RoomMode>;
  /** fetch aggregated fields from the table: "RoomMode" */
  RoomMode_aggregate: RoomMode_Aggregate;
  /** fetch data from the table: "RoomMode" using primary key columns */
  RoomMode_by_pk?: Maybe<RoomMode>;
  /** fetch data from the table: "RoomParticipant" */
  RoomParticipant: Array<RoomParticipant>;
  /** fetch aggregated fields from the table: "RoomParticipant" */
  RoomParticipant_aggregate: RoomParticipant_Aggregate;
  /** fetch data from the table: "RoomParticipant" using primary key columns */
  RoomParticipant_by_pk?: Maybe<RoomParticipant>;
  /** fetch data from the table: "RoomPerson" */
  RoomPerson: Array<RoomPerson>;
  /** fetch data from the table: "RoomPersonRole" */
  RoomPersonRole: Array<RoomPersonRole>;
  /** fetch aggregated fields from the table: "RoomPersonRole" */
  RoomPersonRole_aggregate: RoomPersonRole_Aggregate;
  /** fetch data from the table: "RoomPersonRole" using primary key columns */
  RoomPersonRole_by_pk?: Maybe<RoomPersonRole>;
  /** fetch aggregated fields from the table: "RoomPerson" */
  RoomPerson_aggregate: RoomPerson_Aggregate;
  /** fetch data from the table: "RoomPerson" using primary key columns */
  RoomPerson_by_pk?: Maybe<RoomPerson>;
  /** fetch data from the table: "RoomPrivacy" */
  RoomPrivacy: Array<RoomPrivacy>;
  /** fetch aggregated fields from the table: "RoomPrivacy" */
  RoomPrivacy_aggregate: RoomPrivacy_Aggregate;
  /** fetch data from the table: "RoomPrivacy" using primary key columns */
  RoomPrivacy_by_pk?: Maybe<RoomPrivacy>;
  /** fetch aggregated fields from the table: "Room" */
  Room_aggregate: Room_Aggregate;
  /** fetch data from the table: "Room" using primary key columns */
  Room_by_pk?: Maybe<Room>;
  /** fetch data from the table: "Tag" */
  Tag: Array<Tag>;
  /** fetch aggregated fields from the table: "Tag" */
  Tag_aggregate: Tag_Aggregate;
  /** fetch data from the table: "Tag" using primary key columns */
  Tag_by_pk?: Maybe<Tag>;
  /** fetch data from the table: "TranscriptionJob" */
  TranscriptionJob: Array<TranscriptionJob>;
  /** fetch aggregated fields from the table: "TranscriptionJob" */
  TranscriptionJob_aggregate: TranscriptionJob_Aggregate;
  /** fetch data from the table: "TranscriptionJob" using primary key columns */
  TranscriptionJob_by_pk?: Maybe<TranscriptionJob>;
  /** fetch data from the table: "Transitions" */
  Transitions: Array<Transitions>;
  /** fetch aggregated fields from the table: "Transitions" */
  Transitions_aggregate: Transitions_Aggregate;
  /** fetch data from the table: "Transitions" using primary key columns */
  Transitions_by_pk?: Maybe<Transitions>;
  /** fetch data from the table: "Uploader" */
  Uploader: Array<Uploader>;
  /** fetch aggregated fields from the table: "Uploader" */
  Uploader_aggregate: Uploader_Aggregate;
  /** fetch data from the table: "Uploader" using primary key columns */
  Uploader_by_pk?: Maybe<Uploader>;
  /** fetch data from the table: "User" */
  User: Array<User>;
  /** fetch aggregated fields from the table: "User" */
  User_aggregate: User_Aggregate;
  /** fetch data from the table: "User" using primary key columns */
  User_by_pk?: Maybe<User>;
  /** fetch data from the table: "VideoRenderJob" */
  VideoRenderJob: Array<VideoRenderJob>;
  /** fetch aggregated fields from the table: "VideoRenderJob" */
  VideoRenderJob_aggregate: VideoRenderJob_Aggregate;
  /** fetch data from the table: "VideoRenderJob" using primary key columns */
  VideoRenderJob_by_pk?: Maybe<VideoRenderJob>;
  /** fetch data from the table: "YouTubeUpload" */
  YouTubeUpload: Array<YouTubeUpload>;
  /** fetch aggregated fields from the table: "YouTubeUpload" */
  YouTubeUpload_aggregate: YouTubeUpload_Aggregate;
  /** fetch data from the table: "YouTubeUpload" using primary key columns */
  YouTubeUpload_by_pk?: Maybe<YouTubeUpload>;
  /** fetch data from the table: "analytics.AppStats" */
  analytics_AppStats: Array<Analytics_AppStats>;
  /** fetch aggregated fields from the table: "analytics.AppStats" */
  analytics_AppStats_aggregate: Analytics_AppStats_Aggregate;
  /** fetch data from the table: "analytics.AppStats" using primary key columns */
  analytics_AppStats_by_pk?: Maybe<Analytics_AppStats>;
  /** fetch data from the table: "chat.Chat" */
  chat_Chat: Array<Chat_Chat>;
  /** fetch aggregated fields from the table: "chat.Chat" */
  chat_Chat_aggregate: Chat_Chat_Aggregate;
  /** fetch data from the table: "chat.Chat" using primary key columns */
  chat_Chat_by_pk?: Maybe<Chat_Chat>;
  /** fetch data from the table: "chat.Flag" */
  chat_Flag: Array<Chat_Flag>;
  /** fetch data from the table: "chat.FlagType" */
  chat_FlagType: Array<Chat_FlagType>;
  /** fetch aggregated fields from the table: "chat.FlagType" */
  chat_FlagType_aggregate: Chat_FlagType_Aggregate;
  /** fetch data from the table: "chat.FlagType" using primary key columns */
  chat_FlagType_by_pk?: Maybe<Chat_FlagType>;
  /** fetch aggregated fields from the table: "chat.Flag" */
  chat_Flag_aggregate: Chat_Flag_Aggregate;
  /** fetch data from the table: "chat.Flag" using primary key columns */
  chat_Flag_by_pk?: Maybe<Chat_Flag>;
  /** fetch data from the table: "chat.Message" */
  chat_Message: Array<Chat_Message>;
  /** fetch data from the table: "chat.MessageType" */
  chat_MessageType: Array<Chat_MessageType>;
  /** fetch aggregated fields from the table: "chat.MessageType" */
  chat_MessageType_aggregate: Chat_MessageType_Aggregate;
  /** fetch data from the table: "chat.MessageType" using primary key columns */
  chat_MessageType_by_pk?: Maybe<Chat_MessageType>;
  /** fetch aggregated fields from the table: "chat.Message" */
  chat_Message_aggregate: Chat_Message_Aggregate;
  /** fetch data from the table: "chat.Message" using primary key columns */
  chat_Message_by_pk?: Maybe<Chat_Message>;
  /** fetch data from the table: "chat.Pin" */
  chat_Pin: Array<Chat_Pin>;
  /** fetch aggregated fields from the table: "chat.Pin" */
  chat_Pin_aggregate: Chat_Pin_Aggregate;
  /** fetch data from the table: "chat.Pin" using primary key columns */
  chat_Pin_by_pk?: Maybe<Chat_Pin>;
  /** fetch data from the table: "chat.Reaction" */
  chat_Reaction: Array<Chat_Reaction>;
  /** fetch data from the table: "chat.ReactionType" */
  chat_ReactionType: Array<Chat_ReactionType>;
  /** fetch aggregated fields from the table: "chat.ReactionType" */
  chat_ReactionType_aggregate: Chat_ReactionType_Aggregate;
  /** fetch data from the table: "chat.ReactionType" using primary key columns */
  chat_ReactionType_by_pk?: Maybe<Chat_ReactionType>;
  /** fetch aggregated fields from the table: "chat.Reaction" */
  chat_Reaction_aggregate: Chat_Reaction_Aggregate;
  /** fetch data from the table: "chat.Reaction" using primary key columns */
  chat_Reaction_by_pk?: Maybe<Chat_Reaction>;
  /** fetch data from the table: "chat.ReadUpToIndex" */
  chat_ReadUpToIndex: Array<Chat_ReadUpToIndex>;
  /** fetch aggregated fields from the table: "chat.ReadUpToIndex" */
  chat_ReadUpToIndex_aggregate: Chat_ReadUpToIndex_Aggregate;
  /** fetch data from the table: "chat.ReadUpToIndex" using primary key columns */
  chat_ReadUpToIndex_by_pk?: Maybe<Chat_ReadUpToIndex>;
  /** fetch data from the table: "chat.Subscription" */
  chat_Subscription: Array<Chat_Subscription>;
  /** fetch aggregated fields from the table: "chat.Subscription" */
  chat_Subscription_aggregate: Chat_Subscription_Aggregate;
  /** fetch data from the table: "chat.Subscription" using primary key columns */
  chat_Subscription_by_pk?: Maybe<Chat_Subscription>;
  /** perform the action: "echo" */
  echo?: Maybe<EchoOutput>;
  /** perform the action: "getContentItem" */
  getContentItem?: Maybe<Array<Maybe<GetContentItemOutput>>>;
  /** perform the action: "getUploadAgreement" */
  getUploadAgreement?: Maybe<GetUploadAgreementOutput>;
  /** fetch data from the table: "job_queues.ChannelStackCreateJob" */
  job_queues_ChannelStackCreateJob: Array<Job_Queues_ChannelStackCreateJob>;
  /** fetch aggregated fields from the table: "job_queues.ChannelStackCreateJob" */
  job_queues_ChannelStackCreateJob_aggregate: Job_Queues_ChannelStackCreateJob_Aggregate;
  /** fetch data from the table: "job_queues.ChannelStackCreateJob" using primary key columns */
  job_queues_ChannelStackCreateJob_by_pk?: Maybe<Job_Queues_ChannelStackCreateJob>;
  /** fetch data from the table: "job_queues.CombineVideosJob" */
  job_queues_CombineVideosJob: Array<Job_Queues_CombineVideosJob>;
  /** fetch aggregated fields from the table: "job_queues.CombineVideosJob" */
  job_queues_CombineVideosJob_aggregate: Job_Queues_CombineVideosJob_Aggregate;
  /** fetch data from the table: "job_queues.CombineVideosJob" using primary key columns */
  job_queues_CombineVideosJob_by_pk?: Maybe<Job_Queues_CombineVideosJob>;
  /** fetch data from the table: "job_queues.CustomEmailJob" */
  job_queues_CustomEmailJob: Array<Job_Queues_CustomEmailJob>;
  /** fetch aggregated fields from the table: "job_queues.CustomEmailJob" */
  job_queues_CustomEmailJob_aggregate: Job_Queues_CustomEmailJob_Aggregate;
  /** fetch data from the table: "job_queues.CustomEmailJob" using primary key columns */
  job_queues_CustomEmailJob_by_pk?: Maybe<Job_Queues_CustomEmailJob>;
  /** fetch data from the table: "job_queues.InvitationEmailJob" */
  job_queues_InvitationEmailJob: Array<Job_Queues_InvitationEmailJob>;
  /** fetch aggregated fields from the table: "job_queues.InvitationEmailJob" */
  job_queues_InvitationEmailJob_aggregate: Job_Queues_InvitationEmailJob_Aggregate;
  /** fetch data from the table: "job_queues.InvitationEmailJob" using primary key columns */
  job_queues_InvitationEmailJob_by_pk?: Maybe<Job_Queues_InvitationEmailJob>;
  /** fetch data from the table: "job_queues.MediaPackageHarvestJob" */
  job_queues_MediaPackageHarvestJob: Array<Job_Queues_MediaPackageHarvestJob>;
  /** fetch aggregated fields from the table: "job_queues.MediaPackageHarvestJob" */
  job_queues_MediaPackageHarvestJob_aggregate: Job_Queues_MediaPackageHarvestJob_Aggregate;
  /** fetch data from the table: "job_queues.MediaPackageHarvestJob" using primary key columns */
  job_queues_MediaPackageHarvestJob_by_pk?: Maybe<Job_Queues_MediaPackageHarvestJob>;
  /** fetch data from the table: "job_queues.PublishVideoJob" */
  job_queues_PublishVideoJob: Array<Job_Queues_PublishVideoJob>;
  /** fetch aggregated fields from the table: "job_queues.PublishVideoJob" */
  job_queues_PublishVideoJob_aggregate: Job_Queues_PublishVideoJob_Aggregate;
  /** fetch data from the table: "job_queues.PublishVideoJob" using primary key columns */
  job_queues_PublishVideoJob_by_pk?: Maybe<Job_Queues_PublishVideoJob>;
  /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" */
  job_queues_SubmissionRequestEmailJob: Array<Job_Queues_SubmissionRequestEmailJob>;
  /** fetch aggregated fields from the table: "job_queues.SubmissionRequestEmailJob" */
  job_queues_SubmissionRequestEmailJob_aggregate: Job_Queues_SubmissionRequestEmailJob_Aggregate;
  /** fetch data from the table: "job_queues.SubmissionRequestEmailJob" using primary key columns */
  job_queues_SubmissionRequestEmailJob_by_pk?: Maybe<Job_Queues_SubmissionRequestEmailJob>;
  /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" */
  job_queues_UploadYouTubeVideoJob: Array<Job_Queues_UploadYouTubeVideoJob>;
  /** fetch aggregated fields from the table: "job_queues.UploadYouTubeVideoJob" */
  job_queues_UploadYouTubeVideoJob_aggregate: Job_Queues_UploadYouTubeVideoJob_Aggregate;
  /** fetch data from the table: "job_queues.UploadYouTubeVideoJob" using primary key columns */
  job_queues_UploadYouTubeVideoJob_by_pk?: Maybe<Job_Queues_UploadYouTubeVideoJob>;
  /** perform the action: "presence_Summary" */
  presence_Summary?: Maybe<PresenceSummaryOutput>;
  /** perform the action: "protectedEcho" */
  protectedEcho?: Maybe<ProtectedEchoOutput>;
  /** fetch data from the table: "room.ShuffleAlgorithm" */
  room_ShuffleAlgorithm: Array<Room_ShuffleAlgorithm>;
  /** fetch aggregated fields from the table: "room.ShuffleAlgorithm" */
  room_ShuffleAlgorithm_aggregate: Room_ShuffleAlgorithm_Aggregate;
  /** fetch data from the table: "room.ShuffleAlgorithm" using primary key columns */
  room_ShuffleAlgorithm_by_pk?: Maybe<Room_ShuffleAlgorithm>;
  /** fetch data from the table: "room.ShufflePeriod" */
  room_ShufflePeriod: Array<Room_ShufflePeriod>;
  /** fetch aggregated fields from the table: "room.ShufflePeriod" */
  room_ShufflePeriod_aggregate: Room_ShufflePeriod_Aggregate;
  /** fetch data from the table: "room.ShufflePeriod" using primary key columns */
  room_ShufflePeriod_by_pk?: Maybe<Room_ShufflePeriod>;
  /** fetch data from the table: "room.ShuffleQueueEntry" */
  room_ShuffleQueueEntry: Array<Room_ShuffleQueueEntry>;
  /** fetch aggregated fields from the table: "room.ShuffleQueueEntry" */
  room_ShuffleQueueEntry_aggregate: Room_ShuffleQueueEntry_Aggregate;
  /** fetch data from the table: "room.ShuffleQueueEntry" using primary key columns */
  room_ShuffleQueueEntry_by_pk?: Maybe<Room_ShuffleQueueEntry>;
  /** fetch data from the table: "room.ShuffleRoom" */
  room_ShuffleRoom: Array<Room_ShuffleRoom>;
  /** fetch aggregated fields from the table: "room.ShuffleRoom" */
  room_ShuffleRoom_aggregate: Room_ShuffleRoom_Aggregate;
  /** fetch data from the table: "room.ShuffleRoom" using primary key columns */
  room_ShuffleRoom_by_pk?: Maybe<Room_ShuffleRoom>;
  /** fetch data from the table: "system.Configuration" */
  system_Configuration: Array<System_Configuration>;
  /** fetch data from the table: "system.ConfigurationKey" */
  system_ConfigurationKey: Array<System_ConfigurationKey>;
  /** fetch aggregated fields from the table: "system.ConfigurationKey" */
  system_ConfigurationKey_aggregate: System_ConfigurationKey_Aggregate;
  /** fetch data from the table: "system.ConfigurationKey" using primary key columns */
  system_ConfigurationKey_by_pk?: Maybe<System_ConfigurationKey>;
  /** fetch aggregated fields from the table: "system.Configuration" */
  system_Configuration_aggregate: System_Configuration_Aggregate;
  /** fetch data from the table: "system.Configuration" using primary key columns */
  system_Configuration_by_pk?: Maybe<System_Configuration>;
  /** perform the action: "vapidPublicKey" */
  vapidPublicKey: VapidPublicKeyOutput;
};


/** subscription root */
export type Subscription_RootAttendeeArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAttendeeGoogleAccountArgs = {
  distinct_on?: Maybe<Array<AttendeeGoogleAccount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeGoogleAccount_Order_By>>;
  where?: Maybe<AttendeeGoogleAccount_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAttendeeGoogleAccount_AggregateArgs = {
  distinct_on?: Maybe<Array<AttendeeGoogleAccount_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeGoogleAccount_Order_By>>;
  where?: Maybe<AttendeeGoogleAccount_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAttendeeGoogleAccount_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootAttendeeProfileArgs = {
  distinct_on?: Maybe<Array<AttendeeProfile_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeProfile_Order_By>>;
  where?: Maybe<AttendeeProfile_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAttendeeProfile_AggregateArgs = {
  distinct_on?: Maybe<Array<AttendeeProfile_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<AttendeeProfile_Order_By>>;
  where?: Maybe<AttendeeProfile_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAttendeeProfile_By_PkArgs = {
  attendeeId: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootAttendee_AggregateArgs = {
  distinct_on?: Maybe<Array<Attendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Attendee_Order_By>>;
  where?: Maybe<Attendee_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAttendee_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootBroadcastArgs = {
  distinct_on?: Maybe<Array<Broadcast_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Broadcast_Order_By>>;
  where?: Maybe<Broadcast_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBroadcastContentItemArgs = {
  distinct_on?: Maybe<Array<BroadcastContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BroadcastContentItem_Order_By>>;
  where?: Maybe<BroadcastContentItem_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBroadcastContentItem_AggregateArgs = {
  distinct_on?: Maybe<Array<BroadcastContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<BroadcastContentItem_Order_By>>;
  where?: Maybe<BroadcastContentItem_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBroadcastContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootBroadcast_AggregateArgs = {
  distinct_on?: Maybe<Array<Broadcast_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Broadcast_Order_By>>;
  where?: Maybe<Broadcast_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootBroadcast_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootConferenceArgs = {
  distinct_on?: Maybe<Array<Conference_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conference_Order_By>>;
  where?: Maybe<Conference_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConferenceConfigurationArgs = {
  distinct_on?: Maybe<Array<ConferenceConfiguration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceConfiguration_Order_By>>;
  where?: Maybe<ConferenceConfiguration_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConferenceConfiguration_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferenceConfiguration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceConfiguration_Order_By>>;
  where?: Maybe<ConferenceConfiguration_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConferenceConfiguration_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootConferenceDemoCodeArgs = {
  distinct_on?: Maybe<Array<ConferenceDemoCode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceDemoCode_Order_By>>;
  where?: Maybe<ConferenceDemoCode_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConferenceDemoCode_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferenceDemoCode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferenceDemoCode_Order_By>>;
  where?: Maybe<ConferenceDemoCode_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConferenceDemoCode_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootConferencePrepareJobArgs = {
  distinct_on?: Maybe<Array<ConferencePrepareJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferencePrepareJob_Order_By>>;
  where?: Maybe<ConferencePrepareJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConferencePrepareJob_AggregateArgs = {
  distinct_on?: Maybe<Array<ConferencePrepareJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ConferencePrepareJob_Order_By>>;
  where?: Maybe<ConferencePrepareJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConferencePrepareJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootConference_AggregateArgs = {
  distinct_on?: Maybe<Array<Conference_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Conference_Order_By>>;
  where?: Maybe<Conference_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootConference_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootContentGroupArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupHallwayArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupHallway_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupHallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupHallway_Order_By>>;
  where?: Maybe<ContentGroupHallway_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupHallway_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootContentGroupPersonArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupPerson_Order_By>>;
  where?: Maybe<ContentGroupPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootContentGroupTagArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupTag_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupTag_Order_By>>;
  where?: Maybe<ContentGroupTag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootContentGroupTypeArgs = {
  distinct_on?: Maybe<Array<ContentGroupType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupType_Order_By>>;
  where?: Maybe<ContentGroupType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupType_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroupType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroupType_Order_By>>;
  where?: Maybe<ContentGroupType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroupType_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootContentGroup_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentGroup_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentGroup_Order_By>>;
  where?: Maybe<ContentGroup_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentGroup_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootContentItemArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentItem_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentItem_Order_By>>;
  where?: Maybe<ContentItem_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootContentPersonArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentPerson_Order_By>>;
  where?: Maybe<ContentPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootContentTypeArgs = {
  distinct_on?: Maybe<Array<ContentType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentType_Order_By>>;
  where?: Maybe<ContentType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentType_AggregateArgs = {
  distinct_on?: Maybe<Array<ContentType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ContentType_Order_By>>;
  where?: Maybe<ContentType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootContentType_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootEmailArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEmail_AggregateArgs = {
  distinct_on?: Maybe<Array<Email_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Email_Order_By>>;
  where?: Maybe<Email_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEmail_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootEventArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventParticipantStreamArgs = {
  distinct_on?: Maybe<Array<EventParticipantStream_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventParticipantStream_Order_By>>;
  where?: Maybe<EventParticipantStream_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventParticipantStream_AggregateArgs = {
  distinct_on?: Maybe<Array<EventParticipantStream_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventParticipantStream_Order_By>>;
  where?: Maybe<EventParticipantStream_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventParticipantStream_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootEventPersonArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventPersonRoleArgs = {
  distinct_on?: Maybe<Array<EventPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPersonRole_Order_By>>;
  where?: Maybe<EventPersonRole_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventPersonRole_AggregateArgs = {
  distinct_on?: Maybe<Array<EventPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPersonRole_Order_By>>;
  where?: Maybe<EventPersonRole_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventPersonRole_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootEventPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<EventPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventPerson_Order_By>>;
  where?: Maybe<EventPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootEventRoomJoinRequestArgs = {
  distinct_on?: Maybe<Array<EventRoomJoinRequest_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventRoomJoinRequest_Order_By>>;
  where?: Maybe<EventRoomJoinRequest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventRoomJoinRequest_AggregateArgs = {
  distinct_on?: Maybe<Array<EventRoomJoinRequest_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventRoomJoinRequest_Order_By>>;
  where?: Maybe<EventRoomJoinRequest_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventRoomJoinRequest_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootEventTagArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventTag_AggregateArgs = {
  distinct_on?: Maybe<Array<EventTag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventTag_Order_By>>;
  where?: Maybe<EventTag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootEventVonageSessionArgs = {
  distinct_on?: Maybe<Array<EventVonageSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventVonageSession_Order_By>>;
  where?: Maybe<EventVonageSession_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventVonageSession_AggregateArgs = {
  distinct_on?: Maybe<Array<EventVonageSession_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<EventVonageSession_Order_By>>;
  where?: Maybe<EventVonageSession_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEventVonageSession_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootEvent_AggregateArgs = {
  distinct_on?: Maybe<Array<Event_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Event_Order_By>>;
  where?: Maybe<Event_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootEvent_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootExecutedTransitionsArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootExecutedTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<ExecutedTransitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<ExecutedTransitions_Order_By>>;
  where?: Maybe<ExecutedTransitions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootExecutedTransitions_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootFlatUnauthPermissionArgs = {
  distinct_on?: Maybe<Array<FlatUnauthPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUnauthPermission_Order_By>>;
  where?: Maybe<FlatUnauthPermission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFlatUnauthPermission_AggregateArgs = {
  distinct_on?: Maybe<Array<FlatUnauthPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUnauthPermission_Order_By>>;
  where?: Maybe<FlatUnauthPermission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFlatUserPermissionArgs = {
  distinct_on?: Maybe<Array<FlatUserPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUserPermission_Order_By>>;
  where?: Maybe<FlatUserPermission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootFlatUserPermission_AggregateArgs = {
  distinct_on?: Maybe<Array<FlatUserPermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<FlatUserPermission_Order_By>>;
  where?: Maybe<FlatUserPermission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroupArgs = {
  distinct_on?: Maybe<Array<Group_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Group_Order_By>>;
  where?: Maybe<Group_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroupAttendeeArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroupAttendee_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupAttendee_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupAttendee_Order_By>>;
  where?: Maybe<GroupAttendee_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroupAttendee_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootGroupRoleArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroupRole_AggregateArgs = {
  distinct_on?: Maybe<Array<GroupRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<GroupRole_Order_By>>;
  where?: Maybe<GroupRole_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroupRole_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootGroup_AggregateArgs = {
  distinct_on?: Maybe<Array<Group_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Group_Order_By>>;
  where?: Maybe<Group_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootGroup_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootHallwayArgs = {
  distinct_on?: Maybe<Array<Hallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hallway_Order_By>>;
  where?: Maybe<Hallway_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHallway_AggregateArgs = {
  distinct_on?: Maybe<Array<Hallway_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Hallway_Order_By>>;
  where?: Maybe<Hallway_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootHallway_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootInputTypeArgs = {
  distinct_on?: Maybe<Array<InputType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<InputType_Order_By>>;
  where?: Maybe<InputType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInputType_AggregateArgs = {
  distinct_on?: Maybe<Array<InputType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<InputType_Order_By>>;
  where?: Maybe<InputType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInputType_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootInvitationArgs = {
  distinct_on?: Maybe<Array<Invitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invitation_Order_By>>;
  where?: Maybe<Invitation_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInvitation_AggregateArgs = {
  distinct_on?: Maybe<Array<Invitation_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Invitation_Order_By>>;
  where?: Maybe<Invitation_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootInvitation_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJobStatusArgs = {
  distinct_on?: Maybe<Array<JobStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<JobStatus_Order_By>>;
  where?: Maybe<JobStatus_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJobStatus_AggregateArgs = {
  distinct_on?: Maybe<Array<JobStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<JobStatus_Order_By>>;
  where?: Maybe<JobStatus_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJobStatus_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootMediaLiveChannelArgs = {
  distinct_on?: Maybe<Array<MediaLiveChannel_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MediaLiveChannel_Order_By>>;
  where?: Maybe<MediaLiveChannel_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMediaLiveChannel_AggregateArgs = {
  distinct_on?: Maybe<Array<MediaLiveChannel_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<MediaLiveChannel_Order_By>>;
  where?: Maybe<MediaLiveChannel_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootMediaLiveChannel_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootOnlineStatusArgs = {
  distinct_on?: Maybe<Array<OnlineStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OnlineStatus_Order_By>>;
  where?: Maybe<OnlineStatus_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOnlineStatus_AggregateArgs = {
  distinct_on?: Maybe<Array<OnlineStatus_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OnlineStatus_Order_By>>;
  where?: Maybe<OnlineStatus_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOnlineStatus_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootOriginatingDataArgs = {
  distinct_on?: Maybe<Array<OriginatingData_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OriginatingData_Order_By>>;
  where?: Maybe<OriginatingData_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOriginatingData_AggregateArgs = {
  distinct_on?: Maybe<Array<OriginatingData_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<OriginatingData_Order_By>>;
  where?: Maybe<OriginatingData_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootOriginatingData_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootPermissionArgs = {
  distinct_on?: Maybe<Array<Permission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Permission_Order_By>>;
  where?: Maybe<Permission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPermission_AggregateArgs = {
  distinct_on?: Maybe<Array<Permission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Permission_Order_By>>;
  where?: Maybe<Permission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPermission_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootPushNotificationSubscriptionArgs = {
  distinct_on?: Maybe<Array<PushNotificationSubscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<PushNotificationSubscription_Order_By>>;
  where?: Maybe<PushNotificationSubscription_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPushNotificationSubscription_AggregateArgs = {
  distinct_on?: Maybe<Array<PushNotificationSubscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<PushNotificationSubscription_Order_By>>;
  where?: Maybe<PushNotificationSubscription_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootPushNotificationSubscription_By_PkArgs = {
  endpoint: Scalars['String'];
};


/** subscription root */
export type Subscription_RootRequiredContentItemArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRequiredContentItem_AggregateArgs = {
  distinct_on?: Maybe<Array<RequiredContentItem_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RequiredContentItem_Order_By>>;
  where?: Maybe<RequiredContentItem_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRequiredContentItem_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootRoleArgs = {
  distinct_on?: Maybe<Array<Role_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Role_Order_By>>;
  where?: Maybe<Role_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRolePermissionArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRolePermission_AggregateArgs = {
  distinct_on?: Maybe<Array<RolePermission_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RolePermission_Order_By>>;
  where?: Maybe<RolePermission_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRolePermission_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootRole_AggregateArgs = {
  distinct_on?: Maybe<Array<Role_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Role_Order_By>>;
  where?: Maybe<Role_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRole_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootRoomArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomModeArgs = {
  distinct_on?: Maybe<Array<RoomMode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomMode_Order_By>>;
  where?: Maybe<RoomMode_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomMode_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomMode_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomMode_Order_By>>;
  where?: Maybe<RoomMode_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomMode_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootRoomParticipantArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomParticipant_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomParticipant_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomParticipant_Order_By>>;
  where?: Maybe<RoomParticipant_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomParticipant_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootRoomPersonArgs = {
  distinct_on?: Maybe<Array<RoomPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPerson_Order_By>>;
  where?: Maybe<RoomPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomPersonRoleArgs = {
  distinct_on?: Maybe<Array<RoomPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPersonRole_Order_By>>;
  where?: Maybe<RoomPersonRole_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomPersonRole_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomPersonRole_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPersonRole_Order_By>>;
  where?: Maybe<RoomPersonRole_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomPersonRole_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootRoomPerson_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomPerson_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPerson_Order_By>>;
  where?: Maybe<RoomPerson_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomPerson_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootRoomPrivacyArgs = {
  distinct_on?: Maybe<Array<RoomPrivacy_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPrivacy_Order_By>>;
  where?: Maybe<RoomPrivacy_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomPrivacy_AggregateArgs = {
  distinct_on?: Maybe<Array<RoomPrivacy_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<RoomPrivacy_Order_By>>;
  where?: Maybe<RoomPrivacy_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoomPrivacy_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootRoom_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_Order_By>>;
  where?: Maybe<Room_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTagArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTag_AggregateArgs = {
  distinct_on?: Maybe<Array<Tag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Tag_Order_By>>;
  where?: Maybe<Tag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTag_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTranscriptionJobArgs = {
  distinct_on?: Maybe<Array<TranscriptionJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<TranscriptionJob_Order_By>>;
  where?: Maybe<TranscriptionJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTranscriptionJob_AggregateArgs = {
  distinct_on?: Maybe<Array<TranscriptionJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<TranscriptionJob_Order_By>>;
  where?: Maybe<TranscriptionJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTranscriptionJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootTransitionsArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTransitions_AggregateArgs = {
  distinct_on?: Maybe<Array<Transitions_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Transitions_Order_By>>;
  where?: Maybe<Transitions_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootTransitions_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootUploaderArgs = {
  distinct_on?: Maybe<Array<Uploader_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Uploader_Order_By>>;
  where?: Maybe<Uploader_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUploader_AggregateArgs = {
  distinct_on?: Maybe<Array<Uploader_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Uploader_Order_By>>;
  where?: Maybe<Uploader_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUploader_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootUserArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_AggregateArgs = {
  distinct_on?: Maybe<Array<User_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<User_Order_By>>;
  where?: Maybe<User_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootUser_By_PkArgs = {
  id: Scalars['String'];
};


/** subscription root */
export type Subscription_RootVideoRenderJobArgs = {
  distinct_on?: Maybe<Array<VideoRenderJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<VideoRenderJob_Order_By>>;
  where?: Maybe<VideoRenderJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootVideoRenderJob_AggregateArgs = {
  distinct_on?: Maybe<Array<VideoRenderJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<VideoRenderJob_Order_By>>;
  where?: Maybe<VideoRenderJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootVideoRenderJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootYouTubeUploadArgs = {
  distinct_on?: Maybe<Array<YouTubeUpload_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<YouTubeUpload_Order_By>>;
  where?: Maybe<YouTubeUpload_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootYouTubeUpload_AggregateArgs = {
  distinct_on?: Maybe<Array<YouTubeUpload_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<YouTubeUpload_Order_By>>;
  where?: Maybe<YouTubeUpload_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootYouTubeUpload_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootAnalytics_AppStatsArgs = {
  distinct_on?: Maybe<Array<Analytics_AppStats_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Analytics_AppStats_Order_By>>;
  where?: Maybe<Analytics_AppStats_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAnalytics_AppStats_AggregateArgs = {
  distinct_on?: Maybe<Array<Analytics_AppStats_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Analytics_AppStats_Order_By>>;
  where?: Maybe<Analytics_AppStats_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootAnalytics_AppStats_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootChat_ChatArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Chat_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Chat_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Chat_Order_By>>;
  where?: Maybe<Chat_Chat_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Chat_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootChat_FlagArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_FlagTypeArgs = {
  distinct_on?: Maybe<Array<Chat_FlagType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_FlagType_Order_By>>;
  where?: Maybe<Chat_FlagType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_FlagType_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_FlagType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_FlagType_Order_By>>;
  where?: Maybe<Chat_FlagType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_FlagType_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootChat_Flag_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Flag_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Flag_Order_By>>;
  where?: Maybe<Chat_Flag_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Flag_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootChat_MessageArgs = {
  distinct_on?: Maybe<Array<Chat_Message_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Message_Order_By>>;
  where?: Maybe<Chat_Message_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_MessageTypeArgs = {
  distinct_on?: Maybe<Array<Chat_MessageType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_MessageType_Order_By>>;
  where?: Maybe<Chat_MessageType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_MessageType_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_MessageType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_MessageType_Order_By>>;
  where?: Maybe<Chat_MessageType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_MessageType_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootChat_Message_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Message_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Message_Order_By>>;
  where?: Maybe<Chat_Message_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Message_By_PkArgs = {
  id: Scalars['Int'];
};


/** subscription root */
export type Subscription_RootChat_PinArgs = {
  distinct_on?: Maybe<Array<Chat_Pin_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Pin_Order_By>>;
  where?: Maybe<Chat_Pin_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Pin_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Pin_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Pin_Order_By>>;
  where?: Maybe<Chat_Pin_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Pin_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootChat_ReactionArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_ReactionTypeArgs = {
  distinct_on?: Maybe<Array<Chat_ReactionType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReactionType_Order_By>>;
  where?: Maybe<Chat_ReactionType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_ReactionType_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_ReactionType_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReactionType_Order_By>>;
  where?: Maybe<Chat_ReactionType_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_ReactionType_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootChat_Reaction_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Reaction_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Reaction_Order_By>>;
  where?: Maybe<Chat_Reaction_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Reaction_By_PkArgs = {
  sId: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootChat_ReadUpToIndexArgs = {
  distinct_on?: Maybe<Array<Chat_ReadUpToIndex_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReadUpToIndex_Order_By>>;
  where?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_ReadUpToIndex_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_ReadUpToIndex_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_ReadUpToIndex_Order_By>>;
  where?: Maybe<Chat_ReadUpToIndex_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_ReadUpToIndex_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootChat_SubscriptionArgs = {
  distinct_on?: Maybe<Array<Chat_Subscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Subscription_Order_By>>;
  where?: Maybe<Chat_Subscription_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Subscription_AggregateArgs = {
  distinct_on?: Maybe<Array<Chat_Subscription_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Chat_Subscription_Order_By>>;
  where?: Maybe<Chat_Subscription_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootChat_Subscription_By_PkArgs = {
  attendeeId: Scalars['uuid'];
  chatId: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootEchoArgs = {
  message: Scalars['String'];
};


/** subscription root */
export type Subscription_RootGetContentItemArgs = {
  magicToken: Scalars['String'];
};


/** subscription root */
export type Subscription_RootGetUploadAgreementArgs = {
  magicToken: Scalars['String'];
};


/** subscription root */
export type Subscription_RootJob_Queues_ChannelStackCreateJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
  where?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_ChannelStackCreateJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_ChannelStackCreateJob_Order_By>>;
  where?: Maybe<Job_Queues_ChannelStackCreateJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_ChannelStackCreateJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJob_Queues_CombineVideosJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
  where?: Maybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_CombineVideosJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CombineVideosJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CombineVideosJob_Order_By>>;
  where?: Maybe<Job_Queues_CombineVideosJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_CombineVideosJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJob_Queues_CustomEmailJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_CustomEmailJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_CustomEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_CustomEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_CustomEmailJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_CustomEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJob_Queues_InvitationEmailJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_InvitationEmailJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_InvitationEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_InvitationEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_InvitationEmailJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_InvitationEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJob_Queues_MediaPackageHarvestJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
  where?: Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_MediaPackageHarvestJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_MediaPackageHarvestJob_Order_By>>;
  where?: Maybe<Job_Queues_MediaPackageHarvestJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_MediaPackageHarvestJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJob_Queues_PublishVideoJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_PublishVideoJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_PublishVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_PublishVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_PublishVideoJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_PublishVideoJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJob_Queues_SubmissionRequestEmailJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_SubmissionRequestEmailJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_SubmissionRequestEmailJob_Order_By>>;
  where?: Maybe<Job_Queues_SubmissionRequestEmailJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_SubmissionRequestEmailJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootJob_Queues_UploadYouTubeVideoJobArgs = {
  distinct_on?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_UploadYouTubeVideoJob_AggregateArgs = {
  distinct_on?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Job_Queues_UploadYouTubeVideoJob_Order_By>>;
  where?: Maybe<Job_Queues_UploadYouTubeVideoJob_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootJob_Queues_UploadYouTubeVideoJob_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootProtectedEchoArgs = {
  message: Scalars['String'];
};


/** subscription root */
export type Subscription_RootRoom_ShuffleAlgorithmArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleAlgorithm_Order_By>>;
  where?: Maybe<Room_ShuffleAlgorithm_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShuffleAlgorithm_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleAlgorithm_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleAlgorithm_Order_By>>;
  where?: Maybe<Room_ShuffleAlgorithm_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShuffleAlgorithm_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootRoom_ShufflePeriodArgs = {
  distinct_on?: Maybe<Array<Room_ShufflePeriod_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShufflePeriod_Order_By>>;
  where?: Maybe<Room_ShufflePeriod_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShufflePeriod_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShufflePeriod_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShufflePeriod_Order_By>>;
  where?: Maybe<Room_ShufflePeriod_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShufflePeriod_By_PkArgs = {
  id: Scalars['uuid'];
};


/** subscription root */
export type Subscription_RootRoom_ShuffleQueueEntryArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShuffleQueueEntry_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleQueueEntry_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleQueueEntry_Order_By>>;
  where?: Maybe<Room_ShuffleQueueEntry_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShuffleQueueEntry_By_PkArgs = {
  id: Scalars['bigint'];
};


/** subscription root */
export type Subscription_RootRoom_ShuffleRoomArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShuffleRoom_AggregateArgs = {
  distinct_on?: Maybe<Array<Room_ShuffleRoom_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<Room_ShuffleRoom_Order_By>>;
  where?: Maybe<Room_ShuffleRoom_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootRoom_ShuffleRoom_By_PkArgs = {
  id: Scalars['bigint'];
};


/** subscription root */
export type Subscription_RootSystem_ConfigurationArgs = {
  distinct_on?: Maybe<Array<System_Configuration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_Configuration_Order_By>>;
  where?: Maybe<System_Configuration_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSystem_ConfigurationKeyArgs = {
  distinct_on?: Maybe<Array<System_ConfigurationKey_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_ConfigurationKey_Order_By>>;
  where?: Maybe<System_ConfigurationKey_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSystem_ConfigurationKey_AggregateArgs = {
  distinct_on?: Maybe<Array<System_ConfigurationKey_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_ConfigurationKey_Order_By>>;
  where?: Maybe<System_ConfigurationKey_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSystem_ConfigurationKey_By_PkArgs = {
  name: Scalars['String'];
};


/** subscription root */
export type Subscription_RootSystem_Configuration_AggregateArgs = {
  distinct_on?: Maybe<Array<System_Configuration_Select_Column>>;
  limit?: Maybe<Scalars['Int']>;
  offset?: Maybe<Scalars['Int']>;
  order_by?: Maybe<Array<System_Configuration_Order_By>>;
  where?: Maybe<System_Configuration_Bool_Exp>;
};


/** subscription root */
export type Subscription_RootSystem_Configuration_By_PkArgs = {
  key: System_ConfigurationKey_Enum;
};

/** columns and relationships of "system.Configuration" */
export type System_Configuration = {
  __typename?: 'system_Configuration';
  created_at: Scalars['timestamptz'];
  key: System_ConfigurationKey_Enum;
  updated_at: Scalars['timestamptz'];
  value: Scalars['jsonb'];
};


/** columns and relationships of "system.Configuration" */
export type System_ConfigurationValueArgs = {
  path?: Maybe<Scalars['String']>;
};

/** columns and relationships of "system.ConfigurationKey" */
export type System_ConfigurationKey = {
  __typename?: 'system_ConfigurationKey';
  description?: Maybe<Scalars['String']>;
  name: Scalars['String'];
};

/** aggregated selection of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate = {
  __typename?: 'system_ConfigurationKey_aggregate';
  aggregate?: Maybe<System_ConfigurationKey_Aggregate_Fields>;
  nodes: Array<System_ConfigurationKey>;
};

/** aggregate fields of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate_Fields = {
  __typename?: 'system_ConfigurationKey_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<System_ConfigurationKey_Max_Fields>;
  min?: Maybe<System_ConfigurationKey_Min_Fields>;
};


/** aggregate fields of "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<System_ConfigurationKey_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "system.ConfigurationKey" */
export type System_ConfigurationKey_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<System_ConfigurationKey_Max_Order_By>;
  min?: Maybe<System_ConfigurationKey_Min_Order_By>;
};

/** input type for inserting array relation for remote table "system.ConfigurationKey" */
export type System_ConfigurationKey_Arr_Rel_Insert_Input = {
  data: Array<System_ConfigurationKey_Insert_Input>;
  on_conflict?: Maybe<System_ConfigurationKey_On_Conflict>;
};

/** Boolean expression to filter rows from the table "system.ConfigurationKey". All fields are combined with a logical 'AND'. */
export type System_ConfigurationKey_Bool_Exp = {
  _and?: Maybe<Array<Maybe<System_ConfigurationKey_Bool_Exp>>>;
  _not?: Maybe<System_ConfigurationKey_Bool_Exp>;
  _or?: Maybe<Array<Maybe<System_ConfigurationKey_Bool_Exp>>>;
  description?: Maybe<String_Comparison_Exp>;
  name?: Maybe<String_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Constraint {
  /** unique or primary key constraint */
  ConfigurationKeyPkey = 'ConfigurationKey_pkey'
}

export enum System_ConfigurationKey_Enum {
  /** The time of the latest revision of the host cookie policy. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
  CookiePolicyLatestRevisionTimestamp = 'COOKIE_POLICY_LATEST_REVISION_TIMESTAMP',
  /** The URL to the host cookie policy. Note: If self hosting Clowdr, this must be your organisation's cookie policy - you cannot legally reuse, rely on or copy Clowdr's cookie policy. */
  CookiePolicyUrl = 'COOKIE_POLICY_URL',
  /** The name of the organisation legally responsible for hosting this instance of the Clowdr software. */
  HostOrganisationName = 'HOST_ORGANISATION_NAME',
  /** The time of the latest revision of the host Privacy Policy. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
  PrivacyPolicyLatestRevisionTimestamp = 'PRIVACY_POLICY_LATEST_REVISION_TIMESTAMP',
  /** URL to the host Privacy Policy. Note: If self hosting Clowdr, this must be your organisation's privacy policy - you cannot legally reuse, rely on or copy Clowdr's privacy policy. */
  PrivacyPolicyUrl = 'PRIVACY_POLICY_URL',
  /** The time of the latest revision of the host T&Cs. The value should be a Number representing the milliseconds elapsed since the UNIX epoch. */
  TermsLatestRevisionTimestamp = 'TERMS_LATEST_REVISION_TIMESTAMP',
  /** URL to the host T&Cs. Note: If self hosting Clowdr, this must be your organisation's terms - you cannot legally reuse, rely on or copy Clowdr's terms. */
  TermsUrl = 'TERMS_URL',
  /** VAPID keys are used for push notifications and are generated automatically by the realtime service on first use. */
  VapidPrivateKey = 'VAPID_PRIVATE_KEY',
  /** VAPID keys are used for push notifications and are generated automatically by the realtime service on first use. */
  VapidPublicKey = 'VAPID_PUBLIC_KEY'
}

/** expression to compare columns of type system_ConfigurationKey_enum. All fields are combined with logical 'AND'. */
export type System_ConfigurationKey_Enum_Comparison_Exp = {
  _eq?: Maybe<System_ConfigurationKey_Enum>;
  _in?: Maybe<Array<System_ConfigurationKey_Enum>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _neq?: Maybe<System_ConfigurationKey_Enum>;
  _nin?: Maybe<Array<System_ConfigurationKey_Enum>>;
};

/** input type for inserting data into table "system.ConfigurationKey" */
export type System_ConfigurationKey_Insert_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** aggregate max on columns */
export type System_ConfigurationKey_Max_Fields = {
  __typename?: 'system_ConfigurationKey_max_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by max() on columns of table "system.ConfigurationKey" */
export type System_ConfigurationKey_Max_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type System_ConfigurationKey_Min_Fields = {
  __typename?: 'system_ConfigurationKey_min_fields';
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** order by min() on columns of table "system.ConfigurationKey" */
export type System_ConfigurationKey_Min_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** response of any mutation on the table "system.ConfigurationKey" */
export type System_ConfigurationKey_Mutation_Response = {
  __typename?: 'system_ConfigurationKey_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<System_ConfigurationKey>;
};

/** input type for inserting object relation for remote table "system.ConfigurationKey" */
export type System_ConfigurationKey_Obj_Rel_Insert_Input = {
  data: System_ConfigurationKey_Insert_Input;
  on_conflict?: Maybe<System_ConfigurationKey_On_Conflict>;
};

/** on conflict condition type for table "system.ConfigurationKey" */
export type System_ConfigurationKey_On_Conflict = {
  constraint: System_ConfigurationKey_Constraint;
  update_columns: Array<System_ConfigurationKey_Update_Column>;
  where?: Maybe<System_ConfigurationKey_Bool_Exp>;
};

/** ordering options when selecting data from "system.ConfigurationKey" */
export type System_ConfigurationKey_Order_By = {
  description?: Maybe<Order_By>;
  name?: Maybe<Order_By>;
};

/** primary key columns input for table: "system.ConfigurationKey" */
export type System_ConfigurationKey_Pk_Columns_Input = {
  name: Scalars['String'];
};

/** select columns of table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Select_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** input type for updating data in table "system.ConfigurationKey" */
export type System_ConfigurationKey_Set_Input = {
  description?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
};

/** update columns of table "system.ConfigurationKey" */
export enum System_ConfigurationKey_Update_Column {
  /** column name */
  Description = 'description',
  /** column name */
  Name = 'name'
}

/** aggregated selection of "system.Configuration" */
export type System_Configuration_Aggregate = {
  __typename?: 'system_Configuration_aggregate';
  aggregate?: Maybe<System_Configuration_Aggregate_Fields>;
  nodes: Array<System_Configuration>;
};

/** aggregate fields of "system.Configuration" */
export type System_Configuration_Aggregate_Fields = {
  __typename?: 'system_Configuration_aggregate_fields';
  count?: Maybe<Scalars['Int']>;
  max?: Maybe<System_Configuration_Max_Fields>;
  min?: Maybe<System_Configuration_Min_Fields>;
};


/** aggregate fields of "system.Configuration" */
export type System_Configuration_Aggregate_FieldsCountArgs = {
  columns?: Maybe<Array<System_Configuration_Select_Column>>;
  distinct?: Maybe<Scalars['Boolean']>;
};

/** order by aggregate values of table "system.Configuration" */
export type System_Configuration_Aggregate_Order_By = {
  count?: Maybe<Order_By>;
  max?: Maybe<System_Configuration_Max_Order_By>;
  min?: Maybe<System_Configuration_Min_Order_By>;
};

/** append existing jsonb value of filtered columns with new jsonb value */
export type System_Configuration_Append_Input = {
  value?: Maybe<Scalars['jsonb']>;
};

/** input type for inserting array relation for remote table "system.Configuration" */
export type System_Configuration_Arr_Rel_Insert_Input = {
  data: Array<System_Configuration_Insert_Input>;
  on_conflict?: Maybe<System_Configuration_On_Conflict>;
};

/** Boolean expression to filter rows from the table "system.Configuration". All fields are combined with a logical 'AND'. */
export type System_Configuration_Bool_Exp = {
  _and?: Maybe<Array<Maybe<System_Configuration_Bool_Exp>>>;
  _not?: Maybe<System_Configuration_Bool_Exp>;
  _or?: Maybe<Array<Maybe<System_Configuration_Bool_Exp>>>;
  created_at?: Maybe<Timestamptz_Comparison_Exp>;
  key?: Maybe<System_ConfigurationKey_Enum_Comparison_Exp>;
  updated_at?: Maybe<Timestamptz_Comparison_Exp>;
  value?: Maybe<Jsonb_Comparison_Exp>;
};

/** unique or primary key constraints on table "system.Configuration" */
export enum System_Configuration_Constraint {
  /** unique or primary key constraint */
  ConfigurationPkey = 'Configuration_pkey'
}

/** delete the field or element with specified path (for JSON arrays, negative integers count from the end) */
export type System_Configuration_Delete_At_Path_Input = {
  value?: Maybe<Array<Maybe<Scalars['String']>>>;
};

/** delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array */
export type System_Configuration_Delete_Elem_Input = {
  value?: Maybe<Scalars['Int']>;
};

/** delete key/value pair or string element. key/value pairs are matched based on their key value */
export type System_Configuration_Delete_Key_Input = {
  value?: Maybe<Scalars['String']>;
};

/** input type for inserting data into table "system.Configuration" */
export type System_Configuration_Insert_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  key?: Maybe<System_ConfigurationKey_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value?: Maybe<Scalars['jsonb']>;
};

/** aggregate max on columns */
export type System_Configuration_Max_Fields = {
  __typename?: 'system_Configuration_max_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by max() on columns of table "system.Configuration" */
export type System_Configuration_Max_Order_By = {
  created_at?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** aggregate min on columns */
export type System_Configuration_Min_Fields = {
  __typename?: 'system_Configuration_min_fields';
  created_at?: Maybe<Scalars['timestamptz']>;
  updated_at?: Maybe<Scalars['timestamptz']>;
};

/** order by min() on columns of table "system.Configuration" */
export type System_Configuration_Min_Order_By = {
  created_at?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
};

/** response of any mutation on the table "system.Configuration" */
export type System_Configuration_Mutation_Response = {
  __typename?: 'system_Configuration_mutation_response';
  /** number of affected rows by the mutation */
  affected_rows: Scalars['Int'];
  /** data of the affected rows by the mutation */
  returning: Array<System_Configuration>;
};

/** input type for inserting object relation for remote table "system.Configuration" */
export type System_Configuration_Obj_Rel_Insert_Input = {
  data: System_Configuration_Insert_Input;
  on_conflict?: Maybe<System_Configuration_On_Conflict>;
};

/** on conflict condition type for table "system.Configuration" */
export type System_Configuration_On_Conflict = {
  constraint: System_Configuration_Constraint;
  update_columns: Array<System_Configuration_Update_Column>;
  where?: Maybe<System_Configuration_Bool_Exp>;
};

/** ordering options when selecting data from "system.Configuration" */
export type System_Configuration_Order_By = {
  created_at?: Maybe<Order_By>;
  key?: Maybe<Order_By>;
  updated_at?: Maybe<Order_By>;
  value?: Maybe<Order_By>;
};

/** primary key columns input for table: "system.Configuration" */
export type System_Configuration_Pk_Columns_Input = {
  key: System_ConfigurationKey_Enum;
};

/** prepend existing jsonb value of filtered columns with new jsonb value */
export type System_Configuration_Prepend_Input = {
  value?: Maybe<Scalars['jsonb']>;
};

/** select columns of table "system.Configuration" */
export enum System_Configuration_Select_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Key = 'key',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Value = 'value'
}

/** input type for updating data in table "system.Configuration" */
export type System_Configuration_Set_Input = {
  created_at?: Maybe<Scalars['timestamptz']>;
  key?: Maybe<System_ConfigurationKey_Enum>;
  updated_at?: Maybe<Scalars['timestamptz']>;
  value?: Maybe<Scalars['jsonb']>;
};

/** update columns of table "system.Configuration" */
export enum System_Configuration_Update_Column {
  /** column name */
  CreatedAt = 'created_at',
  /** column name */
  Key = 'key',
  /** column name */
  UpdatedAt = 'updated_at',
  /** column name */
  Value = 'value'
}


/** expression to compare columns of type timestamptz. All fields are combined with logical 'AND'. */
export type Timestamptz_Comparison_Exp = {
  _eq?: Maybe<Scalars['timestamptz']>;
  _gt?: Maybe<Scalars['timestamptz']>;
  _gte?: Maybe<Scalars['timestamptz']>;
  _in?: Maybe<Array<Scalars['timestamptz']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['timestamptz']>;
  _lte?: Maybe<Scalars['timestamptz']>;
  _neq?: Maybe<Scalars['timestamptz']>;
  _nin?: Maybe<Array<Scalars['timestamptz']>>;
};


/** expression to compare columns of type uuid. All fields are combined with logical 'AND'. */
export type Uuid_Comparison_Exp = {
  _eq?: Maybe<Scalars['uuid']>;
  _gt?: Maybe<Scalars['uuid']>;
  _gte?: Maybe<Scalars['uuid']>;
  _in?: Maybe<Array<Scalars['uuid']>>;
  _is_null?: Maybe<Scalars['Boolean']>;
  _lt?: Maybe<Scalars['uuid']>;
  _lte?: Maybe<Scalars['uuid']>;
  _neq?: Maybe<Scalars['uuid']>;
  _nin?: Maybe<Array<Scalars['uuid']>>;
};

export type EmptyQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type EmptyQueryQuery = (
  { __typename?: 'query_root' }
  & { Conference: Array<(
    { __typename?: 'Conference' }
    & Pick<Conference, 'id'>
  )> }
);

export type AttendeeInfoQueryVariables = Exact<{
  attendeeId: Scalars['uuid'];
}>;


export type AttendeeInfoQuery = (
  { __typename?: 'query_root' }
  & { Attendee_by_pk?: Maybe<(
    { __typename?: 'Attendee' }
    & Pick<Attendee, 'id' | 'userId' | 'displayName'>
  )> }
);

export type ChatInfoQueryVariables = Exact<{
  chatId: Scalars['uuid'];
}>;


export type ChatInfoQuery = (
  { __typename?: 'query_root' }
  & { chat_Chat_by_pk?: Maybe<(
    { __typename?: 'chat_Chat' }
    & Pick<Chat_Chat, 'id' | 'restrictToAdmins'>
    & { conference: (
      { __typename?: 'Conference' }
      & Pick<Conference, 'id' | 'slug'>
    ), contentGroup: Array<(
      { __typename?: 'ContentGroup' }
      & Pick<ContentGroup, 'id' | 'title' | 'shortTitle'>
    )>, room: Array<(
      { __typename?: 'Room' }
      & Pick<Room, 'id' | 'name' | 'roomPrivacyName'>
      & { roomPeople: Array<(
        { __typename?: 'RoomPerson' }
        & Pick<RoomPerson, 'id'>
        & { attendee: (
          { __typename?: 'Attendee' }
          & Pick<Attendee, 'id' | 'userId'>
        ) }
      )> }
    )> }
  )> }
);

export type PinsQueryVariables = Exact<{
  chatId: Scalars['uuid'];
}>;


export type PinsQuery = (
  { __typename?: 'query_root' }
  & { chat_Pin: Array<(
    { __typename?: 'chat_Pin' }
    & Pick<Chat_Pin, 'chatId' | 'attendeeId'>
  )> }
);

export type PushNotificationSubscriptionsQueryVariables = Exact<{
  userId: Scalars['String'];
}>;


export type PushNotificationSubscriptionsQuery = (
  { __typename?: 'query_root' }
  & { PushNotificationSubscription: Array<(
    { __typename?: 'PushNotificationSubscription' }
    & Pick<PushNotificationSubscription, 'userId' | 'endpoint' | 'p256dh' | 'auth'>
  )> }
);

export type SubscriptionsQueryVariables = Exact<{
  chatId: Scalars['uuid'];
}>;


export type SubscriptionsQuery = (
  { __typename?: 'query_root' }
  & { chat_Subscription: Array<(
    { __typename?: 'chat_Subscription' }
    & Pick<Chat_Subscription, 'chatId' | 'attendeeId'>
  )> }
);

export type UserPermissionsQueryVariables = Exact<{
  userId: Scalars['String'];
}>;


export type UserPermissionsQuery = (
  { __typename?: 'query_root' }
  & { FlatUserPermission: Array<(
    { __typename?: 'FlatUserPermission' }
    & Pick<FlatUserPermission, 'slug' | 'permission_name' | 'user_id'>
  )> }
);

export type DeletePushNotificationSubscriptionMutationVariables = Exact<{
  endpoint: Scalars['String'];
}>;


export type DeletePushNotificationSubscriptionMutation = (
  { __typename?: 'mutation_root' }
  & { delete_PushNotificationSubscription_by_pk?: Maybe<(
    { __typename?: 'PushNotificationSubscription' }
    & Pick<PushNotificationSubscription, 'endpoint'>
  )> }
);

export type VapidKeysQueryVariables = Exact<{ [key: string]: never; }>;


export type VapidKeysQuery = (
  { __typename?: 'query_root' }
  & { publicKey?: Maybe<(
    { __typename?: 'system_Configuration' }
    & Pick<System_Configuration, 'key' | 'value'>
  )>, privateKey?: Maybe<(
    { __typename?: 'system_Configuration' }
    & Pick<System_Configuration, 'key' | 'value'>
  )> }
);

export type SetVapidKeysMutationVariables = Exact<{
  publicKey: Scalars['jsonb'];
  privateKey: Scalars['jsonb'];
}>;


export type SetVapidKeysMutation = (
  { __typename?: 'mutation_root' }
  & { insert_system_Configuration?: Maybe<(
    { __typename?: 'system_Configuration_mutation_response' }
    & Pick<System_Configuration_Mutation_Response, 'affected_rows'>
  )> }
);

export type InsertChatMessagesMutationVariables = Exact<{
  objects: Array<Chat_Message_Insert_Input> | Chat_Message_Insert_Input;
}>;


export type InsertChatMessagesMutation = (
  { __typename?: 'mutation_root' }
  & { insert_chat_Message?: Maybe<(
    { __typename?: 'chat_Message_mutation_response' }
    & { returning: Array<(
      { __typename?: 'chat_Message' }
      & Pick<Chat_Message, 'sId'>
    )> }
  )> }
);

export type UpdateChatMessageMutationVariables = Exact<{
  messageId: Scalars['uuid'];
  object: Chat_Message_Set_Input;
}>;


export type UpdateChatMessageMutation = (
  { __typename?: 'mutation_root' }
  & { update_chat_Message?: Maybe<(
    { __typename?: 'chat_Message_mutation_response' }
    & { returning: Array<(
      { __typename?: 'chat_Message' }
      & Pick<Chat_Message, 'sId'>
    )> }
  )> }
);

export type DeleteChatMessagesMutationVariables = Exact<{
  messageIds: Array<Scalars['uuid']> | Scalars['uuid'];
}>;


export type DeleteChatMessagesMutation = (
  { __typename?: 'mutation_root' }
  & { delete_chat_Message?: Maybe<(
    { __typename?: 'chat_Message_mutation_response' }
    & { returning: Array<(
      { __typename?: 'chat_Message' }
      & Pick<Chat_Message, 'sId'>
    )> }
  )> }
);

export type InsertChatReactionsMutationVariables = Exact<{
  objects: Array<Chat_Reaction_Insert_Input> | Chat_Reaction_Insert_Input;
}>;


export type InsertChatReactionsMutation = (
  { __typename?: 'mutation_root' }
  & { insert_chat_Reaction?: Maybe<(
    { __typename?: 'chat_Reaction_mutation_response' }
    & { returning: Array<(
      { __typename?: 'chat_Reaction' }
      & Pick<Chat_Reaction, 'sId'>
    )> }
  )> }
);

export type UpdateChatReactionMutationVariables = Exact<{
  reactionId: Scalars['uuid'];
  object: Chat_Reaction_Set_Input;
}>;


export type UpdateChatReactionMutation = (
  { __typename?: 'mutation_root' }
  & { update_chat_Reaction?: Maybe<(
    { __typename?: 'chat_Reaction_mutation_response' }
    & { returning: Array<(
      { __typename?: 'chat_Reaction' }
      & Pick<Chat_Reaction, 'sId'>
    )> }
  )> }
);

export type DeleteChatReactionsMutationVariables = Exact<{
  reactionIds: Array<Scalars['uuid']> | Scalars['uuid'];
}>;


export type DeleteChatReactionsMutation = (
  { __typename?: 'mutation_root' }
  & { delete_chat_Reaction?: Maybe<(
    { __typename?: 'chat_Reaction_mutation_response' }
    & { returning: Array<(
      { __typename?: 'chat_Reaction' }
      & Pick<Chat_Reaction, 'sId'>
    )> }
  )> }
);


export const EmptyQueryDocument: DocumentNode<EmptyQueryQuery, EmptyQueryQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"EmptyQuery"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Conference"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}}]}}]}}]};
export const AttendeeInfoDocument: DocumentNode<AttendeeInfoQuery, AttendeeInfoQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"AttendeeInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"attendeeId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"Attendee_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"attendeeId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"displayName"}}]}}]}}]};
export const ChatInfoDocument: DocumentNode<ChatInfoQuery, ChatInfoQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"ChatInfo"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"chatId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chat_Chat_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"id"},"value":{"kind":"Variable","name":{"kind":"Name","value":"chatId"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"restrictToAdmins"}},{"kind":"Field","name":{"kind":"Name","value":"conference"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"slug"}}]}},{"kind":"Field","name":{"kind":"Name","value":"contentGroup"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"title"}},{"kind":"Field","name":{"kind":"Name","value":"shortTitle"}}]}},{"kind":"Field","name":{"kind":"Name","value":"room"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"name"}},{"kind":"Field","name":{"kind":"Name","value":"roomPrivacyName"}},{"kind":"Field","name":{"kind":"Name","value":"roomPeople"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"attendee"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"id"}},{"kind":"Field","name":{"kind":"Name","value":"userId"}}]}}]}}]}}]}}]}}]};
export const PinsDocument: DocumentNode<PinsQuery, PinsQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Pins"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"chatId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chat_Pin"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"chatId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"chatId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chatId"}},{"kind":"Field","name":{"kind":"Name","value":"attendeeId"}}]}}]}}]};
export const PushNotificationSubscriptionsDocument: DocumentNode<PushNotificationSubscriptionsQuery, PushNotificationSubscriptionsQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"PushNotificationSubscriptions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"PushNotificationSubscription"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"userId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"userId"}},{"kind":"Field","name":{"kind":"Name","value":"endpoint"}},{"kind":"Field","name":{"kind":"Name","value":"p256dh"}},{"kind":"Field","name":{"kind":"Name","value":"auth"}}]}}]}}]};
export const SubscriptionsDocument: DocumentNode<SubscriptionsQuery, SubscriptionsQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"Subscriptions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"chatId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chat_Subscription"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"chatId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"chatId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"chatId"}},{"kind":"Field","name":{"kind":"Name","value":"attendeeId"}}]}}]}}]};
export const UserPermissionsDocument: DocumentNode<UserPermissionsQuery, UserPermissionsQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"UserPermissions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"userId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"FlatUserPermission"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"user_id"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"userId"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"slug"}},{"kind":"Field","name":{"kind":"Name","value":"permission_name"}},{"kind":"Field","name":{"kind":"Name","value":"user_id"}}]}}]}}]};
export const DeletePushNotificationSubscriptionDocument: DocumentNode<DeletePushNotificationSubscriptionMutation, DeletePushNotificationSubscriptionMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeletePushNotificationSubscription"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"endpoint"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"String"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"delete_PushNotificationSubscription_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"endpoint"},"value":{"kind":"Variable","name":{"kind":"Name","value":"endpoint"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"endpoint"}}]}}]}}]};
export const VapidKeysDocument: DocumentNode<VapidKeysQuery, VapidKeysQueryVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"query","name":{"kind":"Name","value":"VAPIDKeys"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","alias":{"kind":"Name","value":"publicKey"},"name":{"kind":"Name","value":"system_Configuration_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"key"},"value":{"kind":"EnumValue","value":"VAPID_PUBLIC_KEY"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}},{"kind":"Field","alias":{"kind":"Name","value":"privateKey"},"name":{"kind":"Name","value":"system_Configuration_by_pk"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"key"},"value":{"kind":"EnumValue","value":"VAPID_PRIVATE_KEY"}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"key"}},{"kind":"Field","name":{"kind":"Name","value":"value"}}]}}]}}]};
export const SetVapidKeysDocument: DocumentNode<SetVapidKeysMutation, SetVapidKeysMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"SetVAPIDKeys"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"publicKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"jsonb"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"privateKey"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"jsonb"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"insert_system_Configuration"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"ListValue","values":[{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"key"},"value":{"kind":"EnumValue","value":"VAPID_PUBLIC_KEY"}},{"kind":"ObjectField","name":{"kind":"Name","value":"value"},"value":{"kind":"Variable","name":{"kind":"Name","value":"publicKey"}}}]},{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"key"},"value":{"kind":"EnumValue","value":"VAPID_PRIVATE_KEY"}},{"kind":"ObjectField","name":{"kind":"Name","value":"value"},"value":{"kind":"Variable","name":{"kind":"Name","value":"privateKey"}}}]}]}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"Configuration_pkey"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[{"kind":"EnumValue","value":"value"}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"affected_rows"}}]}}]}}]};
export const InsertChatMessagesDocument: DocumentNode<InsertChatMessagesMutation, InsertChatMessagesMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"InsertChatMessages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"objects"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"chat_Message_insert_input"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"insert_chat_Message"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"Variable","name":{"kind":"Name","value":"objects"}}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"Message_sId_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sId"}}]}}]}}]}}]};
export const UpdateChatMessageDocument: DocumentNode<UpdateChatMessageMutation, UpdateChatMessageMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateChatMessage"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"messageId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"chat_Message_set_input"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_chat_Message"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"sId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"messageId"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sId"}}]}}]}}]}}]};
export const DeleteChatMessagesDocument: DocumentNode<DeleteChatMessagesMutation, DeleteChatMessagesMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteChatMessages"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"messageIds"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"delete_chat_Message"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"sId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"messageIds"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sId"}}]}}]}}]}}]};
export const InsertChatReactionsDocument: DocumentNode<InsertChatReactionsMutation, InsertChatReactionsMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"InsertChatReactions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"objects"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"chat_Reaction_insert_input"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"insert_chat_Reaction"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"objects"},"value":{"kind":"Variable","name":{"kind":"Name","value":"objects"}}},{"kind":"Argument","name":{"kind":"Name","value":"on_conflict"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"constraint"},"value":{"kind":"EnumValue","value":"Reaction_sId_key"}},{"kind":"ObjectField","name":{"kind":"Name","value":"update_columns"},"value":{"kind":"ListValue","values":[]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sId"}}]}}]}}]}}]};
export const UpdateChatReactionDocument: DocumentNode<UpdateChatReactionMutation, UpdateChatReactionMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"UpdateChatReaction"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"reactionId"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}},{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"object"}},"type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"chat_Reaction_set_input"}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"update_chat_Reaction"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"sId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_eq"},"value":{"kind":"Variable","name":{"kind":"Name","value":"reactionId"}}}]}}]}},{"kind":"Argument","name":{"kind":"Name","value":"_set"},"value":{"kind":"Variable","name":{"kind":"Name","value":"object"}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sId"}}]}}]}}]}}]};
export const DeleteChatReactionsDocument: DocumentNode<DeleteChatReactionsMutation, DeleteChatReactionsMutationVariables> = {"kind":"Document","definitions":[{"kind":"OperationDefinition","operation":"mutation","name":{"kind":"Name","value":"DeleteChatReactions"},"variableDefinitions":[{"kind":"VariableDefinition","variable":{"kind":"Variable","name":{"kind":"Name","value":"reactionIds"}},"type":{"kind":"NonNullType","type":{"kind":"ListType","type":{"kind":"NonNullType","type":{"kind":"NamedType","name":{"kind":"Name","value":"uuid"}}}}}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"delete_chat_Reaction"},"arguments":[{"kind":"Argument","name":{"kind":"Name","value":"where"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"sId"},"value":{"kind":"ObjectValue","fields":[{"kind":"ObjectField","name":{"kind":"Name","value":"_in"},"value":{"kind":"Variable","name":{"kind":"Name","value":"reactionIds"}}}]}}]}}],"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"returning"},"selectionSet":{"kind":"SelectionSet","selections":[{"kind":"Field","name":{"kind":"Name","value":"sId"}}]}}]}}]}}]};