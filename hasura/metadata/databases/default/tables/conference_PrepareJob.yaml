table:
  name: PrepareJob
  schema: conference
configuration:
  custom_column_names:
    created_at: createdAt
    updated_at: updatedAt
  custom_root_fields: {}
object_relationships:
- name: conference
  using:
    foreign_key_constraint_on: conferenceId
- name: jobStatus
  using:
    foreign_key_constraint_on: jobStatusName
array_relationships:
- name: videoRenderJobs
  using:
    foreign_key_constraint_on:
      column: conferencePrepareJobId
      table:
        name: VideoRenderJob
        schema: video
insert_permissions:
- permission:
    backend_only: false
    check:
      _and:
      - conference:
          slug:
            _eq: X-Hasura-Conference-Slug
      - _exists:
          _table:
            name: FlatUserPermission
            schema: public
          _where:
            _and:
            - user_id:
                _eq: X-Hasura-User-Id
            - slug:
                _eq: X-Hasura-Conference-Slug
            - permission_name:
                _eq: CONFERENCE_MANAGE_CONTENT
    columns:
    - conferenceId
  role: user
select_permissions:
- permission:
    columns:
    - conferenceId
    - created_at
    - id
    - jobStatusName
    - message
    - updated_at
    filter:
      _and:
      - conference:
          slug:
            _eq: X-Hasura-Conference-Slug
      - _exists:
          _table:
            name: FlatUserPermission
            schema: public
          _where:
            _and:
            - user_id:
                _eq: X-Hasura-User-Id
            - slug:
                _eq: X-Hasura-Conference-Slug
            - permission_name:
                _eq: CONFERENCE_MANAGE_CONTENT
  role: user
event_triggers:
- definition:
    enable_manual: false
    insert:
      columns: "*"
  headers:
  - name: x-hasura-event-secret
    value_from_env: EVENT_SECRET
  name: ConferencePrepareJobCreated
  retry_conf:
    interval_sec: 10
    num_retries: 0
    timeout_sec: 300
  webhook: "{{ACTION_BASE_URL}}/conferencePrepareJob/inserted"
